{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to the libaudiothek documentation","text":"<p>libaudiothek is a library for accessing the ARD Audiothek. ARD Audiothek is a service of the German public broadcaster ARD. It provides a large collection of audio files, mostly radio shows and podcasts.</p> <p>The Audiothek service provides a very complex GraphQL API. libaudiothek is a wrapper around this API. It provides a simple interface to access the audio files.</p>"},{"location":"audiothek_schema/","title":"The audiothek_schema classes","text":"<p>This is the complete schema for the audiothek.de GraphQL API</p>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Boolean","title":"<code>Boolean = sgqlc.types.Boolean</code>  <code>module-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DateTime","title":"<code>DateTime = sgqlc.types.datetime.DateTime</code>  <code>module-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Float","title":"<code>Float = sgqlc.types.Float</code>  <code>module-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ID","title":"<code>ID = sgqlc.types.ID</code>  <code>module-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Int","title":"<code>Int = sgqlc.types.Int</code>  <code>module-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.String","title":"<code>String = sgqlc.types.String</code>  <code>module-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.audiothek_schema","title":"<code>audiothek_schema = sgqlc.types.Schema()</code>  <code>module-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.AspectRatio","title":"<code>AspectRatio</code>","text":"<p>         Bases: <code>sgqlc.types.Enum</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class AspectRatio(sgqlc.types.Enum):\n    __schema__ = audiothek_schema\n    __choices__ = ('ASPECT_16x9', 'SQUARE')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.AspectRatio.__choices__","title":"<code>__choices__ = ('ASPECT_16x9', 'SQUARE')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.AspectRatio.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.AssetType","title":"<code>AssetType</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class AssetType(sgqlc.types.Type):\n    __schema__ = audiothek_schema\n    __field_names__ = ('url', 'download_url', 'allow_download',\n                       'size', 'title', 'mime_type')\n    url = sgqlc.types.Field(sgqlc.types.non_null(URL), graphql_name='url')\n    download_url = sgqlc.types.Field(URL, graphql_name='downloadUrl')\n    allow_download = sgqlc.types.Field(Boolean, graphql_name='allowDownload')\n    size = sgqlc.types.Field(Int, graphql_name='size')\n    title = sgqlc.types.Field(String, graphql_name='title')\n    mime_type = sgqlc.types.Field(\n        sgqlc.types.non_null(String), graphql_name='mimeType')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.AssetType.__field_names__","title":"<code>__field_names__ = ('url', 'download_url', 'allow_download', 'size', 'title', 'mime_type')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.AssetType.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.AssetType.allow_download","title":"<code>allow_download = sgqlc.types.Field(Boolean, graphql_name='allowDownload')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.AssetType.download_url","title":"<code>download_url = sgqlc.types.Field(URL, graphql_name='downloadUrl')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.AssetType.mime_type","title":"<code>mime_type = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='mimeType')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.AssetType.size","title":"<code>size = sgqlc.types.Field(Int, graphql_name='size')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.AssetType.title","title":"<code>title = sgqlc.types.Field(String, graphql_name='title')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.AssetType.url","title":"<code>url = sgqlc.types.Field(sgqlc.types.non_null(URL), graphql_name='url')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.AudioBinary","title":"<code>AudioBinary</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code>, <code>Node</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class AudioBinary(sgqlc.types.Type, Node):\n    __schema__ = audiothek_schema\n    __field_names__ = ('row_id', 'core_document', 'href', 'available_from', 'available_to', 'title',\n                       'adaptivity', 'distribution_type', 'packaging', 'audio_channel', 'audio_bitrate', 'audio_codec')\n    row_id = sgqlc.types.Field(\n        sgqlc.types.non_null(String), graphql_name='rowId')\n    core_document = sgqlc.types.Field(JSON, graphql_name='coreDocument')\n    href = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='href')\n    available_from = sgqlc.types.Field(Datetime, graphql_name='availableFrom')\n    available_to = sgqlc.types.Field(Datetime, graphql_name='availableTo')\n    title = sgqlc.types.Field(String, graphql_name='title')\n    adaptivity = sgqlc.types.Field(String, graphql_name='adaptivity')\n    distribution_type = sgqlc.types.Field(\n        String, graphql_name='distributionType')\n    packaging = sgqlc.types.Field(String, graphql_name='packaging')\n    audio_channel = sgqlc.types.Field(String, graphql_name='audioChannel')\n    audio_bitrate = sgqlc.types.Field(Int, graphql_name='audioBitrate')\n    audio_codec = sgqlc.types.Field(String, graphql_name='audioCodec')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.AudioBinary.__field_names__","title":"<code>__field_names__ = ('row_id', 'core_document', 'href', 'available_from', 'available_to', 'title', 'adaptivity', 'distribution_type', 'packaging', 'audio_channel', 'audio_bitrate', 'audio_codec')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.AudioBinary.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.AudioBinary.adaptivity","title":"<code>adaptivity = sgqlc.types.Field(String, graphql_name='adaptivity')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.AudioBinary.audio_bitrate","title":"<code>audio_bitrate = sgqlc.types.Field(Int, graphql_name='audioBitrate')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.AudioBinary.audio_channel","title":"<code>audio_channel = sgqlc.types.Field(String, graphql_name='audioChannel')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.AudioBinary.audio_codec","title":"<code>audio_codec = sgqlc.types.Field(String, graphql_name='audioCodec')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.AudioBinary.available_from","title":"<code>available_from = sgqlc.types.Field(Datetime, graphql_name='availableFrom')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.AudioBinary.available_to","title":"<code>available_to = sgqlc.types.Field(Datetime, graphql_name='availableTo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.AudioBinary.core_document","title":"<code>core_document = sgqlc.types.Field(JSON, graphql_name='coreDocument')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.AudioBinary.distribution_type","title":"<code>distribution_type = sgqlc.types.Field(String, graphql_name='distributionType')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.AudioBinary.href","title":"<code>href = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='href')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.AudioBinary.packaging","title":"<code>packaging = sgqlc.types.Field(String, graphql_name='packaging')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.AudioBinary.row_id","title":"<code>row_id = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='rowId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.AudioBinary.title","title":"<code>title = sgqlc.types.Field(String, graphql_name='title')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BigInt","title":"<code>BigInt</code>","text":"<p>         Bases: <code>sgqlc.types.Scalar</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class BigInt(sgqlc.types.Scalar):\n    __schema__ = audiothek_schema\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BigInt.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BigIntFilter","title":"<code>BigIntFilter</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class BigIntFilter(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('is_null', 'equal_to', 'not_equal_to', 'distinct_from', 'not_distinct_from',\n                       'in_', 'not_in', 'less_than', 'less_than_or_equal_to', 'greater_than', 'greater_than_or_equal_to')\n    is_null = sgqlc.types.Field(Boolean, graphql_name='isNull')\n    equal_to = sgqlc.types.Field(BigInt, graphql_name='equalTo')\n    not_equal_to = sgqlc.types.Field(BigInt, graphql_name='notEqualTo')\n    distinct_from = sgqlc.types.Field(BigInt, graphql_name='distinctFrom')\n    not_distinct_from = sgqlc.types.Field(\n        BigInt, graphql_name='notDistinctFrom')\n    in_ = sgqlc.types.Field(sgqlc.types.list_of(\n        sgqlc.types.non_null(BigInt)), graphql_name='in')\n    not_in = sgqlc.types.Field(sgqlc.types.list_of(\n        sgqlc.types.non_null(BigInt)), graphql_name='notIn')\n    less_than = sgqlc.types.Field(BigInt, graphql_name='lessThan')\n    less_than_or_equal_to = sgqlc.types.Field(\n        BigInt, graphql_name='lessThanOrEqualTo')\n    greater_than = sgqlc.types.Field(BigInt, graphql_name='greaterThan')\n    greater_than_or_equal_to = sgqlc.types.Field(\n        BigInt, graphql_name='greaterThanOrEqualTo')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BigIntFilter.__field_names__","title":"<code>__field_names__ = ('is_null', 'equal_to', 'not_equal_to', 'distinct_from', 'not_distinct_from', 'in_', 'not_in', 'less_than', 'less_than_or_equal_to', 'greater_than', 'greater_than_or_equal_to')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BigIntFilter.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BigIntFilter.distinct_from","title":"<code>distinct_from = sgqlc.types.Field(BigInt, graphql_name='distinctFrom')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BigIntFilter.equal_to","title":"<code>equal_to = sgqlc.types.Field(BigInt, graphql_name='equalTo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BigIntFilter.greater_than","title":"<code>greater_than = sgqlc.types.Field(BigInt, graphql_name='greaterThan')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BigIntFilter.greater_than_or_equal_to","title":"<code>greater_than_or_equal_to = sgqlc.types.Field(BigInt, graphql_name='greaterThanOrEqualTo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BigIntFilter.in_","title":"<code>in_ = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null(BigInt)), graphql_name='in')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BigIntFilter.is_null","title":"<code>is_null = sgqlc.types.Field(Boolean, graphql_name='isNull')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BigIntFilter.less_than","title":"<code>less_than = sgqlc.types.Field(BigInt, graphql_name='lessThan')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BigIntFilter.less_than_or_equal_to","title":"<code>less_than_or_equal_to = sgqlc.types.Field(BigInt, graphql_name='lessThanOrEqualTo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BigIntFilter.not_distinct_from","title":"<code>not_distinct_from = sgqlc.types.Field(BigInt, graphql_name='notDistinctFrom')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BigIntFilter.not_equal_to","title":"<code>not_equal_to = sgqlc.types.Field(BigInt, graphql_name='notEqualTo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BigIntFilter.not_in","title":"<code>not_in = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null(BigInt)), graphql_name='notIn')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BigIntFilterB","title":"<code>BigIntFilterB</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class BigIntFilterB(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('eq', 'ne', 'in_', 'gt', 'gte', 'lt', 'lte')\n    eq = sgqlc.types.Field(BigInt, graphql_name='eq')\n    ne = sgqlc.types.Field(BigInt, graphql_name='ne')\n    in_ = sgqlc.types.Field(sgqlc.types.list_of(BigInt), graphql_name='in')\n    gt = sgqlc.types.Field(BigInt, graphql_name='gt')\n    gte = sgqlc.types.Field(BigInt, graphql_name='gte')\n    lt = sgqlc.types.Field(BigInt, graphql_name='lt')\n    lte = sgqlc.types.Field(BigInt, graphql_name='lte')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BigIntFilterB.__field_names__","title":"<code>__field_names__ = ('eq', 'ne', 'in_', 'gt', 'gte', 'lt', 'lte')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BigIntFilterB.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BigIntFilterB.eq","title":"<code>eq = sgqlc.types.Field(BigInt, graphql_name='eq')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BigIntFilterB.gt","title":"<code>gt = sgqlc.types.Field(BigInt, graphql_name='gt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BigIntFilterB.gte","title":"<code>gte = sgqlc.types.Field(BigInt, graphql_name='gte')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BigIntFilterB.in_","title":"<code>in_ = sgqlc.types.Field(sgqlc.types.list_of(BigInt), graphql_name='in')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BigIntFilterB.lt","title":"<code>lt = sgqlc.types.Field(BigInt, graphql_name='lt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BigIntFilterB.lte","title":"<code>lte = sgqlc.types.Field(BigInt, graphql_name='lte')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BigIntFilterB.ne","title":"<code>ne = sgqlc.types.Field(BigInt, graphql_name='ne')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Board","title":"<code>Board</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class Board(sgqlc.types.Type):\n    __schema__ = audiothek_schema\n    __field_names__ = ('tracking', 'id', 'title', 'image', 'sections', 'widgets', 'sharing_url',\n                       'recent_items', 'recent_items_list', 'program_sets', 'program_sets_list')\n    tracking = sgqlc.types.Field(JSON, graphql_name='tracking')\n    id = sgqlc.types.Field(sgqlc.types.non_null(ID), graphql_name='id')\n    title = sgqlc.types.Field(String, graphql_name='title')\n    image = sgqlc.types.Field('ImageType', graphql_name='image')\n    sections = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('Section')), graphql_name='sections', args=sgqlc.types.ArgDict((\n        ('hide_unresolved_teasers', sgqlc.types.Arg(\n            Boolean, graphql_name='hideUnresolvedTeasers', default=True)),\n        ('hide_personalizied_sections', sgqlc.types.Arg(\n            Boolean, graphql_name='hidePersonaliziedSections', default=False)),\n        ('hide_errors', sgqlc.types.Arg(\n            Boolean, graphql_name='hideErrors', default=True)),\n        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),\n        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=0)),\n    ))\n    )\n    widgets = sgqlc.types.Field(sgqlc.types.list_of(\n        sgqlc.types.non_null('SophoraWidget')), graphql_name='widgets')\n    sharing_url = sgqlc.types.Field(URL, graphql_name='sharingUrl')\n    recent_items = sgqlc.types.Field(sgqlc.types.non_null('ItemsConnection'), graphql_name='recentItems', args=sgqlc.types.ArgDict((\n        ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)),\n        ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)),\n        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),\n        ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)),\n        ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)),\n        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(\n            sgqlc.types.non_null(ItemsOrderBy)), graphql_name='orderBy', default=None)),\n        ('condition', sgqlc.types.Arg(ItemCondition,\n         graphql_name='condition', default=None)),\n        ('filter', sgqlc.types.Arg(ItemFilter, graphql_name='filter', default=None)),\n    ))\n    )\n    recent_items_list = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('Item')), graphql_name='recentItemsList', args=sgqlc.types.ArgDict((\n        ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)),\n        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),\n        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(\n            sgqlc.types.non_null(ItemsOrderBy)), graphql_name='orderBy', default=None)),\n        ('condition', sgqlc.types.Arg(ItemCondition,\n         graphql_name='condition', default=None)),\n        ('filter', sgqlc.types.Arg(ItemFilter, graphql_name='filter', default=None)),\n    ))\n    )\n    program_sets = sgqlc.types.Field(sgqlc.types.non_null('EditorialCategoryProgramSetsManyToManyConnection'), graphql_name='programSets', args=sgqlc.types.ArgDict((\n        ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)),\n        ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)),\n        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),\n        ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)),\n        ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)),\n        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(\n            ProgramSetsOrderBy)), graphql_name='orderBy', default=('PRIMARY_KEY_ASC',))),\n        ('condition', sgqlc.types.Arg(ProgramSetCondition,\n         graphql_name='condition', default=None)),\n        ('filter', sgqlc.types.Arg(ProgramSetFilter,\n         graphql_name='filter', default=None)),\n    ))\n    )\n    program_sets_list = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('ProgramSet'))), graphql_name='programSetsList', args=sgqlc.types.ArgDict((\n        ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)),\n        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),\n        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(\n            ProgramSetsOrderBy)), graphql_name='orderBy', default=None)),\n        ('condition', sgqlc.types.Arg(ProgramSetCondition,\n         graphql_name='condition', default=None)),\n        ('filter', sgqlc.types.Arg(ProgramSetFilter,\n         graphql_name='filter', default=None)),\n    ))\n    )\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Board.__field_names__","title":"<code>__field_names__ = ('tracking', 'id', 'title', 'image', 'sections', 'widgets', 'sharing_url', 'recent_items', 'recent_items_list', 'program_sets', 'program_sets_list')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Board.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Board.id","title":"<code>id = sgqlc.types.Field(sgqlc.types.non_null(ID), graphql_name='id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Board.image","title":"<code>image = sgqlc.types.Field('ImageType', graphql_name='image')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Board.program_sets","title":"<code>program_sets = sgqlc.types.Field(sgqlc.types.non_null('EditorialCategoryProgramSetsManyToManyConnection'), graphql_name='programSets', args=sgqlc.types.ArgDict((('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)), ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)), ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)), ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)), ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)), ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(ProgramSetsOrderBy)), graphql_name='orderBy', default=('PRIMARY_KEY_ASC'))), ('condition', sgqlc.types.Arg(ProgramSetCondition, graphql_name='condition', default=None)), ('filter', sgqlc.types.Arg(ProgramSetFilter, graphql_name='filter', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Board.program_sets_list","title":"<code>program_sets_list = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('ProgramSet'))), graphql_name='programSetsList', args=sgqlc.types.ArgDict((('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)), ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)), ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(ProgramSetsOrderBy)), graphql_name='orderBy', default=None)), ('condition', sgqlc.types.Arg(ProgramSetCondition, graphql_name='condition', default=None)), ('filter', sgqlc.types.Arg(ProgramSetFilter, graphql_name='filter', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Board.recent_items","title":"<code>recent_items = sgqlc.types.Field(sgqlc.types.non_null('ItemsConnection'), graphql_name='recentItems', args=sgqlc.types.ArgDict((('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)), ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)), ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)), ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)), ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)), ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(ItemsOrderBy)), graphql_name='orderBy', default=None)), ('condition', sgqlc.types.Arg(ItemCondition, graphql_name='condition', default=None)), ('filter', sgqlc.types.Arg(ItemFilter, graphql_name='filter', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Board.recent_items_list","title":"<code>recent_items_list = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('Item')), graphql_name='recentItemsList', args=sgqlc.types.ArgDict((('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)), ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)), ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(ItemsOrderBy)), graphql_name='orderBy', default=None)), ('condition', sgqlc.types.Arg(ItemCondition, graphql_name='condition', default=None)), ('filter', sgqlc.types.Arg(ItemFilter, graphql_name='filter', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Board.sections","title":"<code>sections = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('Section')), graphql_name='sections', args=sgqlc.types.ArgDict((('hide_unresolved_teasers', sgqlc.types.Arg(Boolean, graphql_name='hideUnresolvedTeasers', default=True)), ('hide_personalizied_sections', sgqlc.types.Arg(Boolean, graphql_name='hidePersonaliziedSections', default=False)), ('hide_errors', sgqlc.types.Arg(Boolean, graphql_name='hideErrors', default=True)), ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)), ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=0)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Board.sharing_url","title":"<code>sharing_url = sgqlc.types.Field(URL, graphql_name='sharingUrl')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Board.title","title":"<code>title = sgqlc.types.Field(String, graphql_name='title')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Board.tracking","title":"<code>tracking = sgqlc.types.Field(JSON, graphql_name='tracking')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Board.widgets","title":"<code>widgets = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('SophoraWidget')), graphql_name='widgets')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Bookmark","title":"<code>Bookmark</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code>, <code>BookmarkInterface</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class Bookmark(sgqlc.types.Type, BookmarkInterface):\n    __schema__ = audiothek_schema\n    __field_names__ = ()\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Bookmark.__field_names__","title":"<code>__field_names__ = ()</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Bookmark.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkConnection","title":"<code>BookmarkConnection</code>","text":"<p>         Bases: <code>sgqlc.types.relay.Connection</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class BookmarkConnection(sgqlc.types.relay.Connection):\n    __schema__ = audiothek_schema\n    __field_names__ = ('count', 'edges', 'nodes', 'page_info')\n    count = sgqlc.types.Field(Int, graphql_name='count')\n    edges = sgqlc.types.Field(sgqlc.types.list_of(\n        'BookmarkEdge'), graphql_name='edges')\n    nodes = sgqlc.types.Field(sgqlc.types.list_of(\n        'BookmarkInterface'), graphql_name='nodes')\n    page_info = sgqlc.types.Field(sgqlc.types.non_null(\n        'PageInfo'), graphql_name='pageInfo')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkConnection.__field_names__","title":"<code>__field_names__ = ('count', 'edges', 'nodes', 'page_info')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkConnection.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkConnection.count","title":"<code>count = sgqlc.types.Field(Int, graphql_name='count')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkConnection.edges","title":"<code>edges = sgqlc.types.Field(sgqlc.types.list_of('BookmarkEdge'), graphql_name='edges')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkConnection.nodes","title":"<code>nodes = sgqlc.types.Field(sgqlc.types.list_of('BookmarkInterface'), graphql_name='nodes')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkConnection.page_info","title":"<code>page_info = sgqlc.types.Field(sgqlc.types.non_null('PageInfo'), graphql_name='pageInfo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkConnectionFilterB","title":"<code>BookmarkConnectionFilterB</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class BookmarkConnectionFilterB(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('bookmarked_at', 'created_at', 'modified_at', 'empty')\n    bookmarked_at = sgqlc.types.Field(\n        'DateFilterB', graphql_name='bookmarkedAt')\n    created_at = sgqlc.types.Field('DateFilterB', graphql_name='createdAt')\n    modified_at = sgqlc.types.Field('DateFilterB', graphql_name='modifiedAt')\n    empty = sgqlc.types.Field('BooleanFilterB', graphql_name='empty')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkConnectionFilterB.__field_names__","title":"<code>__field_names__ = ('bookmarked_at', 'created_at', 'modified_at', 'empty')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkConnectionFilterB.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkConnectionFilterB.bookmarked_at","title":"<code>bookmarked_at = sgqlc.types.Field('DateFilterB', graphql_name='bookmarkedAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkConnectionFilterB.created_at","title":"<code>created_at = sgqlc.types.Field('DateFilterB', graphql_name='createdAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkConnectionFilterB.empty","title":"<code>empty = sgqlc.types.Field('BooleanFilterB', graphql_name='empty')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkConnectionFilterB.modified_at","title":"<code>modified_at = sgqlc.types.Field('DateFilterB', graphql_name='modifiedAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkCreateInput","title":"<code>BookmarkCreateInput</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class BookmarkCreateInput(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('type', 'bookmarked_at', 'item')\n    type = sgqlc.types.Field(String, graphql_name='type')\n    bookmarked_at = sgqlc.types.Field(DateTime, graphql_name='bookmarkedAt')\n    item = sgqlc.types.Field(sgqlc.types.non_null(\n        'ItemCreateInput'), graphql_name='item')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkCreateInput.__field_names__","title":"<code>__field_names__ = ('type', 'bookmarked_at', 'item')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkCreateInput.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkCreateInput.bookmarked_at","title":"<code>bookmarked_at = sgqlc.types.Field(DateTime, graphql_name='bookmarkedAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkCreateInput.item","title":"<code>item = sgqlc.types.Field(sgqlc.types.non_null('ItemCreateInput'), graphql_name='item')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkCreateInput.type","title":"<code>type = sgqlc.types.Field(String, graphql_name='type')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkEdge","title":"<code>BookmarkEdge</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class BookmarkEdge(sgqlc.types.Type):\n    __schema__ = audiothek_schema\n    __field_names__ = ('cursor', 'node')\n    cursor = sgqlc.types.Field(\n        sgqlc.types.non_null(String), graphql_name='cursor')\n    node = sgqlc.types.Field('BookmarkInterface', graphql_name='node')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkEdge.__field_names__","title":"<code>__field_names__ = ('cursor', 'node')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkEdge.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkEdge.cursor","title":"<code>cursor = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='cursor')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkEdge.node","title":"<code>node = sgqlc.types.Field('BookmarkInterface', graphql_name='node')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkFilterB","title":"<code>BookmarkFilterB</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class BookmarkFilterB(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('bookmarked_at', 'created_at', 'modified_at')\n    bookmarked_at = sgqlc.types.Field(\n        'DateFilterB', graphql_name='bookmarkedAt')\n    created_at = sgqlc.types.Field('DateFilterB', graphql_name='createdAt')\n    modified_at = sgqlc.types.Field('DateFilterB', graphql_name='modifiedAt')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkFilterB.__field_names__","title":"<code>__field_names__ = ('bookmarked_at', 'created_at', 'modified_at')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkFilterB.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkFilterB.bookmarked_at","title":"<code>bookmarked_at = sgqlc.types.Field('DateFilterB', graphql_name='bookmarkedAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkFilterB.created_at","title":"<code>created_at = sgqlc.types.Field('DateFilterB', graphql_name='createdAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkFilterB.modified_at","title":"<code>modified_at = sgqlc.types.Field('DateFilterB', graphql_name='modifiedAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkInterface","title":"<code>BookmarkInterface</code>","text":"<p>         Bases: <code>sgqlc.types.Interface</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class BookmarkInterface(sgqlc.types.Interface):\n    __schema__ = audiothek_schema\n    __field_names__ = ('id', 'base_id_prefix', 'belongs_to',\n                       'bookmarked_at', 'created_at', 'item', 'modified_at')\n    id = sgqlc.types.Field(sgqlc.types.non_null(ID), graphql_name='id')\n    base_id_prefix = sgqlc.types.Field(\n        sgqlc.types.non_null(String), graphql_name='baseIdPrefix')\n    belongs_to = sgqlc.types.Field(\n        'BookmarkListInterface', graphql_name='belongsTo')\n    bookmarked_at = sgqlc.types.Field(DateTime, graphql_name='bookmarkedAt')\n    created_at = sgqlc.types.Field(DateTime, graphql_name='createdAt')\n    item = sgqlc.types.Field('Item', graphql_name='item')\n    modified_at = sgqlc.types.Field(DateTime, graphql_name='modifiedAt')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkInterface.__field_names__","title":"<code>__field_names__ = ('id', 'base_id_prefix', 'belongs_to', 'bookmarked_at', 'created_at', 'item', 'modified_at')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkInterface.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkInterface.base_id_prefix","title":"<code>base_id_prefix = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='baseIdPrefix')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkInterface.belongs_to","title":"<code>belongs_to = sgqlc.types.Field('BookmarkListInterface', graphql_name='belongsTo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkInterface.bookmarked_at","title":"<code>bookmarked_at = sgqlc.types.Field(DateTime, graphql_name='bookmarkedAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkInterface.created_at","title":"<code>created_at = sgqlc.types.Field(DateTime, graphql_name='createdAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkInterface.id","title":"<code>id = sgqlc.types.Field(sgqlc.types.non_null(ID), graphql_name='id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkInterface.item","title":"<code>item = sgqlc.types.Field('Item', graphql_name='item')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkInterface.modified_at","title":"<code>modified_at = sgqlc.types.Field(DateTime, graphql_name='modifiedAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkList","title":"<code>BookmarkList</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code>, <code>BookmarkListInterface</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class BookmarkList(sgqlc.types.Type, BookmarkListInterface):\n    __schema__ = audiothek_schema\n    __field_names__ = ()\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkList.__field_names__","title":"<code>__field_names__ = ()</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkList.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkListConnection","title":"<code>BookmarkListConnection</code>","text":"<p>         Bases: <code>sgqlc.types.relay.Connection</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class BookmarkListConnection(sgqlc.types.relay.Connection):\n    __schema__ = audiothek_schema\n    __field_names__ = ('count', 'edges', 'nodes', 'page_info')\n    count = sgqlc.types.Field(Int, graphql_name='count')\n    edges = sgqlc.types.Field(sgqlc.types.list_of(\n        'BookmarkListEdge'), graphql_name='edges')\n    nodes = sgqlc.types.Field(sgqlc.types.list_of(\n        'BookmarkListInterface'), graphql_name='nodes')\n    page_info = sgqlc.types.Field(sgqlc.types.non_null(\n        'PageInfo'), graphql_name='pageInfo')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkListConnection.__field_names__","title":"<code>__field_names__ = ('count', 'edges', 'nodes', 'page_info')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkListConnection.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkListConnection.count","title":"<code>count = sgqlc.types.Field(Int, graphql_name='count')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkListConnection.edges","title":"<code>edges = sgqlc.types.Field(sgqlc.types.list_of('BookmarkListEdge'), graphql_name='edges')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkListConnection.nodes","title":"<code>nodes = sgqlc.types.Field(sgqlc.types.list_of('BookmarkListInterface'), graphql_name='nodes')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkListConnection.page_info","title":"<code>page_info = sgqlc.types.Field(sgqlc.types.non_null('PageInfo'), graphql_name='pageInfo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkListConnectionFilterB","title":"<code>BookmarkListConnectionFilterB</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class BookmarkListConnectionFilterB(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('empty', 'contains')\n    empty = sgqlc.types.Field('BooleanFilterB', graphql_name='empty')\n    contains = sgqlc.types.Field(ID, graphql_name='contains')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkListConnectionFilterB.__field_names__","title":"<code>__field_names__ = ('empty', 'contains')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkListConnectionFilterB.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkListConnectionFilterB.contains","title":"<code>contains = sgqlc.types.Field(ID, graphql_name='contains')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkListConnectionFilterB.empty","title":"<code>empty = sgqlc.types.Field('BooleanFilterB', graphql_name='empty')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkListCreateInput","title":"<code>BookmarkListCreateInput</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class BookmarkListCreateInput(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('client_mutation_id', 'type', 'entries')\n    client_mutation_id = sgqlc.types.Field(\n        String, graphql_name='clientMutationId')\n    type = sgqlc.types.Field(String, graphql_name='type')\n    entries = sgqlc.types.Field(sgqlc.types.non_null(\n        sgqlc.types.list_of(BookmarkCreateInput)), graphql_name='entries')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkListCreateInput.__field_names__","title":"<code>__field_names__ = ('client_mutation_id', 'type', 'entries')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkListCreateInput.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkListCreateInput.client_mutation_id","title":"<code>client_mutation_id = sgqlc.types.Field(String, graphql_name='clientMutationId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkListCreateInput.entries","title":"<code>entries = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(BookmarkCreateInput)), graphql_name='entries')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkListCreateInput.type","title":"<code>type = sgqlc.types.Field(String, graphql_name='type')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkListEdge","title":"<code>BookmarkListEdge</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class BookmarkListEdge(sgqlc.types.Type):\n    __schema__ = audiothek_schema\n    __field_names__ = ('cursor', 'node')\n    cursor = sgqlc.types.Field(\n        sgqlc.types.non_null(String), graphql_name='cursor')\n    node = sgqlc.types.Field('BookmarkListInterface', graphql_name='node')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkListEdge.__field_names__","title":"<code>__field_names__ = ('cursor', 'node')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkListEdge.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkListEdge.cursor","title":"<code>cursor = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='cursor')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkListEdge.node","title":"<code>node = sgqlc.types.Field('BookmarkListInterface', graphql_name='node')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkListEntryListInput","title":"<code>BookmarkListEntryListInput</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class BookmarkListEntryListInput(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('client_mutation_id', 'entry', 'bookmark_list')\n    client_mutation_id = sgqlc.types.Field(\n        String, graphql_name='clientMutationId')\n    entry = sgqlc.types.Field(sgqlc.types.non_null(\n        BookmarkCreateInput), graphql_name='entry')\n    bookmark_list = sgqlc.types.Field(\n        sgqlc.types.non_null(ID), graphql_name='bookmarkList')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkListEntryListInput.__field_names__","title":"<code>__field_names__ = ('client_mutation_id', 'entry', 'bookmark_list')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkListEntryListInput.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkListEntryListInput.bookmark_list","title":"<code>bookmark_list = sgqlc.types.Field(sgqlc.types.non_null(ID), graphql_name='bookmarkList')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkListEntryListInput.client_mutation_id","title":"<code>client_mutation_id = sgqlc.types.Field(String, graphql_name='clientMutationId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkListEntryListInput.entry","title":"<code>entry = sgqlc.types.Field(sgqlc.types.non_null(BookmarkCreateInput), graphql_name='entry')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkListFilterB","title":"<code>BookmarkListFilterB</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class BookmarkListFilterB(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('created_at', 'entries', 'modified_at', 'user')\n    created_at = sgqlc.types.Field('DateFilterB', graphql_name='createdAt')\n    entries = sgqlc.types.Field(\n        BookmarkConnectionFilterB, graphql_name='entries')\n    modified_at = sgqlc.types.Field('DateFilterB', graphql_name='modifiedAt')\n    user = sgqlc.types.Field('EndUserRelationFilterB', graphql_name='user')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkListFilterB.__field_names__","title":"<code>__field_names__ = ('created_at', 'entries', 'modified_at', 'user')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkListFilterB.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkListFilterB.created_at","title":"<code>created_at = sgqlc.types.Field('DateFilterB', graphql_name='createdAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkListFilterB.entries","title":"<code>entries = sgqlc.types.Field(BookmarkConnectionFilterB, graphql_name='entries')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkListFilterB.modified_at","title":"<code>modified_at = sgqlc.types.Field('DateFilterB', graphql_name='modifiedAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkListFilterB.user","title":"<code>user = sgqlc.types.Field('EndUserRelationFilterB', graphql_name='user')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkListInterface","title":"<code>BookmarkListInterface</code>","text":"<p>         Bases: <code>sgqlc.types.Interface</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class BookmarkListInterface(sgqlc.types.Interface):\n    __schema__ = audiothek_schema\n    __field_names__ = ('id', 'base_id_prefix', 'created_at',\n                       'entries', 'modified_at', 'user')\n    id = sgqlc.types.Field(sgqlc.types.non_null(ID), graphql_name='id')\n    base_id_prefix = sgqlc.types.Field(\n        sgqlc.types.non_null(String), graphql_name='baseIdPrefix')\n    created_at = sgqlc.types.Field(DateTime, graphql_name='createdAt')\n    entries = sgqlc.types.Field(BookmarkConnection, graphql_name='entries', args=sgqlc.types.ArgDict((\n        ('after', sgqlc.types.Arg(String, graphql_name='after', default=None)),\n        ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)),\n        ('before', sgqlc.types.Arg(String, graphql_name='before', default=None)),\n        ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)),\n        ('filter', sgqlc.types.Arg(BookmarkFilterB,\n         graphql_name='filter', default=None)),\n        ('order_by', sgqlc.types.Arg(BookmarkSortOrder,\n         graphql_name='orderBy', default=None)),\n    ))\n    )\n    modified_at = sgqlc.types.Field(DateTime, graphql_name='modifiedAt')\n    user = sgqlc.types.Field('EndUserInterface', graphql_name='user')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkListInterface.__field_names__","title":"<code>__field_names__ = ('id', 'base_id_prefix', 'created_at', 'entries', 'modified_at', 'user')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkListInterface.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkListInterface.base_id_prefix","title":"<code>base_id_prefix = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='baseIdPrefix')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkListInterface.created_at","title":"<code>created_at = sgqlc.types.Field(DateTime, graphql_name='createdAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkListInterface.entries","title":"<code>entries = sgqlc.types.Field(BookmarkConnection, graphql_name='entries', args=sgqlc.types.ArgDict((('after', sgqlc.types.Arg(String, graphql_name='after', default=None)), ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)), ('before', sgqlc.types.Arg(String, graphql_name='before', default=None)), ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)), ('filter', sgqlc.types.Arg(BookmarkFilterB, graphql_name='filter', default=None)), ('order_by', sgqlc.types.Arg(BookmarkSortOrder, graphql_name='orderBy', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkListInterface.id","title":"<code>id = sgqlc.types.Field(sgqlc.types.non_null(ID), graphql_name='id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkListInterface.modified_at","title":"<code>modified_at = sgqlc.types.Field(DateTime, graphql_name='modifiedAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkListInterface.user","title":"<code>user = sgqlc.types.Field('EndUserInterface', graphql_name='user')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkListPayload","title":"<code>BookmarkListPayload</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class BookmarkListPayload(sgqlc.types.Type):\n    __schema__ = audiothek_schema\n    __field_names__ = ('client_mutation_id', 'changed_bookmark_list')\n    client_mutation_id = sgqlc.types.Field(\n        String, graphql_name='clientMutationId')\n    changed_bookmark_list = sgqlc.types.Field(\n        'BookmarkList', graphql_name='changedBookmarkList')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkListPayload.__field_names__","title":"<code>__field_names__ = ('client_mutation_id', 'changed_bookmark_list')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkListPayload.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkListPayload.changed_bookmark_list","title":"<code>changed_bookmark_list = sgqlc.types.Field('BookmarkList', graphql_name='changedBookmarkList')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkListPayload.client_mutation_id","title":"<code>client_mutation_id = sgqlc.types.Field(String, graphql_name='clientMutationId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkListRelationFilterB","title":"<code>BookmarkListRelationFilterB</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class BookmarkListRelationFilterB(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('id', 'exists')\n    id = sgqlc.types.Field('IDFilterB', graphql_name='id')\n    exists = sgqlc.types.Field('BooleanFilterB', graphql_name='exists')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkListRelationFilterB.__field_names__","title":"<code>__field_names__ = ('id', 'exists')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkListRelationFilterB.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkListRelationFilterB.exists","title":"<code>exists = sgqlc.types.Field('BooleanFilterB', graphql_name='exists')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkListRelationFilterB.id","title":"<code>id = sgqlc.types.Field('IDFilterB', graphql_name='id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkListRemoveAllListInput","title":"<code>BookmarkListRemoveAllListInput</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class BookmarkListRemoveAllListInput(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('client_mutation_id', 'bookmark_list')\n    client_mutation_id = sgqlc.types.Field(\n        String, graphql_name='clientMutationId')\n    bookmark_list = sgqlc.types.Field(\n        sgqlc.types.non_null(ID), graphql_name='bookmarkList')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkListRemoveAllListInput.__field_names__","title":"<code>__field_names__ = ('client_mutation_id', 'bookmark_list')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkListRemoveAllListInput.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkListRemoveAllListInput.bookmark_list","title":"<code>bookmark_list = sgqlc.types.Field(sgqlc.types.non_null(ID), graphql_name='bookmarkList')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkListRemoveAllListInput.client_mutation_id","title":"<code>client_mutation_id = sgqlc.types.Field(String, graphql_name='clientMutationId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkListSortOrder","title":"<code>BookmarkListSortOrder</code>","text":"<p>         Bases: <code>sgqlc.types.Enum</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class BookmarkListSortOrder(sgqlc.types.Enum):\n    __schema__ = audiothek_schema\n    __choices__ = ('CREATEDAT_ASC', 'CREATEDAT_DESC', 'ENTRIES_BOOKMARKEDAT_ASC', 'ENTRIES_BOOKMARKEDAT_DESC', 'ENTRIES_CREATEDAT_ASC', 'ENTRIES_CREATEDAT_DESC',\n                   'ENTRIES_ITEM_ID_ASC', 'ENTRIES_ITEM_ID_DESC', 'ENTRIES_MODIFIEDAT_ASC', 'ENTRIES_MODIFIEDAT_DESC', 'MODIFIEDAT_ASC', 'MODIFIEDAT_DESC')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkListSortOrder.__choices__","title":"<code>__choices__ = ('CREATEDAT_ASC', 'CREATEDAT_DESC', 'ENTRIES_BOOKMARKEDAT_ASC', 'ENTRIES_BOOKMARKEDAT_DESC', 'ENTRIES_CREATEDAT_ASC', 'ENTRIES_CREATEDAT_DESC', 'ENTRIES_ITEM_ID_ASC', 'ENTRIES_ITEM_ID_DESC', 'ENTRIES_MODIFIEDAT_ASC', 'ENTRIES_MODIFIEDAT_DESC', 'MODIFIEDAT_ASC', 'MODIFIEDAT_DESC')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkListSortOrder.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkListUpdateInput","title":"<code>BookmarkListUpdateInput</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class BookmarkListUpdateInput(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('client_mutation_id', 'id', 'entries')\n    client_mutation_id = sgqlc.types.Field(\n        String, graphql_name='clientMutationId')\n    id = sgqlc.types.Field(sgqlc.types.non_null(ID), graphql_name='id')\n    entries = sgqlc.types.Field(sgqlc.types.list_of(\n        BookmarkCreateInput), graphql_name='entries')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkListUpdateInput.__field_names__","title":"<code>__field_names__ = ('client_mutation_id', 'id', 'entries')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkListUpdateInput.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkListUpdateInput.client_mutation_id","title":"<code>client_mutation_id = sgqlc.types.Field(String, graphql_name='clientMutationId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkListUpdateInput.entries","title":"<code>entries = sgqlc.types.Field(sgqlc.types.list_of(BookmarkCreateInput), graphql_name='entries')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkListUpdateInput.id","title":"<code>id = sgqlc.types.Field(sgqlc.types.non_null(ID), graphql_name='id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkPayload","title":"<code>BookmarkPayload</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class BookmarkPayload(sgqlc.types.Type):\n    __schema__ = audiothek_schema\n    __field_names__ = ('client_mutation_id', 'changed_bookmark')\n    client_mutation_id = sgqlc.types.Field(\n        String, graphql_name='clientMutationId')\n    changed_bookmark = sgqlc.types.Field(\n        'Bookmark', graphql_name='changedBookmark')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkPayload.__field_names__","title":"<code>__field_names__ = ('client_mutation_id', 'changed_bookmark')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkPayload.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkPayload.changed_bookmark","title":"<code>changed_bookmark = sgqlc.types.Field('Bookmark', graphql_name='changedBookmark')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkPayload.client_mutation_id","title":"<code>client_mutation_id = sgqlc.types.Field(String, graphql_name='clientMutationId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkRelationFilterB","title":"<code>BookmarkRelationFilterB</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class BookmarkRelationFilterB(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('bookmarked_at', 'created_at', 'modified_at')\n    bookmarked_at = sgqlc.types.Field(\n        'DateFilterB', graphql_name='bookmarkedAt')\n    created_at = sgqlc.types.Field('DateFilterB', graphql_name='createdAt')\n    modified_at = sgqlc.types.Field('DateFilterB', graphql_name='modifiedAt')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkRelationFilterB.__field_names__","title":"<code>__field_names__ = ('bookmarked_at', 'created_at', 'modified_at')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkRelationFilterB.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkRelationFilterB.bookmarked_at","title":"<code>bookmarked_at = sgqlc.types.Field('DateFilterB', graphql_name='bookmarkedAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkRelationFilterB.created_at","title":"<code>created_at = sgqlc.types.Field('DateFilterB', graphql_name='createdAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkRelationFilterB.modified_at","title":"<code>modified_at = sgqlc.types.Field('DateFilterB', graphql_name='modifiedAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkRemoveAllListInput","title":"<code>BookmarkRemoveAllListInput</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class BookmarkRemoveAllListInput(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('client_mutation_id', 'bookmark')\n    client_mutation_id = sgqlc.types.Field(\n        String, graphql_name='clientMutationId')\n    bookmark = sgqlc.types.Field(\n        sgqlc.types.non_null(ID), graphql_name='bookmark')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkRemoveAllListInput.__field_names__","title":"<code>__field_names__ = ('client_mutation_id', 'bookmark')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkRemoveAllListInput.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkRemoveAllListInput.bookmark","title":"<code>bookmark = sgqlc.types.Field(sgqlc.types.non_null(ID), graphql_name='bookmark')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkRemoveAllListInput.client_mutation_id","title":"<code>client_mutation_id = sgqlc.types.Field(String, graphql_name='clientMutationId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkSortOrder","title":"<code>BookmarkSortOrder</code>","text":"<p>         Bases: <code>sgqlc.types.Enum</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class BookmarkSortOrder(sgqlc.types.Enum):\n    __schema__ = audiothek_schema\n    __choices__ = ('BOOKMARKEDAT_ASC', 'BOOKMARKEDAT_DESC', 'CREATEDAT_ASC',\n                   'CREATEDAT_DESC', 'ITEM_ID_ASC', 'ITEM_ID_DESC', 'MODIFIEDAT_ASC', 'MODIFIEDAT_DESC')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkSortOrder.__choices__","title":"<code>__choices__ = ('BOOKMARKEDAT_ASC', 'BOOKMARKEDAT_DESC', 'CREATEDAT_ASC', 'CREATEDAT_DESC', 'ITEM_ID_ASC', 'ITEM_ID_DESC', 'MODIFIEDAT_ASC', 'MODIFIEDAT_DESC')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkSortOrder.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkUpdateInput","title":"<code>BookmarkUpdateInput</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class BookmarkUpdateInput(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('client_mutation_id', 'id', 'bookmarked_at', 'item')\n    client_mutation_id = sgqlc.types.Field(\n        String, graphql_name='clientMutationId')\n    id = sgqlc.types.Field(sgqlc.types.non_null(ID), graphql_name='id')\n    bookmarked_at = sgqlc.types.Field(DateTime, graphql_name='bookmarkedAt')\n    item = sgqlc.types.Field('ItemCreateInput', graphql_name='item')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkUpdateInput.__field_names__","title":"<code>__field_names__ = ('client_mutation_id', 'id', 'bookmarked_at', 'item')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkUpdateInput.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkUpdateInput.bookmarked_at","title":"<code>bookmarked_at = sgqlc.types.Field(DateTime, graphql_name='bookmarkedAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkUpdateInput.client_mutation_id","title":"<code>client_mutation_id = sgqlc.types.Field(String, graphql_name='clientMutationId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkUpdateInput.id","title":"<code>id = sgqlc.types.Field(sgqlc.types.non_null(ID), graphql_name='id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BookmarkUpdateInput.item","title":"<code>item = sgqlc.types.Field('ItemCreateInput', graphql_name='item')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BooleanFilter","title":"<code>BooleanFilter</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class BooleanFilter(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('is_null', 'equal_to', 'not_equal_to', 'distinct_from', 'not_distinct_from',\n                       'in_', 'not_in', 'less_than', 'less_than_or_equal_to', 'greater_than', 'greater_than_or_equal_to')\n    is_null = sgqlc.types.Field(Boolean, graphql_name='isNull')\n    equal_to = sgqlc.types.Field(Boolean, graphql_name='equalTo')\n    not_equal_to = sgqlc.types.Field(Boolean, graphql_name='notEqualTo')\n    distinct_from = sgqlc.types.Field(Boolean, graphql_name='distinctFrom')\n    not_distinct_from = sgqlc.types.Field(\n        Boolean, graphql_name='notDistinctFrom')\n    in_ = sgqlc.types.Field(sgqlc.types.list_of(\n        sgqlc.types.non_null(Boolean)), graphql_name='in')\n    not_in = sgqlc.types.Field(sgqlc.types.list_of(\n        sgqlc.types.non_null(Boolean)), graphql_name='notIn')\n    less_than = sgqlc.types.Field(Boolean, graphql_name='lessThan')\n    less_than_or_equal_to = sgqlc.types.Field(\n        Boolean, graphql_name='lessThanOrEqualTo')\n    greater_than = sgqlc.types.Field(Boolean, graphql_name='greaterThan')\n    greater_than_or_equal_to = sgqlc.types.Field(\n        Boolean, graphql_name='greaterThanOrEqualTo')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BooleanFilter.__field_names__","title":"<code>__field_names__ = ('is_null', 'equal_to', 'not_equal_to', 'distinct_from', 'not_distinct_from', 'in_', 'not_in', 'less_than', 'less_than_or_equal_to', 'greater_than', 'greater_than_or_equal_to')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BooleanFilter.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BooleanFilter.distinct_from","title":"<code>distinct_from = sgqlc.types.Field(Boolean, graphql_name='distinctFrom')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BooleanFilter.equal_to","title":"<code>equal_to = sgqlc.types.Field(Boolean, graphql_name='equalTo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BooleanFilter.greater_than","title":"<code>greater_than = sgqlc.types.Field(Boolean, graphql_name='greaterThan')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BooleanFilter.greater_than_or_equal_to","title":"<code>greater_than_or_equal_to = sgqlc.types.Field(Boolean, graphql_name='greaterThanOrEqualTo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BooleanFilter.in_","title":"<code>in_ = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null(Boolean)), graphql_name='in')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BooleanFilter.is_null","title":"<code>is_null = sgqlc.types.Field(Boolean, graphql_name='isNull')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BooleanFilter.less_than","title":"<code>less_than = sgqlc.types.Field(Boolean, graphql_name='lessThan')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BooleanFilter.less_than_or_equal_to","title":"<code>less_than_or_equal_to = sgqlc.types.Field(Boolean, graphql_name='lessThanOrEqualTo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BooleanFilter.not_distinct_from","title":"<code>not_distinct_from = sgqlc.types.Field(Boolean, graphql_name='notDistinctFrom')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BooleanFilter.not_equal_to","title":"<code>not_equal_to = sgqlc.types.Field(Boolean, graphql_name='notEqualTo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BooleanFilter.not_in","title":"<code>not_in = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null(Boolean)), graphql_name='notIn')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BooleanFilterB","title":"<code>BooleanFilterB</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class BooleanFilterB(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('eq', 'ne')\n    eq = sgqlc.types.Field(Boolean, graphql_name='eq')\n    ne = sgqlc.types.Field(Boolean, graphql_name='ne')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BooleanFilterB.__field_names__","title":"<code>__field_names__ = ('eq', 'ne')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BooleanFilterB.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BooleanFilterB.eq","title":"<code>eq = sgqlc.types.Field(Boolean, graphql_name='eq')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.BooleanFilterB.ne","title":"<code>ne = sgqlc.types.Field(Boolean, graphql_name='ne')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.CacheControlScope","title":"<code>CacheControlScope</code>","text":"<p>         Bases: <code>sgqlc.types.Enum</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class CacheControlScope(sgqlc.types.Enum):\n    __schema__ = audiothek_schema\n    __choices__ = ('PRIVATE', 'PUBLIC')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.CacheControlScope.__choices__","title":"<code>__choices__ = ('PRIVATE', 'PUBLIC')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.CacheControlScope.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.CategoriesToProgramSet","title":"<code>CategoriesToProgramSet</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code>, <code>Node</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class CategoriesToProgramSet(sgqlc.types.Type, Node):\n    __schema__ = audiothek_schema\n    __field_names__ = ('program_set_core_id', 'category_sophora_id',\n                       'program_set_core', 'category_sophora')\n    program_set_core_id = sgqlc.types.Field(\n        sgqlc.types.non_null(String), graphql_name='programSetCoreId')\n    category_sophora_id = sgqlc.types.Field(\n        sgqlc.types.non_null(String), graphql_name='categorySophoraId')\n    program_set_core = sgqlc.types.Field(\n        'ProgramSet', graphql_name='programSetCore')\n    category_sophora = sgqlc.types.Field(\n        'EditorialCategory', graphql_name='categorySophora')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.CategoriesToProgramSet.__field_names__","title":"<code>__field_names__ = ('program_set_core_id', 'category_sophora_id', 'program_set_core', 'category_sophora')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.CategoriesToProgramSet.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.CategoriesToProgramSet.category_sophora","title":"<code>category_sophora = sgqlc.types.Field('EditorialCategory', graphql_name='categorySophora')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.CategoriesToProgramSet.category_sophora_id","title":"<code>category_sophora_id = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='categorySophoraId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.CategoriesToProgramSet.program_set_core","title":"<code>program_set_core = sgqlc.types.Field('ProgramSet', graphql_name='programSetCore')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.CategoriesToProgramSet.program_set_core_id","title":"<code>program_set_core_id = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='programSetCoreId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.CategoriesToProgramSetCondition","title":"<code>CategoriesToProgramSetCondition</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class CategoriesToProgramSetCondition(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('program_set_core_id', 'category_sophora_id')\n    program_set_core_id = sgqlc.types.Field(\n        String, graphql_name='programSetCoreId')\n    category_sophora_id = sgqlc.types.Field(\n        String, graphql_name='categorySophoraId')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.CategoriesToProgramSetCondition.__field_names__","title":"<code>__field_names__ = ('program_set_core_id', 'category_sophora_id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.CategoriesToProgramSetCondition.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.CategoriesToProgramSetCondition.category_sophora_id","title":"<code>category_sophora_id = sgqlc.types.Field(String, graphql_name='categorySophoraId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.CategoriesToProgramSetCondition.program_set_core_id","title":"<code>program_set_core_id = sgqlc.types.Field(String, graphql_name='programSetCoreId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.CategoriesToProgramSetFilter","title":"<code>CategoriesToProgramSetFilter</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class CategoriesToProgramSetFilter(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('program_set_core_id',\n                       'category_sophora_id', 'and_', 'or_', 'not_')\n    program_set_core_id = sgqlc.types.Field(\n        'StringFilter', graphql_name='programSetCoreId')\n    category_sophora_id = sgqlc.types.Field(\n        'StringFilter', graphql_name='categorySophoraId')\n    and_ = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null(\n        'CategoriesToProgramSetFilter')), graphql_name='and')\n    or_ = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null(\n        'CategoriesToProgramSetFilter')), graphql_name='or')\n    not_ = sgqlc.types.Field(\n        'CategoriesToProgramSetFilter', graphql_name='not')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.CategoriesToProgramSetFilter.__field_names__","title":"<code>__field_names__ = ('program_set_core_id', 'category_sophora_id', 'and_', 'or_', 'not_')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.CategoriesToProgramSetFilter.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.CategoriesToProgramSetFilter.and_","title":"<code>and_ = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('CategoriesToProgramSetFilter')), graphql_name='and')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.CategoriesToProgramSetFilter.category_sophora_id","title":"<code>category_sophora_id = sgqlc.types.Field('StringFilter', graphql_name='categorySophoraId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.CategoriesToProgramSetFilter.not_","title":"<code>not_ = sgqlc.types.Field('CategoriesToProgramSetFilter', graphql_name='not')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.CategoriesToProgramSetFilter.or_","title":"<code>or_ = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('CategoriesToProgramSetFilter')), graphql_name='or')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.CategoriesToProgramSetFilter.program_set_core_id","title":"<code>program_set_core_id = sgqlc.types.Field('StringFilter', graphql_name='programSetCoreId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.CategoriesToProgramSetsConnection","title":"<code>CategoriesToProgramSetsConnection</code>","text":"<p>         Bases: <code>sgqlc.types.relay.Connection</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class CategoriesToProgramSetsConnection(sgqlc.types.relay.Connection):\n    __schema__ = audiothek_schema\n    __field_names__ = ('nodes', 'edges', 'page_info', 'total_count')\n    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(\n        sgqlc.types.non_null('CategoriesToProgramSet'))), graphql_name='nodes')\n    edges = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(\n        sgqlc.types.non_null('CategoriesToProgramSetsEdge'))), graphql_name='edges')\n    page_info = sgqlc.types.Field(sgqlc.types.non_null(\n        'PageInfo'), graphql_name='pageInfo')\n    total_count = sgqlc.types.Field(\n        sgqlc.types.non_null(Int), graphql_name='totalCount')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.CategoriesToProgramSetsConnection.__field_names__","title":"<code>__field_names__ = ('nodes', 'edges', 'page_info', 'total_count')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.CategoriesToProgramSetsConnection.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.CategoriesToProgramSetsConnection.edges","title":"<code>edges = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('CategoriesToProgramSetsEdge'))), graphql_name='edges')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.CategoriesToProgramSetsConnection.nodes","title":"<code>nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('CategoriesToProgramSet'))), graphql_name='nodes')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.CategoriesToProgramSetsConnection.page_info","title":"<code>page_info = sgqlc.types.Field(sgqlc.types.non_null('PageInfo'), graphql_name='pageInfo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.CategoriesToProgramSetsConnection.total_count","title":"<code>total_count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='totalCount')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.CategoriesToProgramSetsEdge","title":"<code>CategoriesToProgramSetsEdge</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class CategoriesToProgramSetsEdge(sgqlc.types.Type):\n    __schema__ = audiothek_schema\n    __field_names__ = ('cursor', 'node')\n    cursor = sgqlc.types.Field(Cursor, graphql_name='cursor')\n    node = sgqlc.types.Field(sgqlc.types.non_null(\n        'CategoriesToProgramSet'), graphql_name='node')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.CategoriesToProgramSetsEdge.__field_names__","title":"<code>__field_names__ = ('cursor', 'node')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.CategoriesToProgramSetsEdge.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.CategoriesToProgramSetsEdge.cursor","title":"<code>cursor = sgqlc.types.Field(Cursor, graphql_name='cursor')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.CategoriesToProgramSetsEdge.node","title":"<code>node = sgqlc.types.Field(sgqlc.types.non_null('CategoriesToProgramSet'), graphql_name='node')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.CategoriesToProgramSetsOrderBy","title":"<code>CategoriesToProgramSetsOrderBy</code>","text":"<p>         Bases: <code>sgqlc.types.Enum</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class CategoriesToProgramSetsOrderBy(sgqlc.types.Enum):\n    __schema__ = audiothek_schema\n    __choices__ = ('CATEGORY_SOPHORA_ID_ASC', 'CATEGORY_SOPHORA_ID_DESC', 'NATURAL',\n                   'PRIMARY_KEY_ASC', 'PRIMARY_KEY_DESC', 'PROGRAM_SET_CORE_ID_ASC', 'PROGRAM_SET_CORE_ID_DESC')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.CategoriesToProgramSetsOrderBy.__choices__","title":"<code>__choices__ = ('CATEGORY_SOPHORA_ID_ASC', 'CATEGORY_SOPHORA_ID_DESC', 'NATURAL', 'PRIMARY_KEY_ASC', 'PRIMARY_KEY_DESC', 'PROGRAM_SET_CORE_ID_ASC', 'PROGRAM_SET_CORE_ID_DESC')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.CategoriesToProgramSetsOrderBy.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Concept","title":"<code>Concept</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code>, <code>Node</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class Concept(sgqlc.types.Type, Node):\n    __schema__ = audiothek_schema\n    __field_names__ = ('item_id', 'concept_source',\n                       'data', 'last_updated_at', 'item')\n    item_id = sgqlc.types.Field(\n        sgqlc.types.non_null(Int), graphql_name='itemId')\n    concept_source = sgqlc.types.Field(\n        sgqlc.types.non_null(String), graphql_name='conceptSource')\n    data = sgqlc.types.Field(JSON, graphql_name='data')\n    last_updated_at = sgqlc.types.Field(\n        sgqlc.types.non_null(Datetime), graphql_name='lastUpdatedAt')\n    item = sgqlc.types.Field('Item', graphql_name='item')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Concept.__field_names__","title":"<code>__field_names__ = ('item_id', 'concept_source', 'data', 'last_updated_at', 'item')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Concept.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Concept.concept_source","title":"<code>concept_source = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='conceptSource')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Concept.data","title":"<code>data = sgqlc.types.Field(JSON, graphql_name='data')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Concept.item","title":"<code>item = sgqlc.types.Field('Item', graphql_name='item')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Concept.item_id","title":"<code>item_id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='itemId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Concept.last_updated_at","title":"<code>last_updated_at = sgqlc.types.Field(sgqlc.types.non_null(Datetime), graphql_name='lastUpdatedAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ConceptCondition","title":"<code>ConceptCondition</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class ConceptCondition(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('item_id', 'concept_source', 'data', 'last_updated_at')\n    item_id = sgqlc.types.Field(Int, graphql_name='itemId')\n    concept_source = sgqlc.types.Field(String, graphql_name='conceptSource')\n    data = sgqlc.types.Field(JSON, graphql_name='data')\n    last_updated_at = sgqlc.types.Field(Datetime, graphql_name='lastUpdatedAt')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ConceptCondition.__field_names__","title":"<code>__field_names__ = ('item_id', 'concept_source', 'data', 'last_updated_at')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ConceptCondition.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ConceptCondition.concept_source","title":"<code>concept_source = sgqlc.types.Field(String, graphql_name='conceptSource')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ConceptCondition.data","title":"<code>data = sgqlc.types.Field(JSON, graphql_name='data')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ConceptCondition.item_id","title":"<code>item_id = sgqlc.types.Field(Int, graphql_name='itemId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ConceptCondition.last_updated_at","title":"<code>last_updated_at = sgqlc.types.Field(Datetime, graphql_name='lastUpdatedAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ConceptFilter","title":"<code>ConceptFilter</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class ConceptFilter(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('item_id', 'concept_source', 'data',\n                       'last_updated_at', 'and_', 'or_', 'not_')\n    item_id = sgqlc.types.Field('IntFilter', graphql_name='itemId')\n    concept_source = sgqlc.types.Field(\n        'StringFilter', graphql_name='conceptSource')\n    data = sgqlc.types.Field('JSONFilter', graphql_name='data')\n    last_updated_at = sgqlc.types.Field(\n        'DatetimeFilter', graphql_name='lastUpdatedAt')\n    and_ = sgqlc.types.Field(sgqlc.types.list_of(\n        sgqlc.types.non_null('ConceptFilter')), graphql_name='and')\n    or_ = sgqlc.types.Field(sgqlc.types.list_of(\n        sgqlc.types.non_null('ConceptFilter')), graphql_name='or')\n    not_ = sgqlc.types.Field('ConceptFilter', graphql_name='not')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ConceptFilter.__field_names__","title":"<code>__field_names__ = ('item_id', 'concept_source', 'data', 'last_updated_at', 'and_', 'or_', 'not_')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ConceptFilter.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ConceptFilter.and_","title":"<code>and_ = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('ConceptFilter')), graphql_name='and')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ConceptFilter.concept_source","title":"<code>concept_source = sgqlc.types.Field('StringFilter', graphql_name='conceptSource')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ConceptFilter.data","title":"<code>data = sgqlc.types.Field('JSONFilter', graphql_name='data')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ConceptFilter.item_id","title":"<code>item_id = sgqlc.types.Field('IntFilter', graphql_name='itemId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ConceptFilter.last_updated_at","title":"<code>last_updated_at = sgqlc.types.Field('DatetimeFilter', graphql_name='lastUpdatedAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ConceptFilter.not_","title":"<code>not_ = sgqlc.types.Field('ConceptFilter', graphql_name='not')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ConceptFilter.or_","title":"<code>or_ = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('ConceptFilter')), graphql_name='or')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ConceptsConnection","title":"<code>ConceptsConnection</code>","text":"<p>         Bases: <code>sgqlc.types.relay.Connection</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class ConceptsConnection(sgqlc.types.relay.Connection):\n    __schema__ = audiothek_schema\n    __field_names__ = ('nodes', 'edges', 'page_info', 'total_count')\n    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(\n        sgqlc.types.non_null('Concept'))), graphql_name='nodes')\n    edges = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(\n        sgqlc.types.non_null('ConceptsEdge'))), graphql_name='edges')\n    page_info = sgqlc.types.Field(sgqlc.types.non_null(\n        'PageInfo'), graphql_name='pageInfo')\n    total_count = sgqlc.types.Field(\n        sgqlc.types.non_null(Int), graphql_name='totalCount')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ConceptsConnection.__field_names__","title":"<code>__field_names__ = ('nodes', 'edges', 'page_info', 'total_count')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ConceptsConnection.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ConceptsConnection.edges","title":"<code>edges = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('ConceptsEdge'))), graphql_name='edges')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ConceptsConnection.nodes","title":"<code>nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('Concept'))), graphql_name='nodes')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ConceptsConnection.page_info","title":"<code>page_info = sgqlc.types.Field(sgqlc.types.non_null('PageInfo'), graphql_name='pageInfo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ConceptsConnection.total_count","title":"<code>total_count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='totalCount')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ConceptsEdge","title":"<code>ConceptsEdge</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class ConceptsEdge(sgqlc.types.Type):\n    __schema__ = audiothek_schema\n    __field_names__ = ('cursor', 'node')\n    cursor = sgqlc.types.Field(Cursor, graphql_name='cursor')\n    node = sgqlc.types.Field(sgqlc.types.non_null(\n        'Concept'), graphql_name='node')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ConceptsEdge.__field_names__","title":"<code>__field_names__ = ('cursor', 'node')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ConceptsEdge.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ConceptsEdge.cursor","title":"<code>cursor = sgqlc.types.Field(Cursor, graphql_name='cursor')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ConceptsEdge.node","title":"<code>node = sgqlc.types.Field(sgqlc.types.non_null('Concept'), graphql_name='node')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ConceptsOrderBy","title":"<code>ConceptsOrderBy</code>","text":"<p>         Bases: <code>sgqlc.types.Enum</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class ConceptsOrderBy(sgqlc.types.Enum):\n    __schema__ = audiothek_schema\n    __choices__ = ('CONCEPT_SOURCE_ASC', 'CONCEPT_SOURCE_DESC', 'DATA_ASC', 'DATA_DESC', 'ITEM_ID_ASC', 'ITEM_ID_DESC',\n                   'LAST_UPDATED_AT_ASC', 'LAST_UPDATED_AT_DESC', 'NATURAL', 'PRIMARY_KEY_ASC', 'PRIMARY_KEY_DESC')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ConceptsOrderBy.__choices__","title":"<code>__choices__ = ('CONCEPT_SOURCE_ASC', 'CONCEPT_SOURCE_DESC', 'DATA_ASC', 'DATA_DESC', 'ITEM_ID_ASC', 'ITEM_ID_DESC', 'LAST_UPDATED_AT_ASC', 'LAST_UPDATED_AT_DESC', 'NATURAL', 'PRIMARY_KEY_ASC', 'PRIMARY_KEY_DESC')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ConceptsOrderBy.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Config","title":"<code>Config</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code>, <code>Node</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class Config(sgqlc.types.Type, Node):\n    __schema__ = audiothek_schema\n    __field_names__ = ('key', 'value', 'updated_at', 'updated_by')\n    key = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='key')\n    value = sgqlc.types.Field(JSON, graphql_name='value')\n    updated_at = sgqlc.types.Field(Datetime, graphql_name='updatedAt')\n    updated_by = sgqlc.types.Field(String, graphql_name='updatedBy')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Config.__field_names__","title":"<code>__field_names__ = ('key', 'value', 'updated_at', 'updated_by')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Config.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Config.key","title":"<code>key = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='key')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Config.updated_at","title":"<code>updated_at = sgqlc.types.Field(Datetime, graphql_name='updatedAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Config.updated_by","title":"<code>updated_by = sgqlc.types.Field(String, graphql_name='updatedBy')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Config.value","title":"<code>value = sgqlc.types.Field(JSON, graphql_name='value')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ConfigCondition","title":"<code>ConfigCondition</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class ConfigCondition(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('key', 'value', 'updated_at', 'updated_by')\n    key = sgqlc.types.Field(String, graphql_name='key')\n    value = sgqlc.types.Field(JSON, graphql_name='value')\n    updated_at = sgqlc.types.Field(Datetime, graphql_name='updatedAt')\n    updated_by = sgqlc.types.Field(String, graphql_name='updatedBy')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ConfigCondition.__field_names__","title":"<code>__field_names__ = ('key', 'value', 'updated_at', 'updated_by')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ConfigCondition.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ConfigCondition.key","title":"<code>key = sgqlc.types.Field(String, graphql_name='key')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ConfigCondition.updated_at","title":"<code>updated_at = sgqlc.types.Field(Datetime, graphql_name='updatedAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ConfigCondition.updated_by","title":"<code>updated_by = sgqlc.types.Field(String, graphql_name='updatedBy')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ConfigCondition.value","title":"<code>value = sgqlc.types.Field(JSON, graphql_name='value')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ConfigFilter","title":"<code>ConfigFilter</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class ConfigFilter(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('key', 'value', 'updated_at',\n                       'updated_by', 'and_', 'or_', 'not_')\n    key = sgqlc.types.Field('StringFilter', graphql_name='key')\n    value = sgqlc.types.Field('JSONFilter', graphql_name='value')\n    updated_at = sgqlc.types.Field('DatetimeFilter', graphql_name='updatedAt')\n    updated_by = sgqlc.types.Field('StringFilter', graphql_name='updatedBy')\n    and_ = sgqlc.types.Field(sgqlc.types.list_of(\n        sgqlc.types.non_null('ConfigFilter')), graphql_name='and')\n    or_ = sgqlc.types.Field(sgqlc.types.list_of(\n        sgqlc.types.non_null('ConfigFilter')), graphql_name='or')\n    not_ = sgqlc.types.Field('ConfigFilter', graphql_name='not')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ConfigFilter.__field_names__","title":"<code>__field_names__ = ('key', 'value', 'updated_at', 'updated_by', 'and_', 'or_', 'not_')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ConfigFilter.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ConfigFilter.and_","title":"<code>and_ = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('ConfigFilter')), graphql_name='and')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ConfigFilter.key","title":"<code>key = sgqlc.types.Field('StringFilter', graphql_name='key')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ConfigFilter.not_","title":"<code>not_ = sgqlc.types.Field('ConfigFilter', graphql_name='not')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ConfigFilter.or_","title":"<code>or_ = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('ConfigFilter')), graphql_name='or')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ConfigFilter.updated_at","title":"<code>updated_at = sgqlc.types.Field('DatetimeFilter', graphql_name='updatedAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ConfigFilter.updated_by","title":"<code>updated_by = sgqlc.types.Field('StringFilter', graphql_name='updatedBy')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ConfigFilter.value","title":"<code>value = sgqlc.types.Field('JSONFilter', graphql_name='value')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ConfigsConnection","title":"<code>ConfigsConnection</code>","text":"<p>         Bases: <code>sgqlc.types.relay.Connection</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class ConfigsConnection(sgqlc.types.relay.Connection):\n    __schema__ = audiothek_schema\n    __field_names__ = ('nodes', 'edges', 'page_info', 'total_count')\n    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(\n        sgqlc.types.non_null('Config'))), graphql_name='nodes')\n    edges = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(\n        sgqlc.types.non_null('ConfigsEdge'))), graphql_name='edges')\n    page_info = sgqlc.types.Field(sgqlc.types.non_null(\n        'PageInfo'), graphql_name='pageInfo')\n    total_count = sgqlc.types.Field(\n        sgqlc.types.non_null(Int), graphql_name='totalCount')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ConfigsConnection.__field_names__","title":"<code>__field_names__ = ('nodes', 'edges', 'page_info', 'total_count')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ConfigsConnection.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ConfigsConnection.edges","title":"<code>edges = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('ConfigsEdge'))), graphql_name='edges')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ConfigsConnection.nodes","title":"<code>nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('Config'))), graphql_name='nodes')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ConfigsConnection.page_info","title":"<code>page_info = sgqlc.types.Field(sgqlc.types.non_null('PageInfo'), graphql_name='pageInfo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ConfigsConnection.total_count","title":"<code>total_count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='totalCount')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ConfigsEdge","title":"<code>ConfigsEdge</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class ConfigsEdge(sgqlc.types.Type):\n    __schema__ = audiothek_schema\n    __field_names__ = ('cursor', 'node')\n    cursor = sgqlc.types.Field(Cursor, graphql_name='cursor')\n    node = sgqlc.types.Field(\n        sgqlc.types.non_null('Config'), graphql_name='node')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ConfigsEdge.__field_names__","title":"<code>__field_names__ = ('cursor', 'node')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ConfigsEdge.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ConfigsEdge.cursor","title":"<code>cursor = sgqlc.types.Field(Cursor, graphql_name='cursor')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ConfigsEdge.node","title":"<code>node = sgqlc.types.Field(sgqlc.types.non_null('Config'), graphql_name='node')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ConfigsOrderBy","title":"<code>ConfigsOrderBy</code>","text":"<p>         Bases: <code>sgqlc.types.Enum</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class ConfigsOrderBy(sgqlc.types.Enum):\n    __schema__ = audiothek_schema\n    __choices__ = ('KEY_ASC', 'KEY_DESC', 'NATURAL', 'PRIMARY_KEY_ASC', 'PRIMARY_KEY_DESC',\n                   'UPDATED_AT_ASC', 'UPDATED_AT_DESC', 'UPDATED_BY_ASC', 'UPDATED_BY_DESC', 'VALUE_ASC', 'VALUE_DESC')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ConfigsOrderBy.__choices__","title":"<code>__choices__ = ('KEY_ASC', 'KEY_DESC', 'NATURAL', 'PRIMARY_KEY_ASC', 'PRIMARY_KEY_DESC', 'UPDATED_AT_ASC', 'UPDATED_AT_DESC', 'UPDATED_BY_ASC', 'UPDATED_BY_DESC', 'VALUE_ASC', 'VALUE_DESC')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ConfigsOrderBy.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.CoreTeaser","title":"<code>CoreTeaser</code>","text":"<p>         Bases: <code>sgqlc.types.Interface</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class CoreTeaser(sgqlc.types.Interface):\n    __schema__ = audiothek_schema\n    __field_names__ = ('id', 'title')\n    id = sgqlc.types.Field(sgqlc.types.non_null(ID), graphql_name='id')\n    title = sgqlc.types.Field(\n        sgqlc.types.non_null(String), graphql_name='title')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.CoreTeaser.__field_names__","title":"<code>__field_names__ = ('id', 'title')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.CoreTeaser.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.CoreTeaser.id","title":"<code>id = sgqlc.types.Field(sgqlc.types.non_null(ID), graphql_name='id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.CoreTeaser.title","title":"<code>title = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='title')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Cursor","title":"<code>Cursor</code>","text":"<p>         Bases: <code>sgqlc.types.Scalar</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class Cursor(sgqlc.types.Scalar):\n    __schema__ = audiothek_schema\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Cursor.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DateFilterB","title":"<code>DateFilterB</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class DateFilterB(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('eq', 'ne', 'in_', 'gt', 'gte', 'lt', 'lte')\n    eq = sgqlc.types.Field(DateTime, graphql_name='eq')\n    ne = sgqlc.types.Field(DateTime, graphql_name='ne')\n    in_ = sgqlc.types.Field(sgqlc.types.list_of(DateTime), graphql_name='in')\n    gt = sgqlc.types.Field(DateTime, graphql_name='gt')\n    gte = sgqlc.types.Field(DateTime, graphql_name='gte')\n    lt = sgqlc.types.Field(DateTime, graphql_name='lt')\n    lte = sgqlc.types.Field(DateTime, graphql_name='lte')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DateFilterB.__field_names__","title":"<code>__field_names__ = ('eq', 'ne', 'in_', 'gt', 'gte', 'lt', 'lte')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DateFilterB.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DateFilterB.eq","title":"<code>eq = sgqlc.types.Field(DateTime, graphql_name='eq')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DateFilterB.gt","title":"<code>gt = sgqlc.types.Field(DateTime, graphql_name='gt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DateFilterB.gte","title":"<code>gte = sgqlc.types.Field(DateTime, graphql_name='gte')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DateFilterB.in_","title":"<code>in_ = sgqlc.types.Field(sgqlc.types.list_of(DateTime), graphql_name='in')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DateFilterB.lt","title":"<code>lt = sgqlc.types.Field(DateTime, graphql_name='lt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DateFilterB.lte","title":"<code>lte = sgqlc.types.Field(DateTime, graphql_name='lte')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DateFilterB.ne","title":"<code>ne = sgqlc.types.Field(DateTime, graphql_name='ne')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Datetime","title":"<code>Datetime</code>","text":"<p>         Bases: <code>sgqlc.types.Scalar</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class Datetime(sgqlc.types.Scalar):\n    __schema__ = audiothek_schema\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Datetime.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DatetimeFilter","title":"<code>DatetimeFilter</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class DatetimeFilter(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('is_null', 'equal_to', 'not_equal_to', 'distinct_from', 'not_distinct_from',\n                       'in_', 'not_in', 'less_than', 'less_than_or_equal_to', 'greater_than', 'greater_than_or_equal_to')\n    is_null = sgqlc.types.Field(Boolean, graphql_name='isNull')\n    equal_to = sgqlc.types.Field(Datetime, graphql_name='equalTo')\n    not_equal_to = sgqlc.types.Field(Datetime, graphql_name='notEqualTo')\n    distinct_from = sgqlc.types.Field(Datetime, graphql_name='distinctFrom')\n    not_distinct_from = sgqlc.types.Field(\n        Datetime, graphql_name='notDistinctFrom')\n    in_ = sgqlc.types.Field(sgqlc.types.list_of(\n        sgqlc.types.non_null(Datetime)), graphql_name='in')\n    not_in = sgqlc.types.Field(sgqlc.types.list_of(\n        sgqlc.types.non_null(Datetime)), graphql_name='notIn')\n    less_than = sgqlc.types.Field(Datetime, graphql_name='lessThan')\n    less_than_or_equal_to = sgqlc.types.Field(\n        Datetime, graphql_name='lessThanOrEqualTo')\n    greater_than = sgqlc.types.Field(Datetime, graphql_name='greaterThan')\n    greater_than_or_equal_to = sgqlc.types.Field(\n        Datetime, graphql_name='greaterThanOrEqualTo')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DatetimeFilter.__field_names__","title":"<code>__field_names__ = ('is_null', 'equal_to', 'not_equal_to', 'distinct_from', 'not_distinct_from', 'in_', 'not_in', 'less_than', 'less_than_or_equal_to', 'greater_than', 'greater_than_or_equal_to')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DatetimeFilter.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DatetimeFilter.distinct_from","title":"<code>distinct_from = sgqlc.types.Field(Datetime, graphql_name='distinctFrom')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DatetimeFilter.equal_to","title":"<code>equal_to = sgqlc.types.Field(Datetime, graphql_name='equalTo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DatetimeFilter.greater_than","title":"<code>greater_than = sgqlc.types.Field(Datetime, graphql_name='greaterThan')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DatetimeFilter.greater_than_or_equal_to","title":"<code>greater_than_or_equal_to = sgqlc.types.Field(Datetime, graphql_name='greaterThanOrEqualTo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DatetimeFilter.in_","title":"<code>in_ = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null(Datetime)), graphql_name='in')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DatetimeFilter.is_null","title":"<code>is_null = sgqlc.types.Field(Boolean, graphql_name='isNull')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DatetimeFilter.less_than","title":"<code>less_than = sgqlc.types.Field(Datetime, graphql_name='lessThan')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DatetimeFilter.less_than_or_equal_to","title":"<code>less_than_or_equal_to = sgqlc.types.Field(Datetime, graphql_name='lessThanOrEqualTo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DatetimeFilter.not_distinct_from","title":"<code>not_distinct_from = sgqlc.types.Field(Datetime, graphql_name='notDistinctFrom')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DatetimeFilter.not_equal_to","title":"<code>not_equal_to = sgqlc.types.Field(Datetime, graphql_name='notEqualTo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DatetimeFilter.not_in","title":"<code>not_in = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null(Datetime)), graphql_name='notIn')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DebugShowGroupEdge","title":"<code>DebugShowGroupEdge</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class DebugShowGroupEdge(sgqlc.types.Type):\n    __schema__ = audiothek_schema\n    __field_names__ = ('cursor', 'node')\n    cursor = sgqlc.types.Field(Cursor, graphql_name='cursor')\n    node = sgqlc.types.Field(sgqlc.types.non_null(\n        'DebugShowGroupsRecord'), graphql_name='node')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DebugShowGroupEdge.__field_names__","title":"<code>__field_names__ = ('cursor', 'node')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DebugShowGroupEdge.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DebugShowGroupEdge.cursor","title":"<code>cursor = sgqlc.types.Field(Cursor, graphql_name='cursor')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DebugShowGroupEdge.node","title":"<code>node = sgqlc.types.Field(sgqlc.types.non_null('DebugShowGroupsRecord'), graphql_name='node')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DebugShowGroupsConnection","title":"<code>DebugShowGroupsConnection</code>","text":"<p>         Bases: <code>sgqlc.types.relay.Connection</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class DebugShowGroupsConnection(sgqlc.types.relay.Connection):\n    __schema__ = audiothek_schema\n    __field_names__ = ('nodes', 'edges', 'total_count')\n    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(\n        sgqlc.types.non_null('DebugShowGroupsRecord'))), graphql_name='nodes')\n    edges = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(\n        sgqlc.types.non_null(DebugShowGroupEdge))), graphql_name='edges')\n    total_count = sgqlc.types.Field(\n        sgqlc.types.non_null(Int), graphql_name='totalCount')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DebugShowGroupsConnection.__field_names__","title":"<code>__field_names__ = ('nodes', 'edges', 'total_count')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DebugShowGroupsConnection.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DebugShowGroupsConnection.edges","title":"<code>edges = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(DebugShowGroupEdge))), graphql_name='edges')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DebugShowGroupsConnection.nodes","title":"<code>nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('DebugShowGroupsRecord'))), graphql_name='nodes')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DebugShowGroupsConnection.total_count","title":"<code>total_count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='totalCount')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DebugShowGroupsRecord","title":"<code>DebugShowGroupsRecord</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class DebugShowGroupsRecord(sgqlc.types.Type):\n    __schema__ = audiothek_schema\n    __field_names__ = ('row_id', 'core_id', 'publish_date', 'modified_publish_date', 'title', 'title_without_number',\n                       'group_number', 'max_group_number', 'season_number', 'group_id', 'core_type', 'external_id')\n    row_id = sgqlc.types.Field(Int, graphql_name='rowId')\n    core_id = sgqlc.types.Field(String, graphql_name='coreId')\n    publish_date = sgqlc.types.Field(Datetime, graphql_name='publishDate')\n    modified_publish_date = sgqlc.types.Field(\n        Datetime, graphql_name='modifiedPublishDate')\n    title = sgqlc.types.Field(String, graphql_name='title')\n    title_without_number = sgqlc.types.Field(\n        String, graphql_name='titleWithoutNumber')\n    group_number = sgqlc.types.Field(Int, graphql_name='groupNumber')\n    max_group_number = sgqlc.types.Field(Int, graphql_name='maxGroupNumber')\n    season_number = sgqlc.types.Field(Int, graphql_name='seasonNumber')\n    group_id = sgqlc.types.Field(Int, graphql_name='groupId')\n    core_type = sgqlc.types.Field(String, graphql_name='coreType')\n    external_id = sgqlc.types.Field(String, graphql_name='externalId')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DebugShowGroupsRecord.__field_names__","title":"<code>__field_names__ = ('row_id', 'core_id', 'publish_date', 'modified_publish_date', 'title', 'title_without_number', 'group_number', 'max_group_number', 'season_number', 'group_id', 'core_type', 'external_id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DebugShowGroupsRecord.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DebugShowGroupsRecord.core_id","title":"<code>core_id = sgqlc.types.Field(String, graphql_name='coreId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DebugShowGroupsRecord.core_type","title":"<code>core_type = sgqlc.types.Field(String, graphql_name='coreType')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DebugShowGroupsRecord.external_id","title":"<code>external_id = sgqlc.types.Field(String, graphql_name='externalId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DebugShowGroupsRecord.group_id","title":"<code>group_id = sgqlc.types.Field(Int, graphql_name='groupId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DebugShowGroupsRecord.group_number","title":"<code>group_number = sgqlc.types.Field(Int, graphql_name='groupNumber')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DebugShowGroupsRecord.max_group_number","title":"<code>max_group_number = sgqlc.types.Field(Int, graphql_name='maxGroupNumber')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DebugShowGroupsRecord.modified_publish_date","title":"<code>modified_publish_date = sgqlc.types.Field(Datetime, graphql_name='modifiedPublishDate')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DebugShowGroupsRecord.publish_date","title":"<code>publish_date = sgqlc.types.Field(Datetime, graphql_name='publishDate')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DebugShowGroupsRecord.row_id","title":"<code>row_id = sgqlc.types.Field(Int, graphql_name='rowId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DebugShowGroupsRecord.season_number","title":"<code>season_number = sgqlc.types.Field(Int, graphql_name='seasonNumber')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DebugShowGroupsRecord.title","title":"<code>title = sgqlc.types.Field(String, graphql_name='title')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DebugShowGroupsRecord.title_without_number","title":"<code>title_without_number = sgqlc.types.Field(String, graphql_name='titleWithoutNumber')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DeleteHistoryEntryByItemInput","title":"<code>DeleteHistoryEntryByItemInput</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class DeleteHistoryEntryByItemInput(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('client_mutation_id', 'item')\n    client_mutation_id = sgqlc.types.Field(\n        String, graphql_name='clientMutationId')\n    item = sgqlc.types.Field(sgqlc.types.non_null(\n        'ItemCreateInput'), graphql_name='item')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DeleteHistoryEntryByItemInput.__field_names__","title":"<code>__field_names__ = ('client_mutation_id', 'item')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DeleteHistoryEntryByItemInput.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DeleteHistoryEntryByItemInput.client_mutation_id","title":"<code>client_mutation_id = sgqlc.types.Field(String, graphql_name='clientMutationId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DeleteHistoryEntryByItemInput.item","title":"<code>item = sgqlc.types.Field(sgqlc.types.non_null('ItemCreateInput'), graphql_name='item')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DeleteInput","title":"<code>DeleteInput</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class DeleteInput(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('client_mutation_id', 'id')\n    client_mutation_id = sgqlc.types.Field(\n        String, graphql_name='clientMutationId')\n    id = sgqlc.types.Field(sgqlc.types.non_null(ID), graphql_name='id')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DeleteInput.__field_names__","title":"<code>__field_names__ = ('client_mutation_id', 'id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DeleteInput.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DeleteInput.client_mutation_id","title":"<code>client_mutation_id = sgqlc.types.Field(String, graphql_name='clientMutationId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DeleteInput.id","title":"<code>id = sgqlc.types.Field(sgqlc.types.non_null(ID), graphql_name='id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DeletePayload","title":"<code>DeletePayload</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class DeletePayload(sgqlc.types.Type):\n    __schema__ = audiothek_schema\n    __field_names__ = ('client_mutation_id',)\n    client_mutation_id = sgqlc.types.Field(\n        String, graphql_name='clientMutationId')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DeletePayload.__field_names__","title":"<code>__field_names__ = ('client_mutation_id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DeletePayload.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DeletePayload.client_mutation_id","title":"<code>client_mutation_id = sgqlc.types.Field(String, graphql_name='clientMutationId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DepublishExpiredItemsInput","title":"<code>DepublishExpiredItemsInput</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class DepublishExpiredItemsInput(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('client_mutation_id',)\n    client_mutation_id = sgqlc.types.Field(\n        String, graphql_name='clientMutationId')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DepublishExpiredItemsInput.__field_names__","title":"<code>__field_names__ = ('client_mutation_id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DepublishExpiredItemsInput.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DepublishExpiredItemsInput.client_mutation_id","title":"<code>client_mutation_id = sgqlc.types.Field(String, graphql_name='clientMutationId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DepublishExpiredItemsPayload","title":"<code>DepublishExpiredItemsPayload</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class DepublishExpiredItemsPayload(sgqlc.types.Type):\n    __schema__ = audiothek_schema\n    __field_names__ = ('client_mutation_id', 'big_int', 'query')\n    client_mutation_id = sgqlc.types.Field(\n        String, graphql_name='clientMutationId')\n    big_int = sgqlc.types.Field(BigInt, graphql_name='bigInt')\n    query = sgqlc.types.Field('Query', graphql_name='query')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DepublishExpiredItemsPayload.__field_names__","title":"<code>__field_names__ = ('client_mutation_id', 'big_int', 'query')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DepublishExpiredItemsPayload.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DepublishExpiredItemsPayload.big_int","title":"<code>big_int = sgqlc.types.Field(BigInt, graphql_name='bigInt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DepublishExpiredItemsPayload.client_mutation_id","title":"<code>client_mutation_id = sgqlc.types.Field(String, graphql_name='clientMutationId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DepublishExpiredItemsPayload.query","title":"<code>query = sgqlc.types.Field('Query', graphql_name='query')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DurationVariant","title":"<code>DurationVariant</code>","text":"<p>         Bases: <code>sgqlc.types.Enum</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class DurationVariant(sgqlc.types.Enum):\n    __schema__ = audiothek_schema\n    __choices__ = ('ISO8601', 'SECONDS')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DurationVariant.__choices__","title":"<code>__choices__ = ('ISO8601', 'SECONDS')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.DurationVariant.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCategoriesConnection","title":"<code>EditorialCategoriesConnection</code>","text":"<p>         Bases: <code>sgqlc.types.relay.Connection</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class EditorialCategoriesConnection(sgqlc.types.relay.Connection):\n    __schema__ = audiothek_schema\n    __field_names__ = ('nodes', 'edges', 'page_info',\n                       'total_count', 'title', 'tracking')\n    nodes = sgqlc.types.Field(sgqlc.types.list_of(\n        sgqlc.types.non_null('EditorialCategory')), graphql_name='nodes')\n    edges = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(\n        sgqlc.types.non_null('EditorialCategoriesEdge'))), graphql_name='edges')\n    page_info = sgqlc.types.Field('PageInfo', graphql_name='pageInfo')\n    total_count = sgqlc.types.Field(\n        sgqlc.types.non_null(Int), graphql_name='totalCount')\n    title = sgqlc.types.Field(String, graphql_name='title')\n    tracking = sgqlc.types.Field(JSON, graphql_name='tracking')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCategoriesConnection.__field_names__","title":"<code>__field_names__ = ('nodes', 'edges', 'page_info', 'total_count', 'title', 'tracking')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCategoriesConnection.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCategoriesConnection.edges","title":"<code>edges = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('EditorialCategoriesEdge'))), graphql_name='edges')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCategoriesConnection.nodes","title":"<code>nodes = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('EditorialCategory')), graphql_name='nodes')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCategoriesConnection.page_info","title":"<code>page_info = sgqlc.types.Field('PageInfo', graphql_name='pageInfo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCategoriesConnection.title","title":"<code>title = sgqlc.types.Field(String, graphql_name='title')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCategoriesConnection.total_count","title":"<code>total_count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='totalCount')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCategoriesConnection.tracking","title":"<code>tracking = sgqlc.types.Field(JSON, graphql_name='tracking')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCategoriesEdge","title":"<code>EditorialCategoriesEdge</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class EditorialCategoriesEdge(sgqlc.types.Type):\n    __schema__ = audiothek_schema\n    __field_names__ = ('cursor', 'node')\n    cursor = sgqlc.types.Field(Cursor, graphql_name='cursor')\n    node = sgqlc.types.Field(sgqlc.types.non_null(\n        'EditorialCategory'), graphql_name='node')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCategoriesEdge.__field_names__","title":"<code>__field_names__ = ('cursor', 'node')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCategoriesEdge.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCategoriesEdge.cursor","title":"<code>cursor = sgqlc.types.Field(Cursor, graphql_name='cursor')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCategoriesEdge.node","title":"<code>node = sgqlc.types.Field(sgqlc.types.non_null('EditorialCategory'), graphql_name='node')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCategoriesOrderBy","title":"<code>EditorialCategoriesOrderBy</code>","text":"<p>         Bases: <code>sgqlc.types.Enum</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class EditorialCategoriesOrderBy(sgqlc.types.Enum):\n    __schema__ = audiothek_schema\n    __choices__ = ('ID_ASC', 'ID_DESC', 'IMAGE_ASC', 'IMAGE_DESC', 'NATURAL', 'ORDER_ASC', 'ORDER_DESC',\n                   'PRIMARY_KEY_ASC', 'PRIMARY_KEY_DESC', 'SOPHORA_ID_ASC', 'SOPHORA_ID_DESC', 'TITLE_ASC', 'TITLE_DESC')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCategoriesOrderBy.__choices__","title":"<code>__choices__ = ('ID_ASC', 'ID_DESC', 'IMAGE_ASC', 'IMAGE_DESC', 'NATURAL', 'ORDER_ASC', 'ORDER_DESC', 'PRIMARY_KEY_ASC', 'PRIMARY_KEY_DESC', 'SOPHORA_ID_ASC', 'SOPHORA_ID_DESC', 'TITLE_ASC', 'TITLE_DESC')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCategoriesOrderBy.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCategory","title":"<code>EditorialCategory</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code>, <code>Node</code>, <code>Teaser</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class EditorialCategory(sgqlc.types.Type, Node, Teaser):\n    __schema__ = audiothek_schema\n    __field_names__ = ('row_id', 'sophora_id', 'order', 'items', 'categories_to_program_sets_by_category_sophora_id',\n                       'categories_to_program_sets_by_category_sophora_id_list', 'recent_items', 'recent_items_list', 'program_sets', 'program_sets_list')\n    row_id = sgqlc.types.Field(\n        sgqlc.types.non_null(String), graphql_name='rowId')\n    sophora_id = sgqlc.types.Field(String, graphql_name='sophoraId')\n    order = sgqlc.types.Field(Int, graphql_name='order')\n    items = sgqlc.types.Field(sgqlc.types.non_null(ItemsConnection), graphql_name='items', args=sgqlc.types.ArgDict((\n        ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)),\n        ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)),\n        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),\n        ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)),\n        ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)),\n        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(\n            ItemsOrderBy)), graphql_name='orderBy', default=('PRIMARY_KEY_ASC',))),\n        ('condition', sgqlc.types.Arg(ItemCondition,\n         graphql_name='condition', default=None)),\n        ('filter', sgqlc.types.Arg(ItemFilter, graphql_name='filter', default=None)),\n    ))\n    )\n    categories_to_program_sets_by_category_sophora_id = sgqlc.types.Field(sgqlc.types.non_null(CategoriesToProgramSetsConnection), graphql_name='categoriesToProgramSetsByCategorySophoraId', args=sgqlc.types.ArgDict((\n        ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)),\n        ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)),\n        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),\n        ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)),\n        ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)),\n        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(\n            CategoriesToProgramSetsOrderBy)), graphql_name='orderBy', default=('PRIMARY_KEY_ASC',))),\n        ('condition', sgqlc.types.Arg(CategoriesToProgramSetCondition,\n         graphql_name='condition', default=None)),\n        ('filter', sgqlc.types.Arg(CategoriesToProgramSetFilter,\n         graphql_name='filter', default=None)),\n    ))\n    )\n    categories_to_program_sets_by_category_sophora_id_list = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(CategoriesToProgramSet))), graphql_name='categoriesToProgramSetsByCategorySophoraIdList', args=sgqlc.types.ArgDict((\n        ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)),\n        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),\n        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(\n            CategoriesToProgramSetsOrderBy)), graphql_name='orderBy', default=None)),\n        ('condition', sgqlc.types.Arg(CategoriesToProgramSetCondition,\n         graphql_name='condition', default=None)),\n        ('filter', sgqlc.types.Arg(CategoriesToProgramSetFilter,\n         graphql_name='filter', default=None)),\n    ))\n    )\n    recent_items = sgqlc.types.Field(sgqlc.types.non_null(ItemsConnection), graphql_name='recentItems', args=sgqlc.types.ArgDict((\n        ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)),\n        ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)),\n        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),\n        ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)),\n        ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)),\n        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(\n            sgqlc.types.non_null(ItemsOrderBy)), graphql_name='orderBy', default=None)),\n        ('condition', sgqlc.types.Arg(ItemCondition,\n         graphql_name='condition', default=None)),\n        ('filter', sgqlc.types.Arg(ItemFilter, graphql_name='filter', default=None)),\n    ))\n    )\n    recent_items_list = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('Item')), graphql_name='recentItemsList', args=sgqlc.types.ArgDict((\n        ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)),\n        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),\n        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(\n            sgqlc.types.non_null(ItemsOrderBy)), graphql_name='orderBy', default=None)),\n        ('condition', sgqlc.types.Arg(ItemCondition,\n         graphql_name='condition', default=None)),\n        ('filter', sgqlc.types.Arg(ItemFilter, graphql_name='filter', default=None)),\n    ))\n    )\n    program_sets = sgqlc.types.Field(sgqlc.types.non_null(EditorialCategoryProgramSetsManyToManyConnection), graphql_name='programSets', args=sgqlc.types.ArgDict((\n        ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)),\n        ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)),\n        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),\n        ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)),\n        ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)),\n        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(\n            ProgramSetsOrderBy)), graphql_name='orderBy', default=('PRIMARY_KEY_ASC',))),\n        ('condition', sgqlc.types.Arg(ProgramSetCondition,\n         graphql_name='condition', default=None)),\n        ('filter', sgqlc.types.Arg(ProgramSetFilter,\n         graphql_name='filter', default=None)),\n    ))\n    )\n    program_sets_list = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('ProgramSet'))), graphql_name='programSetsList', args=sgqlc.types.ArgDict((\n        ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)),\n        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),\n        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(\n            ProgramSetsOrderBy)), graphql_name='orderBy', default=None)),\n        ('condition', sgqlc.types.Arg(ProgramSetCondition,\n         graphql_name='condition', default=None)),\n        ('filter', sgqlc.types.Arg(ProgramSetFilter,\n         graphql_name='filter', default=None)),\n    ))\n    )\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCategory.__field_names__","title":"<code>__field_names__ = ('row_id', 'sophora_id', 'order', 'items', 'categories_to_program_sets_by_category_sophora_id', 'categories_to_program_sets_by_category_sophora_id_list', 'recent_items', 'recent_items_list', 'program_sets', 'program_sets_list')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCategory.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCategory.categories_to_program_sets_by_category_sophora_id","title":"<code>categories_to_program_sets_by_category_sophora_id = sgqlc.types.Field(sgqlc.types.non_null(CategoriesToProgramSetsConnection), graphql_name='categoriesToProgramSetsByCategorySophoraId', args=sgqlc.types.ArgDict((('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)), ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)), ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)), ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)), ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)), ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(CategoriesToProgramSetsOrderBy)), graphql_name='orderBy', default=('PRIMARY_KEY_ASC'))), ('condition', sgqlc.types.Arg(CategoriesToProgramSetCondition, graphql_name='condition', default=None)), ('filter', sgqlc.types.Arg(CategoriesToProgramSetFilter, graphql_name='filter', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCategory.categories_to_program_sets_by_category_sophora_id_list","title":"<code>categories_to_program_sets_by_category_sophora_id_list = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(CategoriesToProgramSet))), graphql_name='categoriesToProgramSetsByCategorySophoraIdList', args=sgqlc.types.ArgDict((('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)), ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)), ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(CategoriesToProgramSetsOrderBy)), graphql_name='orderBy', default=None)), ('condition', sgqlc.types.Arg(CategoriesToProgramSetCondition, graphql_name='condition', default=None)), ('filter', sgqlc.types.Arg(CategoriesToProgramSetFilter, graphql_name='filter', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCategory.items","title":"<code>items = sgqlc.types.Field(sgqlc.types.non_null(ItemsConnection), graphql_name='items', args=sgqlc.types.ArgDict((('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)), ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)), ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)), ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)), ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)), ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(ItemsOrderBy)), graphql_name='orderBy', default=('PRIMARY_KEY_ASC'))), ('condition', sgqlc.types.Arg(ItemCondition, graphql_name='condition', default=None)), ('filter', sgqlc.types.Arg(ItemFilter, graphql_name='filter', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCategory.order","title":"<code>order = sgqlc.types.Field(Int, graphql_name='order')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCategory.program_sets","title":"<code>program_sets = sgqlc.types.Field(sgqlc.types.non_null(EditorialCategoryProgramSetsManyToManyConnection), graphql_name='programSets', args=sgqlc.types.ArgDict((('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)), ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)), ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)), ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)), ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)), ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(ProgramSetsOrderBy)), graphql_name='orderBy', default=('PRIMARY_KEY_ASC'))), ('condition', sgqlc.types.Arg(ProgramSetCondition, graphql_name='condition', default=None)), ('filter', sgqlc.types.Arg(ProgramSetFilter, graphql_name='filter', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCategory.program_sets_list","title":"<code>program_sets_list = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('ProgramSet'))), graphql_name='programSetsList', args=sgqlc.types.ArgDict((('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)), ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)), ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(ProgramSetsOrderBy)), graphql_name='orderBy', default=None)), ('condition', sgqlc.types.Arg(ProgramSetCondition, graphql_name='condition', default=None)), ('filter', sgqlc.types.Arg(ProgramSetFilter, graphql_name='filter', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCategory.recent_items","title":"<code>recent_items = sgqlc.types.Field(sgqlc.types.non_null(ItemsConnection), graphql_name='recentItems', args=sgqlc.types.ArgDict((('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)), ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)), ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)), ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)), ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)), ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(ItemsOrderBy)), graphql_name='orderBy', default=None)), ('condition', sgqlc.types.Arg(ItemCondition, graphql_name='condition', default=None)), ('filter', sgqlc.types.Arg(ItemFilter, graphql_name='filter', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCategory.recent_items_list","title":"<code>recent_items_list = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('Item')), graphql_name='recentItemsList', args=sgqlc.types.ArgDict((('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)), ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)), ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(ItemsOrderBy)), graphql_name='orderBy', default=None)), ('condition', sgqlc.types.Arg(ItemCondition, graphql_name='condition', default=None)), ('filter', sgqlc.types.Arg(ItemFilter, graphql_name='filter', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCategory.row_id","title":"<code>row_id = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='rowId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCategory.sophora_id","title":"<code>sophora_id = sgqlc.types.Field(String, graphql_name='sophoraId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCategoryCondition","title":"<code>EditorialCategoryCondition</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class EditorialCategoryCondition(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('id', 'title', 'image', 'sophora_id', 'order')\n    id = sgqlc.types.Field(String, graphql_name='id')\n    title = sgqlc.types.Field(String, graphql_name='title')\n    image = sgqlc.types.Field('ImageTypeInput', graphql_name='image')\n    sophora_id = sgqlc.types.Field(String, graphql_name='sophoraId')\n    order = sgqlc.types.Field(Int, graphql_name='order')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCategoryCondition.__field_names__","title":"<code>__field_names__ = ('id', 'title', 'image', 'sophora_id', 'order')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCategoryCondition.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCategoryCondition.id","title":"<code>id = sgqlc.types.Field(String, graphql_name='id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCategoryCondition.image","title":"<code>image = sgqlc.types.Field('ImageTypeInput', graphql_name='image')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCategoryCondition.order","title":"<code>order = sgqlc.types.Field(Int, graphql_name='order')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCategoryCondition.sophora_id","title":"<code>sophora_id = sgqlc.types.Field(String, graphql_name='sophoraId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCategoryCondition.title","title":"<code>title = sgqlc.types.Field(String, graphql_name='title')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCategoryFilter","title":"<code>EditorialCategoryFilter</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class EditorialCategoryFilter(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('id', 'title', 'sophora_id', 'order',\n                       'image', 'and_', 'or_', 'not_')\n    id = sgqlc.types.Field('StringFilter', graphql_name='id')\n    title = sgqlc.types.Field('StringFilter', graphql_name='title')\n    sophora_id = sgqlc.types.Field('StringFilter', graphql_name='sophoraId')\n    order = sgqlc.types.Field('IntFilter', graphql_name='order')\n    image = sgqlc.types.Field('ImageTypeFilter', graphql_name='image')\n    and_ = sgqlc.types.Field(sgqlc.types.list_of(\n        sgqlc.types.non_null('EditorialCategoryFilter')), graphql_name='and')\n    or_ = sgqlc.types.Field(sgqlc.types.list_of(\n        sgqlc.types.non_null('EditorialCategoryFilter')), graphql_name='or')\n    not_ = sgqlc.types.Field('EditorialCategoryFilter', graphql_name='not')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCategoryFilter.__field_names__","title":"<code>__field_names__ = ('id', 'title', 'sophora_id', 'order', 'image', 'and_', 'or_', 'not_')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCategoryFilter.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCategoryFilter.and_","title":"<code>and_ = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('EditorialCategoryFilter')), graphql_name='and')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCategoryFilter.id","title":"<code>id = sgqlc.types.Field('StringFilter', graphql_name='id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCategoryFilter.image","title":"<code>image = sgqlc.types.Field('ImageTypeFilter', graphql_name='image')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCategoryFilter.not_","title":"<code>not_ = sgqlc.types.Field('EditorialCategoryFilter', graphql_name='not')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCategoryFilter.or_","title":"<code>or_ = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('EditorialCategoryFilter')), graphql_name='or')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCategoryFilter.order","title":"<code>order = sgqlc.types.Field('IntFilter', graphql_name='order')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCategoryFilter.sophora_id","title":"<code>sophora_id = sgqlc.types.Field('StringFilter', graphql_name='sophoraId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCategoryFilter.title","title":"<code>title = sgqlc.types.Field('StringFilter', graphql_name='title')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCategoryProgramSetsManyToManyConnection","title":"<code>EditorialCategoryProgramSetsManyToManyConnection</code>","text":"<p>         Bases: <code>sgqlc.types.relay.Connection</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class EditorialCategoryProgramSetsManyToManyConnection(sgqlc.types.relay.Connection):\n    __schema__ = audiothek_schema\n    __field_names__ = ('nodes', 'edges', 'page_info', 'total_count')\n    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(\n        sgqlc.types.non_null('ProgramSet'))), graphql_name='nodes')\n    edges = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(\n        'EditorialCategoryProgramSetsManyToManyEdge'))), graphql_name='edges')\n    page_info = sgqlc.types.Field(sgqlc.types.non_null(\n        'PageInfo'), graphql_name='pageInfo')\n    total_count = sgqlc.types.Field(\n        sgqlc.types.non_null(Int), graphql_name='totalCount')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCategoryProgramSetsManyToManyConnection.__field_names__","title":"<code>__field_names__ = ('nodes', 'edges', 'page_info', 'total_count')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCategoryProgramSetsManyToManyConnection.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCategoryProgramSetsManyToManyConnection.edges","title":"<code>edges = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('EditorialCategoryProgramSetsManyToManyEdge'))), graphql_name='edges')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCategoryProgramSetsManyToManyConnection.nodes","title":"<code>nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('ProgramSet'))), graphql_name='nodes')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCategoryProgramSetsManyToManyConnection.page_info","title":"<code>page_info = sgqlc.types.Field(sgqlc.types.non_null('PageInfo'), graphql_name='pageInfo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCategoryProgramSetsManyToManyConnection.total_count","title":"<code>total_count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='totalCount')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCategoryProgramSetsManyToManyEdge","title":"<code>EditorialCategoryProgramSetsManyToManyEdge</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class EditorialCategoryProgramSetsManyToManyEdge(sgqlc.types.Type):\n    __schema__ = audiothek_schema\n    __field_names__ = ('cursor', 'node')\n    cursor = sgqlc.types.Field(Cursor, graphql_name='cursor')\n    node = sgqlc.types.Field(sgqlc.types.non_null(\n        'ProgramSet'), graphql_name='node')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCategoryProgramSetsManyToManyEdge.__field_names__","title":"<code>__field_names__ = ('cursor', 'node')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCategoryProgramSetsManyToManyEdge.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCategoryProgramSetsManyToManyEdge.cursor","title":"<code>cursor = sgqlc.types.Field(Cursor, graphql_name='cursor')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCategoryProgramSetsManyToManyEdge.node","title":"<code>node = sgqlc.types.Field(sgqlc.types.non_null('ProgramSet'), graphql_name='node')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCollection","title":"<code>EditorialCollection</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code>, <code>Node</code>, <code>Teaser</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class EditorialCollection(sgqlc.types.Type, Node, Teaser):\n    __schema__ = audiothek_schema\n    __field_names__ = ('sophora_id', 'broadcast_duration',\n                       'coremedia_id', 'row_id', 'summary', 'items')\n    sophora_id = sgqlc.types.Field(\n        sgqlc.types.non_null(String), graphql_name='sophoraId')\n    broadcast_duration = sgqlc.types.Field(\n        Int, graphql_name='broadcastDuration')\n    coremedia_id = sgqlc.types.Field(String, graphql_name='coremediaId')\n    row_id = sgqlc.types.Field(sgqlc.types.non_null(ID), graphql_name='rowId')\n    summary = sgqlc.types.Field(String, graphql_name='summary')\n    items = sgqlc.types.Field(sgqlc.types.non_null(ItemsConnection), graphql_name='items', args=sgqlc.types.ArgDict((\n        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),\n        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),\n    ))\n    )\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCollection.__field_names__","title":"<code>__field_names__ = ('sophora_id', 'broadcast_duration', 'coremedia_id', 'row_id', 'summary', 'items')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCollection.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCollection.broadcast_duration","title":"<code>broadcast_duration = sgqlc.types.Field(Int, graphql_name='broadcastDuration')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCollection.coremedia_id","title":"<code>coremedia_id = sgqlc.types.Field(String, graphql_name='coremediaId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCollection.items","title":"<code>items = sgqlc.types.Field(sgqlc.types.non_null(ItemsConnection), graphql_name='items', args=sgqlc.types.ArgDict((('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)), ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCollection.row_id","title":"<code>row_id = sgqlc.types.Field(sgqlc.types.non_null(ID), graphql_name='rowId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCollection.sophora_id","title":"<code>sophora_id = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='sophoraId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCollection.summary","title":"<code>summary = sgqlc.types.Field(String, graphql_name='summary')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCollectionCondition","title":"<code>EditorialCollectionCondition</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class EditorialCollectionCondition(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('sophora_id', 'title', 'image', 'broadcast_duration',\n                       'number_of_elements', 'synopsis', 'coremedia_id')\n    sophora_id = sgqlc.types.Field(String, graphql_name='sophoraId')\n    title = sgqlc.types.Field(String, graphql_name='title')\n    image = sgqlc.types.Field('ImageTypeInput', graphql_name='image')\n    broadcast_duration = sgqlc.types.Field(\n        Int, graphql_name='broadcastDuration')\n    number_of_elements = sgqlc.types.Field(\n        Int, graphql_name='numberOfElements')\n    synopsis = sgqlc.types.Field(String, graphql_name='synopsis')\n    coremedia_id = sgqlc.types.Field(String, graphql_name='coremediaId')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCollectionCondition.__field_names__","title":"<code>__field_names__ = ('sophora_id', 'title', 'image', 'broadcast_duration', 'number_of_elements', 'synopsis', 'coremedia_id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCollectionCondition.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCollectionCondition.broadcast_duration","title":"<code>broadcast_duration = sgqlc.types.Field(Int, graphql_name='broadcastDuration')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCollectionCondition.coremedia_id","title":"<code>coremedia_id = sgqlc.types.Field(String, graphql_name='coremediaId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCollectionCondition.image","title":"<code>image = sgqlc.types.Field('ImageTypeInput', graphql_name='image')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCollectionCondition.number_of_elements","title":"<code>number_of_elements = sgqlc.types.Field(Int, graphql_name='numberOfElements')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCollectionCondition.sophora_id","title":"<code>sophora_id = sgqlc.types.Field(String, graphql_name='sophoraId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCollectionCondition.synopsis","title":"<code>synopsis = sgqlc.types.Field(String, graphql_name='synopsis')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCollectionCondition.title","title":"<code>title = sgqlc.types.Field(String, graphql_name='title')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCollectionFilter","title":"<code>EditorialCollectionFilter</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class EditorialCollectionFilter(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('sophora_id', 'title', 'broadcast_duration', 'number_of_elements',\n                       'synopsis', 'coremedia_id', 'image', 'and_', 'or_', 'not_')\n    sophora_id = sgqlc.types.Field('StringFilter', graphql_name='sophoraId')\n    title = sgqlc.types.Field('StringFilter', graphql_name='title')\n    broadcast_duration = sgqlc.types.Field(\n        'IntFilter', graphql_name='broadcastDuration')\n    number_of_elements = sgqlc.types.Field(\n        'IntFilter', graphql_name='numberOfElements')\n    synopsis = sgqlc.types.Field('StringFilter', graphql_name='synopsis')\n    coremedia_id = sgqlc.types.Field(\n        'StringFilter', graphql_name='coremediaId')\n    image = sgqlc.types.Field('ImageTypeFilter', graphql_name='image')\n    and_ = sgqlc.types.Field(sgqlc.types.list_of(\n        sgqlc.types.non_null('EditorialCollectionFilter')), graphql_name='and')\n    or_ = sgqlc.types.Field(sgqlc.types.list_of(\n        sgqlc.types.non_null('EditorialCollectionFilter')), graphql_name='or')\n    not_ = sgqlc.types.Field('EditorialCollectionFilter', graphql_name='not')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCollectionFilter.__field_names__","title":"<code>__field_names__ = ('sophora_id', 'title', 'broadcast_duration', 'number_of_elements', 'synopsis', 'coremedia_id', 'image', 'and_', 'or_', 'not_')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCollectionFilter.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCollectionFilter.and_","title":"<code>and_ = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('EditorialCollectionFilter')), graphql_name='and')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCollectionFilter.broadcast_duration","title":"<code>broadcast_duration = sgqlc.types.Field('IntFilter', graphql_name='broadcastDuration')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCollectionFilter.coremedia_id","title":"<code>coremedia_id = sgqlc.types.Field('StringFilter', graphql_name='coremediaId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCollectionFilter.image","title":"<code>image = sgqlc.types.Field('ImageTypeFilter', graphql_name='image')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCollectionFilter.not_","title":"<code>not_ = sgqlc.types.Field('EditorialCollectionFilter', graphql_name='not')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCollectionFilter.number_of_elements","title":"<code>number_of_elements = sgqlc.types.Field('IntFilter', graphql_name='numberOfElements')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCollectionFilter.or_","title":"<code>or_ = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('EditorialCollectionFilter')), graphql_name='or')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCollectionFilter.sophora_id","title":"<code>sophora_id = sgqlc.types.Field('StringFilter', graphql_name='sophoraId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCollectionFilter.synopsis","title":"<code>synopsis = sgqlc.types.Field('StringFilter', graphql_name='synopsis')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCollectionFilter.title","title":"<code>title = sgqlc.types.Field('StringFilter', graphql_name='title')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCollectionSection","title":"<code>EditorialCollectionSection</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code>, <code>Section</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class EditorialCollectionSection(sgqlc.types.Type, Section):\n    __schema__ = audiothek_schema\n    __field_names__ = ('key',)\n    key = sgqlc.types.Field(String, graphql_name='key')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCollectionSection.__field_names__","title":"<code>__field_names__ = ('key')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCollectionSection.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCollectionSection.key","title":"<code>key = sgqlc.types.Field(String, graphql_name='key')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCollectionsConnection","title":"<code>EditorialCollectionsConnection</code>","text":"<p>         Bases: <code>sgqlc.types.relay.Connection</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class EditorialCollectionsConnection(sgqlc.types.relay.Connection):\n    __schema__ = audiothek_schema\n    __field_names__ = ('nodes', 'edges', 'page_info', 'total_count')\n    nodes = sgqlc.types.Field(sgqlc.types.list_of(\n        sgqlc.types.non_null('EditorialCollection')), graphql_name='nodes')\n    edges = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(\n        sgqlc.types.non_null('EditorialCollectionsEdge'))), graphql_name='edges')\n    page_info = sgqlc.types.Field('PageInfo', graphql_name='pageInfo')\n    total_count = sgqlc.types.Field(\n        sgqlc.types.non_null(Int), graphql_name='totalCount')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCollectionsConnection.__field_names__","title":"<code>__field_names__ = ('nodes', 'edges', 'page_info', 'total_count')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCollectionsConnection.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCollectionsConnection.edges","title":"<code>edges = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('EditorialCollectionsEdge'))), graphql_name='edges')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCollectionsConnection.nodes","title":"<code>nodes = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('EditorialCollection')), graphql_name='nodes')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCollectionsConnection.page_info","title":"<code>page_info = sgqlc.types.Field('PageInfo', graphql_name='pageInfo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCollectionsConnection.total_count","title":"<code>total_count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='totalCount')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCollectionsEdge","title":"<code>EditorialCollectionsEdge</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class EditorialCollectionsEdge(sgqlc.types.Type):\n    __schema__ = audiothek_schema\n    __field_names__ = ('cursor', 'node')\n    cursor = sgqlc.types.Field(Cursor, graphql_name='cursor')\n    node = sgqlc.types.Field(sgqlc.types.non_null(\n        'EditorialCollection'), graphql_name='node')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCollectionsEdge.__field_names__","title":"<code>__field_names__ = ('cursor', 'node')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCollectionsEdge.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCollectionsEdge.cursor","title":"<code>cursor = sgqlc.types.Field(Cursor, graphql_name='cursor')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCollectionsEdge.node","title":"<code>node = sgqlc.types.Field(sgqlc.types.non_null('EditorialCollection'), graphql_name='node')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCollectionsOrderBy","title":"<code>EditorialCollectionsOrderBy</code>","text":"<p>         Bases: <code>sgqlc.types.Enum</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class EditorialCollectionsOrderBy(sgqlc.types.Enum):\n    __schema__ = audiothek_schema\n    __choices__ = ('BROADCAST_DURATION_ASC', 'BROADCAST_DURATION_DESC', 'COREMEDIA_ID_ASC', 'COREMEDIA_ID_DESC', 'IMAGE_ASC', 'IMAGE_DESC', 'NATURAL', 'NUMBER_OF_ELEMENTS_ASC',\n                   'NUMBER_OF_ELEMENTS_DESC', 'PRIMARY_KEY_ASC', 'PRIMARY_KEY_DESC', 'SOPHORA_ID_ASC', 'SOPHORA_ID_DESC', 'SYNOPSIS_ASC', 'SYNOPSIS_DESC', 'TITLE_ASC', 'TITLE_DESC')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCollectionsOrderBy.__choices__","title":"<code>__choices__ = ('BROADCAST_DURATION_ASC', 'BROADCAST_DURATION_DESC', 'COREMEDIA_ID_ASC', 'COREMEDIA_ID_DESC', 'IMAGE_ASC', 'IMAGE_DESC', 'NATURAL', 'NUMBER_OF_ELEMENTS_ASC', 'NUMBER_OF_ELEMENTS_DESC', 'PRIMARY_KEY_ASC', 'PRIMARY_KEY_DESC', 'SOPHORA_ID_ASC', 'SOPHORA_ID_DESC', 'SYNOPSIS_ASC', 'SYNOPSIS_DESC', 'TITLE_ASC', 'TITLE_DESC')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EditorialCollectionsOrderBy.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUser","title":"<code>EndUser</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code>, <code>EndUserInterface</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class EndUser(sgqlc.types.Type, EndUserInterface):\n    __schema__ = audiothek_schema\n    __field_names__ = ()\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUser.__field_names__","title":"<code>__field_names__ = ()</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUser.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserConnection","title":"<code>EndUserConnection</code>","text":"<p>         Bases: <code>sgqlc.types.relay.Connection</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class EndUserConnection(sgqlc.types.relay.Connection):\n    __schema__ = audiothek_schema\n    __field_names__ = ('count', 'edges', 'nodes', 'page_info')\n    count = sgqlc.types.Field(Int, graphql_name='count')\n    edges = sgqlc.types.Field(sgqlc.types.list_of(\n        'EndUserEdge'), graphql_name='edges')\n    nodes = sgqlc.types.Field(sgqlc.types.list_of(\n        'EndUserInterface'), graphql_name='nodes')\n    page_info = sgqlc.types.Field(sgqlc.types.non_null(\n        'PageInfo'), graphql_name='pageInfo')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserConnection.__field_names__","title":"<code>__field_names__ = ('count', 'edges', 'nodes', 'page_info')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserConnection.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserConnection.count","title":"<code>count = sgqlc.types.Field(Int, graphql_name='count')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserConnection.edges","title":"<code>edges = sgqlc.types.Field(sgqlc.types.list_of('EndUserEdge'), graphql_name='edges')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserConnection.nodes","title":"<code>nodes = sgqlc.types.Field(sgqlc.types.list_of('EndUserInterface'), graphql_name='nodes')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserConnection.page_info","title":"<code>page_info = sgqlc.types.Field(sgqlc.types.non_null('PageInfo'), graphql_name='pageInfo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserConnectionFilterB","title":"<code>EndUserConnectionFilterB</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class EndUserConnectionFilterB(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('empty', 'contains')\n    empty = sgqlc.types.Field(BooleanFilterB, graphql_name='empty')\n    contains = sgqlc.types.Field(ID, graphql_name='contains')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserConnectionFilterB.__field_names__","title":"<code>__field_names__ = ('empty', 'contains')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserConnectionFilterB.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserConnectionFilterB.contains","title":"<code>contains = sgqlc.types.Field(ID, graphql_name='contains')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserConnectionFilterB.empty","title":"<code>empty = sgqlc.types.Field(BooleanFilterB, graphql_name='empty')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserCreateInput","title":"<code>EndUserCreateInput</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class EndUserCreateInput(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('client_mutation_id', 'type',\n                       'local_id', 'login_id', 'sync_successful')\n    client_mutation_id = sgqlc.types.Field(\n        String, graphql_name='clientMutationId')\n    type = sgqlc.types.Field(String, graphql_name='type')\n    local_id = sgqlc.types.Field(String, graphql_name='localId')\n    login_id = sgqlc.types.Field(String, graphql_name='loginId')\n    sync_successful = sgqlc.types.Field(Boolean, graphql_name='syncSuccessful')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserCreateInput.__field_names__","title":"<code>__field_names__ = ('client_mutation_id', 'type', 'local_id', 'login_id', 'sync_successful')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserCreateInput.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserCreateInput.client_mutation_id","title":"<code>client_mutation_id = sgqlc.types.Field(String, graphql_name='clientMutationId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserCreateInput.local_id","title":"<code>local_id = sgqlc.types.Field(String, graphql_name='localId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserCreateInput.login_id","title":"<code>login_id = sgqlc.types.Field(String, graphql_name='loginId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserCreateInput.sync_successful","title":"<code>sync_successful = sgqlc.types.Field(Boolean, graphql_name='syncSuccessful')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserCreateInput.type","title":"<code>type = sgqlc.types.Field(String, graphql_name='type')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserEdge","title":"<code>EndUserEdge</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class EndUserEdge(sgqlc.types.Type):\n    __schema__ = audiothek_schema\n    __field_names__ = ('cursor', 'node')\n    cursor = sgqlc.types.Field(\n        sgqlc.types.non_null(String), graphql_name='cursor')\n    node = sgqlc.types.Field('EndUserInterface', graphql_name='node')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserEdge.__field_names__","title":"<code>__field_names__ = ('cursor', 'node')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserEdge.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserEdge.cursor","title":"<code>cursor = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='cursor')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserEdge.node","title":"<code>node = sgqlc.types.Field('EndUserInterface', graphql_name='node')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserFilterB","title":"<code>EndUserFilterB</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class EndUserFilterB(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('created_at', 'local_id', 'login_id',\n                       'modified_at', 'sync_successful')\n    created_at = sgqlc.types.Field(DateFilterB, graphql_name='createdAt')\n    local_id = sgqlc.types.Field('StringFilterB', graphql_name='localId')\n    login_id = sgqlc.types.Field('StringFilterB', graphql_name='loginId')\n    modified_at = sgqlc.types.Field(DateFilterB, graphql_name='modifiedAt')\n    sync_successful = sgqlc.types.Field(\n        BooleanFilterB, graphql_name='syncSuccessful')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserFilterB.__field_names__","title":"<code>__field_names__ = ('created_at', 'local_id', 'login_id', 'modified_at', 'sync_successful')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserFilterB.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserFilterB.created_at","title":"<code>created_at = sgqlc.types.Field(DateFilterB, graphql_name='createdAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserFilterB.local_id","title":"<code>local_id = sgqlc.types.Field('StringFilterB', graphql_name='localId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserFilterB.login_id","title":"<code>login_id = sgqlc.types.Field('StringFilterB', graphql_name='loginId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserFilterB.modified_at","title":"<code>modified_at = sgqlc.types.Field(DateFilterB, graphql_name='modifiedAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserFilterB.sync_successful","title":"<code>sync_successful = sgqlc.types.Field(BooleanFilterB, graphql_name='syncSuccessful')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserInterface","title":"<code>EndUserInterface</code>","text":"<p>         Bases: <code>sgqlc.types.Interface</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class EndUserInterface(sgqlc.types.Interface):\n    __schema__ = audiothek_schema\n    __field_names__ = ('id', 'base_id_prefix', 'bookmarks', 'created_at', 'history', 'local_id',\n                       'login_id', 'modified_at', 'playlists', 'properties', 'queue', 'subscriptions', 'sync_successful')\n    id = sgqlc.types.Field(sgqlc.types.non_null(ID), graphql_name='id')\n    base_id_prefix = sgqlc.types.Field(\n        sgqlc.types.non_null(String), graphql_name='baseIdPrefix')\n    bookmarks = sgqlc.types.Field(\n        BookmarkListInterface, graphql_name='bookmarks')\n    created_at = sgqlc.types.Field(DateTime, graphql_name='createdAt')\n    history = sgqlc.types.Field('HistoryEntryConnection', graphql_name='history', args=sgqlc.types.ArgDict((\n        ('after', sgqlc.types.Arg(String, graphql_name='after', default=None)),\n        ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)),\n        ('before', sgqlc.types.Arg(String, graphql_name='before', default=None)),\n        ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)),\n        ('filter', sgqlc.types.Arg(HistoryEntryFilterB,\n         graphql_name='filter', default=None)),\n        ('order_by', sgqlc.types.Arg(HistoryEntrySortOrder,\n         graphql_name='orderBy', default=None)),\n    ))\n    )\n    local_id = sgqlc.types.Field(String, graphql_name='localId')\n    login_id = sgqlc.types.Field(String, graphql_name='loginId')\n    modified_at = sgqlc.types.Field(DateTime, graphql_name='modifiedAt')\n    playlists = sgqlc.types.Field('PlaylistConnection', graphql_name='playlists', args=sgqlc.types.ArgDict((\n        ('after', sgqlc.types.Arg(String, graphql_name='after', default=None)),\n        ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)),\n        ('before', sgqlc.types.Arg(String, graphql_name='before', default=None)),\n        ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)),\n        ('filter', sgqlc.types.Arg(PlaylistFilterB,\n         graphql_name='filter', default=None)),\n        ('order_by', sgqlc.types.Arg(PlaylistSortOrder,\n         graphql_name='orderBy', default=None)),\n    ))\n    )\n    properties = sgqlc.types.Field('PropertyConnection', graphql_name='properties', args=sgqlc.types.ArgDict((\n        ('after', sgqlc.types.Arg(String, graphql_name='after', default=None)),\n        ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)),\n        ('before', sgqlc.types.Arg(String, graphql_name='before', default=None)),\n        ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)),\n        ('filter', sgqlc.types.Arg(PropertyFilterB,\n         graphql_name='filter', default=None)),\n        ('order_by', sgqlc.types.Arg(PropertySortOrder,\n         graphql_name='orderBy', default=None)),\n    ))\n    )\n    queue = sgqlc.types.Field('QueueInterface', graphql_name='queue')\n    subscriptions = sgqlc.types.Field(\n        'SubscriptionListInterface', graphql_name='subscriptions')\n    sync_successful = sgqlc.types.Field(Boolean, graphql_name='syncSuccessful')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserInterface.__field_names__","title":"<code>__field_names__ = ('id', 'base_id_prefix', 'bookmarks', 'created_at', 'history', 'local_id', 'login_id', 'modified_at', 'playlists', 'properties', 'queue', 'subscriptions', 'sync_successful')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserInterface.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserInterface.base_id_prefix","title":"<code>base_id_prefix = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='baseIdPrefix')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserInterface.bookmarks","title":"<code>bookmarks = sgqlc.types.Field(BookmarkListInterface, graphql_name='bookmarks')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserInterface.created_at","title":"<code>created_at = sgqlc.types.Field(DateTime, graphql_name='createdAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserInterface.history","title":"<code>history = sgqlc.types.Field('HistoryEntryConnection', graphql_name='history', args=sgqlc.types.ArgDict((('after', sgqlc.types.Arg(String, graphql_name='after', default=None)), ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)), ('before', sgqlc.types.Arg(String, graphql_name='before', default=None)), ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)), ('filter', sgqlc.types.Arg(HistoryEntryFilterB, graphql_name='filter', default=None)), ('order_by', sgqlc.types.Arg(HistoryEntrySortOrder, graphql_name='orderBy', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserInterface.id","title":"<code>id = sgqlc.types.Field(sgqlc.types.non_null(ID), graphql_name='id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserInterface.local_id","title":"<code>local_id = sgqlc.types.Field(String, graphql_name='localId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserInterface.login_id","title":"<code>login_id = sgqlc.types.Field(String, graphql_name='loginId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserInterface.modified_at","title":"<code>modified_at = sgqlc.types.Field(DateTime, graphql_name='modifiedAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserInterface.playlists","title":"<code>playlists = sgqlc.types.Field('PlaylistConnection', graphql_name='playlists', args=sgqlc.types.ArgDict((('after', sgqlc.types.Arg(String, graphql_name='after', default=None)), ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)), ('before', sgqlc.types.Arg(String, graphql_name='before', default=None)), ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)), ('filter', sgqlc.types.Arg(PlaylistFilterB, graphql_name='filter', default=None)), ('order_by', sgqlc.types.Arg(PlaylistSortOrder, graphql_name='orderBy', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserInterface.properties","title":"<code>properties = sgqlc.types.Field('PropertyConnection', graphql_name='properties', args=sgqlc.types.ArgDict((('after', sgqlc.types.Arg(String, graphql_name='after', default=None)), ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)), ('before', sgqlc.types.Arg(String, graphql_name='before', default=None)), ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)), ('filter', sgqlc.types.Arg(PropertyFilterB, graphql_name='filter', default=None)), ('order_by', sgqlc.types.Arg(PropertySortOrder, graphql_name='orderBy', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserInterface.queue","title":"<code>queue = sgqlc.types.Field('QueueInterface', graphql_name='queue')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserInterface.subscriptions","title":"<code>subscriptions = sgqlc.types.Field('SubscriptionListInterface', graphql_name='subscriptions')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserInterface.sync_successful","title":"<code>sync_successful = sgqlc.types.Field(Boolean, graphql_name='syncSuccessful')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserPayload","title":"<code>EndUserPayload</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class EndUserPayload(sgqlc.types.Type):\n    __schema__ = audiothek_schema\n    __field_names__ = ('client_mutation_id', 'changed_end_user')\n    client_mutation_id = sgqlc.types.Field(\n        String, graphql_name='clientMutationId')\n    changed_end_user = sgqlc.types.Field(\n        'EndUser', graphql_name='changedEndUser')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserPayload.__field_names__","title":"<code>__field_names__ = ('client_mutation_id', 'changed_end_user')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserPayload.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserPayload.changed_end_user","title":"<code>changed_end_user = sgqlc.types.Field('EndUser', graphql_name='changedEndUser')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserPayload.client_mutation_id","title":"<code>client_mutation_id = sgqlc.types.Field(String, graphql_name='clientMutationId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserRelationFilterB","title":"<code>EndUserRelationFilterB</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class EndUserRelationFilterB(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('id', 'exists')\n    id = sgqlc.types.Field('IDFilterB', graphql_name='id')\n    exists = sgqlc.types.Field(BooleanFilterB, graphql_name='exists')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserRelationFilterB.__field_names__","title":"<code>__field_names__ = ('id', 'exists')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserRelationFilterB.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserRelationFilterB.exists","title":"<code>exists = sgqlc.types.Field(BooleanFilterB, graphql_name='exists')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserRelationFilterB.id","title":"<code>id = sgqlc.types.Field('IDFilterB', graphql_name='id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserRemoveAllListInput","title":"<code>EndUserRemoveAllListInput</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class EndUserRemoveAllListInput(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('client_mutation_id', 'end_user')\n    client_mutation_id = sgqlc.types.Field(\n        String, graphql_name='clientMutationId')\n    end_user = sgqlc.types.Field(\n        sgqlc.types.non_null(ID), graphql_name='endUser')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserRemoveAllListInput.__field_names__","title":"<code>__field_names__ = ('client_mutation_id', 'end_user')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserRemoveAllListInput.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserRemoveAllListInput.client_mutation_id","title":"<code>client_mutation_id = sgqlc.types.Field(String, graphql_name='clientMutationId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserRemoveAllListInput.end_user","title":"<code>end_user = sgqlc.types.Field(sgqlc.types.non_null(ID), graphql_name='endUser')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserSortOrder","title":"<code>EndUserSortOrder</code>","text":"<p>         Bases: <code>sgqlc.types.Enum</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class EndUserSortOrder(sgqlc.types.Enum):\n    __schema__ = audiothek_schema\n    __choices__ = ('CREATEDAT_ASC', 'CREATEDAT_DESC', 'LOCALID_ASC', 'LOCALID_DESC', 'LOGINID_ASC',\n                   'LOGINID_DESC', 'MODIFIEDAT_ASC', 'MODIFIEDAT_DESC', 'SYNCSUCCESSFUL_ASC', 'SYNCSUCCESSFUL_DESC')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserSortOrder.__choices__","title":"<code>__choices__ = ('CREATEDAT_ASC', 'CREATEDAT_DESC', 'LOCALID_ASC', 'LOCALID_DESC', 'LOGINID_ASC', 'LOGINID_DESC', 'MODIFIEDAT_ASC', 'MODIFIEDAT_DESC', 'SYNCSUCCESSFUL_ASC', 'SYNCSUCCESSFUL_DESC')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserSortOrder.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserSyncInput","title":"<code>EndUserSyncInput</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class EndUserSyncInput(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('user', 'bookmarks', 'playlists', 'queued_items',\n                       'program_set_subscriptions', 'history_entries')\n    user = sgqlc.types.Field(sgqlc.types.non_null(\n        EndUserCreateInput), graphql_name='user')\n    bookmarks = sgqlc.types.Field(sgqlc.types.list_of(\n        BookmarkCreateInput), graphql_name='bookmarks')\n    playlists = sgqlc.types.Field(sgqlc.types.list_of(\n        'PlaylistCreateInput'), graphql_name='playlists')\n    queued_items = sgqlc.types.Field(sgqlc.types.list_of(\n        'ItemCreateInput'), graphql_name='queuedItems')\n    program_set_subscriptions = sgqlc.types.Field(sgqlc.types.list_of(\n        'ProgramSetSubscriptionCreateInput'), graphql_name='programSetSubscriptions')\n    history_entries = sgqlc.types.Field(sgqlc.types.list_of(\n        'HistoryEntryCreateInput'), graphql_name='historyEntries')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserSyncInput.__field_names__","title":"<code>__field_names__ = ('user', 'bookmarks', 'playlists', 'queued_items', 'program_set_subscriptions', 'history_entries')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserSyncInput.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserSyncInput.bookmarks","title":"<code>bookmarks = sgqlc.types.Field(sgqlc.types.list_of(BookmarkCreateInput), graphql_name='bookmarks')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserSyncInput.history_entries","title":"<code>history_entries = sgqlc.types.Field(sgqlc.types.list_of('HistoryEntryCreateInput'), graphql_name='historyEntries')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserSyncInput.playlists","title":"<code>playlists = sgqlc.types.Field(sgqlc.types.list_of('PlaylistCreateInput'), graphql_name='playlists')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserSyncInput.program_set_subscriptions","title":"<code>program_set_subscriptions = sgqlc.types.Field(sgqlc.types.list_of('ProgramSetSubscriptionCreateInput'), graphql_name='programSetSubscriptions')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserSyncInput.queued_items","title":"<code>queued_items = sgqlc.types.Field(sgqlc.types.list_of('ItemCreateInput'), graphql_name='queuedItems')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserSyncInput.user","title":"<code>user = sgqlc.types.Field(sgqlc.types.non_null(EndUserCreateInput), graphql_name='user')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserUpdateInput","title":"<code>EndUserUpdateInput</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class EndUserUpdateInput(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('client_mutation_id', 'id',\n                       'local_id', 'login_id', 'sync_successful')\n    client_mutation_id = sgqlc.types.Field(\n        String, graphql_name='clientMutationId')\n    id = sgqlc.types.Field(sgqlc.types.non_null(ID), graphql_name='id')\n    local_id = sgqlc.types.Field(String, graphql_name='localId')\n    login_id = sgqlc.types.Field(String, graphql_name='loginId')\n    sync_successful = sgqlc.types.Field(Boolean, graphql_name='syncSuccessful')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserUpdateInput.__field_names__","title":"<code>__field_names__ = ('client_mutation_id', 'id', 'local_id', 'login_id', 'sync_successful')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserUpdateInput.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserUpdateInput.client_mutation_id","title":"<code>client_mutation_id = sgqlc.types.Field(String, graphql_name='clientMutationId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserUpdateInput.id","title":"<code>id = sgqlc.types.Field(sgqlc.types.non_null(ID), graphql_name='id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserUpdateInput.local_id","title":"<code>local_id = sgqlc.types.Field(String, graphql_name='localId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserUpdateInput.login_id","title":"<code>login_id = sgqlc.types.Field(String, graphql_name='loginId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EndUserUpdateInput.sync_successful","title":"<code>sync_successful = sgqlc.types.Field(Boolean, graphql_name='syncSuccessful')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EventLivestream","title":"<code>EventLivestream</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code>, <code>Teaser</code>, <code>CoreTeaser</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class EventLivestream(sgqlc.types.Type, Teaser, CoreTeaser):\n    __schema__ = audiothek_schema\n    __field_names__ = ('core_id', 'core_type', 'row_id', 'external_ids', 'publish_date', 'broadcast_start',\n                       'duration', 'program_set', 'summary', 'description', 'audios', 'audio_list', 'core_document', 'core')\n    core_id = sgqlc.types.Field(String, graphql_name='coreId')\n    core_type = sgqlc.types.Field(\n        sgqlc.types.non_null(ItemType), graphql_name='coreType')\n    row_id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='rowId')\n    external_ids = sgqlc.types.Field(\n        sgqlc.types.list_of(String), graphql_name='externalIds')\n    publish_date = sgqlc.types.Field(\n        sgqlc.types.non_null(Datetime), graphql_name='publishDate')\n    broadcast_start = sgqlc.types.Field(\n        sgqlc.types.non_null(Datetime), graphql_name='broadcastStart')\n    duration = sgqlc.types.Field(Int, graphql_name='duration', args=sgqlc.types.ArgDict((\n        ('variant', sgqlc.types.Arg(DurationVariant,\n         graphql_name='variant', default=None)),\n    ))\n    )\n    program_set = sgqlc.types.Field('ProgramSet', graphql_name='programSet')\n    summary = sgqlc.types.Field(String, graphql_name='summary')\n    description = sgqlc.types.Field(HTML, graphql_name='description')\n    audios = sgqlc.types.Field(sgqlc.types.list_of(\n        sgqlc.types.non_null(AssetType)), graphql_name='audios')\n    audio_list = sgqlc.types.Field(sgqlc.types.list_of(\n        sgqlc.types.non_null(AudioBinary)), graphql_name='audioList')\n    core_document = sgqlc.types.Field(JSON, graphql_name='coreDocument')\n    core = sgqlc.types.Field(JSON, graphql_name='core', args=sgqlc.types.ArgDict((\n        ('filter', sgqlc.types.Arg(String, graphql_name='filter', default=None)),\n        ('key', sgqlc.types.Arg(String, graphql_name='key', default=None)),\n    ))\n    )\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EventLivestream.__field_names__","title":"<code>__field_names__ = ('core_id', 'core_type', 'row_id', 'external_ids', 'publish_date', 'broadcast_start', 'duration', 'program_set', 'summary', 'description', 'audios', 'audio_list', 'core_document', 'core')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EventLivestream.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EventLivestream.audio_list","title":"<code>audio_list = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null(AudioBinary)), graphql_name='audioList')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EventLivestream.audios","title":"<code>audios = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null(AssetType)), graphql_name='audios')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EventLivestream.broadcast_start","title":"<code>broadcast_start = sgqlc.types.Field(sgqlc.types.non_null(Datetime), graphql_name='broadcastStart')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EventLivestream.core","title":"<code>core = sgqlc.types.Field(JSON, graphql_name='core', args=sgqlc.types.ArgDict((('filter', sgqlc.types.Arg(String, graphql_name='filter', default=None)), ('key', sgqlc.types.Arg(String, graphql_name='key', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EventLivestream.core_document","title":"<code>core_document = sgqlc.types.Field(JSON, graphql_name='coreDocument')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EventLivestream.core_id","title":"<code>core_id = sgqlc.types.Field(String, graphql_name='coreId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EventLivestream.core_type","title":"<code>core_type = sgqlc.types.Field(sgqlc.types.non_null(ItemType), graphql_name='coreType')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EventLivestream.description","title":"<code>description = sgqlc.types.Field(HTML, graphql_name='description')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EventLivestream.duration","title":"<code>duration = sgqlc.types.Field(Int, graphql_name='duration', args=sgqlc.types.ArgDict((('variant', sgqlc.types.Arg(DurationVariant, graphql_name='variant', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EventLivestream.external_ids","title":"<code>external_ids = sgqlc.types.Field(sgqlc.types.list_of(String), graphql_name='externalIds')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EventLivestream.program_set","title":"<code>program_set = sgqlc.types.Field('ProgramSet', graphql_name='programSet')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EventLivestream.publish_date","title":"<code>publish_date = sgqlc.types.Field(sgqlc.types.non_null(Datetime), graphql_name='publishDate')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EventLivestream.row_id","title":"<code>row_id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='rowId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.EventLivestream.summary","title":"<code>summary = sgqlc.types.Field(String, graphql_name='summary')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.FilterCompilationSection","title":"<code>FilterCompilationSection</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code>, <code>Section</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class FilterCompilationSection(sgqlc.types.Type, Section):\n    __schema__ = audiothek_schema\n    __field_names__ = ('meta',)\n    meta = sgqlc.types.Field(JSON, graphql_name='meta')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.FilterCompilationSection.__field_names__","title":"<code>__field_names__ = ('meta')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.FilterCompilationSection.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.FilterCompilationSection.meta","title":"<code>meta = sgqlc.types.Field(JSON, graphql_name='meta')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.FloatFilterB","title":"<code>FloatFilterB</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class FloatFilterB(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('eq', 'ne', 'in_', 'gt', 'gte', 'lt', 'lte')\n    eq = sgqlc.types.Field(Float, graphql_name='eq')\n    ne = sgqlc.types.Field(Float, graphql_name='ne')\n    in_ = sgqlc.types.Field(sgqlc.types.list_of(Float), graphql_name='in')\n    gt = sgqlc.types.Field(Float, graphql_name='gt')\n    gte = sgqlc.types.Field(Float, graphql_name='gte')\n    lt = sgqlc.types.Field(Float, graphql_name='lt')\n    lte = sgqlc.types.Field(Float, graphql_name='lte')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.FloatFilterB.__field_names__","title":"<code>__field_names__ = ('eq', 'ne', 'in_', 'gt', 'gte', 'lt', 'lte')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.FloatFilterB.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.FloatFilterB.eq","title":"<code>eq = sgqlc.types.Field(Float, graphql_name='eq')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.FloatFilterB.gt","title":"<code>gt = sgqlc.types.Field(Float, graphql_name='gt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.FloatFilterB.gte","title":"<code>gte = sgqlc.types.Field(Float, graphql_name='gte')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.FloatFilterB.in_","title":"<code>in_ = sgqlc.types.Field(sgqlc.types.list_of(Float), graphql_name='in')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.FloatFilterB.lt","title":"<code>lt = sgqlc.types.Field(Float, graphql_name='lt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.FloatFilterB.lte","title":"<code>lte = sgqlc.types.Field(Float, graphql_name='lte')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.FloatFilterB.ne","title":"<code>ne = sgqlc.types.Field(Float, graphql_name='ne')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Grouping","title":"<code>Grouping</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code>, <code>Node</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class Grouping(sgqlc.types.Type, Node):\n    __schema__ = audiothek_schema\n    __field_names__ = ('row_id', 'programset_id', 'title', 'item_label', 'type', 'count', 'season_number',\n                       'last_modified', 'core_id', 'core_document', 'show_id', 'programset', 'show', 'items_by_group_id')\n    row_id = sgqlc.types.Field(\n        sgqlc.types.non_null(String), graphql_name='rowId')\n    programset_id = sgqlc.types.Field(Int, graphql_name='programsetId')\n    title = sgqlc.types.Field(\n        sgqlc.types.non_null(String), graphql_name='title')\n    item_label = sgqlc.types.Field(\n        sgqlc.types.non_null(String), graphql_name='itemLabel')\n    type = sgqlc.types.Field(Grouptype, graphql_name='type')\n    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count')\n    season_number = sgqlc.types.Field(Int, graphql_name='seasonNumber')\n    last_modified = sgqlc.types.Field(\n        sgqlc.types.non_null(Datetime), graphql_name='lastModified')\n    core_id = sgqlc.types.Field(String, graphql_name='coreId')\n    core_document = sgqlc.types.Field(JSON, graphql_name='coreDocument')\n    show_id = sgqlc.types.Field(String, graphql_name='showId')\n    programset = sgqlc.types.Field('ProgramSet', graphql_name='programset')\n    show = sgqlc.types.Field('ProgramSet', graphql_name='show')\n    items_by_group_id = sgqlc.types.Field(sgqlc.types.non_null(ItemsConnection), graphql_name='itemsByGroupId', args=sgqlc.types.ArgDict((\n        ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)),\n        ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)),\n        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),\n        ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)),\n        ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)),\n        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(\n            ItemsOrderBy)), graphql_name='orderBy', default=('PRIMARY_KEY_ASC',))),\n        ('condition', sgqlc.types.Arg(ItemCondition,\n         graphql_name='condition', default=None)),\n        ('filter', sgqlc.types.Arg(ItemFilter, graphql_name='filter', default=None)),\n    ))\n    )\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Grouping.__field_names__","title":"<code>__field_names__ = ('row_id', 'programset_id', 'title', 'item_label', 'type', 'count', 'season_number', 'last_modified', 'core_id', 'core_document', 'show_id', 'programset', 'show', 'items_by_group_id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Grouping.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Grouping.core_document","title":"<code>core_document = sgqlc.types.Field(JSON, graphql_name='coreDocument')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Grouping.core_id","title":"<code>core_id = sgqlc.types.Field(String, graphql_name='coreId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Grouping.count","title":"<code>count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Grouping.item_label","title":"<code>item_label = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='itemLabel')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Grouping.items_by_group_id","title":"<code>items_by_group_id = sgqlc.types.Field(sgqlc.types.non_null(ItemsConnection), graphql_name='itemsByGroupId', args=sgqlc.types.ArgDict((('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)), ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)), ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)), ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)), ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)), ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(ItemsOrderBy)), graphql_name='orderBy', default=('PRIMARY_KEY_ASC'))), ('condition', sgqlc.types.Arg(ItemCondition, graphql_name='condition', default=None)), ('filter', sgqlc.types.Arg(ItemFilter, graphql_name='filter', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Grouping.last_modified","title":"<code>last_modified = sgqlc.types.Field(sgqlc.types.non_null(Datetime), graphql_name='lastModified')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Grouping.programset","title":"<code>programset = sgqlc.types.Field('ProgramSet', graphql_name='programset')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Grouping.programset_id","title":"<code>programset_id = sgqlc.types.Field(Int, graphql_name='programsetId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Grouping.row_id","title":"<code>row_id = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='rowId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Grouping.season_number","title":"<code>season_number = sgqlc.types.Field(Int, graphql_name='seasonNumber')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Grouping.show","title":"<code>show = sgqlc.types.Field('ProgramSet', graphql_name='show')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Grouping.show_id","title":"<code>show_id = sgqlc.types.Field(String, graphql_name='showId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Grouping.title","title":"<code>title = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='title')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Grouping.type","title":"<code>type = sgqlc.types.Field(Grouptype, graphql_name='type')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.GroupingCondition","title":"<code>GroupingCondition</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class GroupingCondition(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('id', 'programset_id', 'title', 'item_label', 'type', 'count',\n                       'season_number', 'last_modified', 'core_id', 'core_document', 'show_id')\n    id = sgqlc.types.Field(String, graphql_name='id')\n    programset_id = sgqlc.types.Field(Int, graphql_name='programsetId')\n    title = sgqlc.types.Field(String, graphql_name='title')\n    item_label = sgqlc.types.Field(String, graphql_name='itemLabel')\n    type = sgqlc.types.Field(Grouptype, graphql_name='type')\n    count = sgqlc.types.Field(Int, graphql_name='count')\n    season_number = sgqlc.types.Field(Int, graphql_name='seasonNumber')\n    last_modified = sgqlc.types.Field(Datetime, graphql_name='lastModified')\n    core_id = sgqlc.types.Field(String, graphql_name='coreId')\n    core_document = sgqlc.types.Field(JSON, graphql_name='coreDocument')\n    show_id = sgqlc.types.Field(String, graphql_name='showId')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.GroupingCondition.__field_names__","title":"<code>__field_names__ = ('id', 'programset_id', 'title', 'item_label', 'type', 'count', 'season_number', 'last_modified', 'core_id', 'core_document', 'show_id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.GroupingCondition.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.GroupingCondition.core_document","title":"<code>core_document = sgqlc.types.Field(JSON, graphql_name='coreDocument')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.GroupingCondition.core_id","title":"<code>core_id = sgqlc.types.Field(String, graphql_name='coreId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.GroupingCondition.count","title":"<code>count = sgqlc.types.Field(Int, graphql_name='count')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.GroupingCondition.id","title":"<code>id = sgqlc.types.Field(String, graphql_name='id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.GroupingCondition.item_label","title":"<code>item_label = sgqlc.types.Field(String, graphql_name='itemLabel')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.GroupingCondition.last_modified","title":"<code>last_modified = sgqlc.types.Field(Datetime, graphql_name='lastModified')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.GroupingCondition.programset_id","title":"<code>programset_id = sgqlc.types.Field(Int, graphql_name='programsetId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.GroupingCondition.season_number","title":"<code>season_number = sgqlc.types.Field(Int, graphql_name='seasonNumber')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.GroupingCondition.show_id","title":"<code>show_id = sgqlc.types.Field(String, graphql_name='showId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.GroupingCondition.title","title":"<code>title = sgqlc.types.Field(String, graphql_name='title')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.GroupingCondition.type","title":"<code>type = sgqlc.types.Field(Grouptype, graphql_name='type')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.GroupingFilter","title":"<code>GroupingFilter</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class GroupingFilter(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('id', 'programset_id', 'title', 'item_label', 'type', 'count', 'season_number',\n                       'last_modified', 'core_id', 'core_document', 'show_id', 'and_', 'or_', 'not_')\n    id = sgqlc.types.Field('StringFilter', graphql_name='id')\n    programset_id = sgqlc.types.Field('IntFilter', graphql_name='programsetId')\n    title = sgqlc.types.Field('StringFilter', graphql_name='title')\n    item_label = sgqlc.types.Field('StringFilter', graphql_name='itemLabel')\n    type = sgqlc.types.Field('GrouptypeFilter', graphql_name='type')\n    count = sgqlc.types.Field('IntFilter', graphql_name='count')\n    season_number = sgqlc.types.Field('IntFilter', graphql_name='seasonNumber')\n    last_modified = sgqlc.types.Field(\n        DatetimeFilter, graphql_name='lastModified')\n    core_id = sgqlc.types.Field('StringFilter', graphql_name='coreId')\n    core_document = sgqlc.types.Field(\n        'JSONFilter', graphql_name='coreDocument')\n    show_id = sgqlc.types.Field('StringFilter', graphql_name='showId')\n    and_ = sgqlc.types.Field(sgqlc.types.list_of(\n        sgqlc.types.non_null('GroupingFilter')), graphql_name='and')\n    or_ = sgqlc.types.Field(sgqlc.types.list_of(\n        sgqlc.types.non_null('GroupingFilter')), graphql_name='or')\n    not_ = sgqlc.types.Field('GroupingFilter', graphql_name='not')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.GroupingFilter.__field_names__","title":"<code>__field_names__ = ('id', 'programset_id', 'title', 'item_label', 'type', 'count', 'season_number', 'last_modified', 'core_id', 'core_document', 'show_id', 'and_', 'or_', 'not_')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.GroupingFilter.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.GroupingFilter.and_","title":"<code>and_ = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('GroupingFilter')), graphql_name='and')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.GroupingFilter.core_document","title":"<code>core_document = sgqlc.types.Field('JSONFilter', graphql_name='coreDocument')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.GroupingFilter.core_id","title":"<code>core_id = sgqlc.types.Field('StringFilter', graphql_name='coreId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.GroupingFilter.count","title":"<code>count = sgqlc.types.Field('IntFilter', graphql_name='count')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.GroupingFilter.id","title":"<code>id = sgqlc.types.Field('StringFilter', graphql_name='id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.GroupingFilter.item_label","title":"<code>item_label = sgqlc.types.Field('StringFilter', graphql_name='itemLabel')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.GroupingFilter.last_modified","title":"<code>last_modified = sgqlc.types.Field(DatetimeFilter, graphql_name='lastModified')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.GroupingFilter.not_","title":"<code>not_ = sgqlc.types.Field('GroupingFilter', graphql_name='not')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.GroupingFilter.or_","title":"<code>or_ = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('GroupingFilter')), graphql_name='or')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.GroupingFilter.programset_id","title":"<code>programset_id = sgqlc.types.Field('IntFilter', graphql_name='programsetId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.GroupingFilter.season_number","title":"<code>season_number = sgqlc.types.Field('IntFilter', graphql_name='seasonNumber')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.GroupingFilter.show_id","title":"<code>show_id = sgqlc.types.Field('StringFilter', graphql_name='showId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.GroupingFilter.title","title":"<code>title = sgqlc.types.Field('StringFilter', graphql_name='title')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.GroupingFilter.type","title":"<code>type = sgqlc.types.Field('GrouptypeFilter', graphql_name='type')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.GroupingsConnection","title":"<code>GroupingsConnection</code>","text":"<p>         Bases: <code>sgqlc.types.relay.Connection</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class GroupingsConnection(sgqlc.types.relay.Connection):\n    __schema__ = audiothek_schema\n    __field_names__ = ('nodes', 'edges', 'page_info', 'total_count')\n    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(\n        sgqlc.types.non_null('Grouping'))), graphql_name='nodes')\n    edges = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(\n        sgqlc.types.non_null('GroupingsEdge'))), graphql_name='edges')\n    page_info = sgqlc.types.Field(sgqlc.types.non_null(\n        'PageInfo'), graphql_name='pageInfo')\n    total_count = sgqlc.types.Field(\n        sgqlc.types.non_null(Int), graphql_name='totalCount')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.GroupingsConnection.__field_names__","title":"<code>__field_names__ = ('nodes', 'edges', 'page_info', 'total_count')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.GroupingsConnection.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.GroupingsConnection.edges","title":"<code>edges = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('GroupingsEdge'))), graphql_name='edges')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.GroupingsConnection.nodes","title":"<code>nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('Grouping'))), graphql_name='nodes')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.GroupingsConnection.page_info","title":"<code>page_info = sgqlc.types.Field(sgqlc.types.non_null('PageInfo'), graphql_name='pageInfo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.GroupingsConnection.total_count","title":"<code>total_count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='totalCount')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.GroupingsEdge","title":"<code>GroupingsEdge</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class GroupingsEdge(sgqlc.types.Type):\n    __schema__ = audiothek_schema\n    __field_names__ = ('cursor', 'node')\n    cursor = sgqlc.types.Field(Cursor, graphql_name='cursor')\n    node = sgqlc.types.Field(sgqlc.types.non_null(\n        'Grouping'), graphql_name='node')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.GroupingsEdge.__field_names__","title":"<code>__field_names__ = ('cursor', 'node')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.GroupingsEdge.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.GroupingsEdge.cursor","title":"<code>cursor = sgqlc.types.Field(Cursor, graphql_name='cursor')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.GroupingsEdge.node","title":"<code>node = sgqlc.types.Field(sgqlc.types.non_null('Grouping'), graphql_name='node')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.GroupingsOrderBy","title":"<code>GroupingsOrderBy</code>","text":"<p>         Bases: <code>sgqlc.types.Enum</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class GroupingsOrderBy(sgqlc.types.Enum):\n    __schema__ = audiothek_schema\n    __choices__ = ('CORE_DOCUMENT_ASC', 'CORE_DOCUMENT_DESC', 'CORE_ID_ASC', 'CORE_ID_DESC', 'COUNT_ASC', 'COUNT_DESC', 'ID_ASC', 'ID_DESC', 'ITEM_LABEL_ASC', 'ITEM_LABEL_DESC', 'LAST_MODIFIED_ASC', 'LAST_MODIFIED_DESC',\n                   'NATURAL', 'PRIMARY_KEY_ASC', 'PRIMARY_KEY_DESC', 'PROGRAMSET_ID_ASC', 'PROGRAMSET_ID_DESC', 'SEASON_NUMBER_ASC', 'SEASON_NUMBER_DESC', 'SHOW_ID_ASC', 'SHOW_ID_DESC', 'TITLE_ASC', 'TITLE_DESC', 'TYPE_ASC', 'TYPE_DESC')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.GroupingsOrderBy.__choices__","title":"<code>__choices__ = ('CORE_DOCUMENT_ASC', 'CORE_DOCUMENT_DESC', 'CORE_ID_ASC', 'CORE_ID_DESC', 'COUNT_ASC', 'COUNT_DESC', 'ID_ASC', 'ID_DESC', 'ITEM_LABEL_ASC', 'ITEM_LABEL_DESC', 'LAST_MODIFIED_ASC', 'LAST_MODIFIED_DESC', 'NATURAL', 'PRIMARY_KEY_ASC', 'PRIMARY_KEY_DESC', 'PROGRAMSET_ID_ASC', 'PROGRAMSET_ID_DESC', 'SEASON_NUMBER_ASC', 'SEASON_NUMBER_DESC', 'SHOW_ID_ASC', 'SHOW_ID_DESC', 'TITLE_ASC', 'TITLE_DESC', 'TYPE_ASC', 'TYPE_DESC')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.GroupingsOrderBy.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Grouptype","title":"<code>Grouptype</code>","text":"<p>         Bases: <code>sgqlc.types.Enum</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class Grouptype(sgqlc.types.Enum):\n    __schema__ = audiothek_schema\n    __choices__ = ('MULTIPART', 'SEASON', 'SERIES')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Grouptype.__choices__","title":"<code>__choices__ = ('MULTIPART', 'SEASON', 'SERIES')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Grouptype.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.GrouptypeFilter","title":"<code>GrouptypeFilter</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class GrouptypeFilter(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('is_null', 'equal_to', 'not_equal_to', 'distinct_from', 'not_distinct_from',\n                       'in_', 'not_in', 'less_than', 'less_than_or_equal_to', 'greater_than', 'greater_than_or_equal_to')\n    is_null = sgqlc.types.Field(Boolean, graphql_name='isNull')\n    equal_to = sgqlc.types.Field(Grouptype, graphql_name='equalTo')\n    not_equal_to = sgqlc.types.Field(Grouptype, graphql_name='notEqualTo')\n    distinct_from = sgqlc.types.Field(Grouptype, graphql_name='distinctFrom')\n    not_distinct_from = sgqlc.types.Field(\n        Grouptype, graphql_name='notDistinctFrom')\n    in_ = sgqlc.types.Field(sgqlc.types.list_of(\n        sgqlc.types.non_null(Grouptype)), graphql_name='in')\n    not_in = sgqlc.types.Field(sgqlc.types.list_of(\n        sgqlc.types.non_null(Grouptype)), graphql_name='notIn')\n    less_than = sgqlc.types.Field(Grouptype, graphql_name='lessThan')\n    less_than_or_equal_to = sgqlc.types.Field(\n        Grouptype, graphql_name='lessThanOrEqualTo')\n    greater_than = sgqlc.types.Field(Grouptype, graphql_name='greaterThan')\n    greater_than_or_equal_to = sgqlc.types.Field(\n        Grouptype, graphql_name='greaterThanOrEqualTo')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.GrouptypeFilter.__field_names__","title":"<code>__field_names__ = ('is_null', 'equal_to', 'not_equal_to', 'distinct_from', 'not_distinct_from', 'in_', 'not_in', 'less_than', 'less_than_or_equal_to', 'greater_than', 'greater_than_or_equal_to')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.GrouptypeFilter.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.GrouptypeFilter.distinct_from","title":"<code>distinct_from = sgqlc.types.Field(Grouptype, graphql_name='distinctFrom')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.GrouptypeFilter.equal_to","title":"<code>equal_to = sgqlc.types.Field(Grouptype, graphql_name='equalTo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.GrouptypeFilter.greater_than","title":"<code>greater_than = sgqlc.types.Field(Grouptype, graphql_name='greaterThan')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.GrouptypeFilter.greater_than_or_equal_to","title":"<code>greater_than_or_equal_to = sgqlc.types.Field(Grouptype, graphql_name='greaterThanOrEqualTo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.GrouptypeFilter.in_","title":"<code>in_ = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null(Grouptype)), graphql_name='in')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.GrouptypeFilter.is_null","title":"<code>is_null = sgqlc.types.Field(Boolean, graphql_name='isNull')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.GrouptypeFilter.less_than","title":"<code>less_than = sgqlc.types.Field(Grouptype, graphql_name='lessThan')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.GrouptypeFilter.less_than_or_equal_to","title":"<code>less_than_or_equal_to = sgqlc.types.Field(Grouptype, graphql_name='lessThanOrEqualTo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.GrouptypeFilter.not_distinct_from","title":"<code>not_distinct_from = sgqlc.types.Field(Grouptype, graphql_name='notDistinctFrom')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.GrouptypeFilter.not_equal_to","title":"<code>not_equal_to = sgqlc.types.Field(Grouptype, graphql_name='notEqualTo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.GrouptypeFilter.not_in","title":"<code>not_in = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null(Grouptype)), graphql_name='notIn')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HTML","title":"<code>HTML</code>","text":"<p>         Bases: <code>sgqlc.types.Scalar</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class HTML(sgqlc.types.Scalar):\n    __schema__ = audiothek_schema\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HTML.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HistoryEntry","title":"<code>HistoryEntry</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code>, <code>HistoryEntryInterface</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class HistoryEntry(sgqlc.types.Type, HistoryEntryInterface):\n    __schema__ = audiothek_schema\n    __field_names__ = ()\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HistoryEntry.__field_names__","title":"<code>__field_names__ = ()</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HistoryEntry.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HistoryEntryConnection","title":"<code>HistoryEntryConnection</code>","text":"<p>         Bases: <code>sgqlc.types.relay.Connection</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class HistoryEntryConnection(sgqlc.types.relay.Connection):\n    __schema__ = audiothek_schema\n    __field_names__ = ('count', 'edges', 'nodes', 'page_info')\n    count = sgqlc.types.Field(Int, graphql_name='count')\n    edges = sgqlc.types.Field(sgqlc.types.list_of(\n        'HistoryEntryEdge'), graphql_name='edges')\n    nodes = sgqlc.types.Field(sgqlc.types.list_of(\n        'HistoryEntryInterface'), graphql_name='nodes')\n    page_info = sgqlc.types.Field(sgqlc.types.non_null(\n        'PageInfo'), graphql_name='pageInfo')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HistoryEntryConnection.__field_names__","title":"<code>__field_names__ = ('count', 'edges', 'nodes', 'page_info')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HistoryEntryConnection.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HistoryEntryConnection.count","title":"<code>count = sgqlc.types.Field(Int, graphql_name='count')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HistoryEntryConnection.edges","title":"<code>edges = sgqlc.types.Field(sgqlc.types.list_of('HistoryEntryEdge'), graphql_name='edges')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HistoryEntryConnection.nodes","title":"<code>nodes = sgqlc.types.Field(sgqlc.types.list_of('HistoryEntryInterface'), graphql_name='nodes')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HistoryEntryConnection.page_info","title":"<code>page_info = sgqlc.types.Field(sgqlc.types.non_null('PageInfo'), graphql_name='pageInfo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HistoryEntryConnectionFilterB","title":"<code>HistoryEntryConnectionFilterB</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class HistoryEntryConnectionFilterB(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('empty', 'contains')\n    empty = sgqlc.types.Field(BooleanFilterB, graphql_name='empty')\n    contains = sgqlc.types.Field(ID, graphql_name='contains')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HistoryEntryConnectionFilterB.__field_names__","title":"<code>__field_names__ = ('empty', 'contains')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HistoryEntryConnectionFilterB.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HistoryEntryConnectionFilterB.contains","title":"<code>contains = sgqlc.types.Field(ID, graphql_name='contains')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HistoryEntryConnectionFilterB.empty","title":"<code>empty = sgqlc.types.Field(BooleanFilterB, graphql_name='empty')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HistoryEntryCreateInput","title":"<code>HistoryEntryCreateInput</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class HistoryEntryCreateInput(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('client_mutation_id', 'type', 'item',\n                       'last_listened_at', 'progress')\n    client_mutation_id = sgqlc.types.Field(\n        String, graphql_name='clientMutationId')\n    type = sgqlc.types.Field(String, graphql_name='type')\n    item = sgqlc.types.Field(sgqlc.types.non_null(\n        'ItemCreateInput'), graphql_name='item')\n    last_listened_at = sgqlc.types.Field(\n        DateTime, graphql_name='lastListenedAt')\n    progress = sgqlc.types.Field(Float, graphql_name='progress')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HistoryEntryCreateInput.__field_names__","title":"<code>__field_names__ = ('client_mutation_id', 'type', 'item', 'last_listened_at', 'progress')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HistoryEntryCreateInput.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HistoryEntryCreateInput.client_mutation_id","title":"<code>client_mutation_id = sgqlc.types.Field(String, graphql_name='clientMutationId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HistoryEntryCreateInput.item","title":"<code>item = sgqlc.types.Field(sgqlc.types.non_null('ItemCreateInput'), graphql_name='item')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HistoryEntryCreateInput.last_listened_at","title":"<code>last_listened_at = sgqlc.types.Field(DateTime, graphql_name='lastListenedAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HistoryEntryCreateInput.progress","title":"<code>progress = sgqlc.types.Field(Float, graphql_name='progress')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HistoryEntryCreateInput.type","title":"<code>type = sgqlc.types.Field(String, graphql_name='type')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HistoryEntryEdge","title":"<code>HistoryEntryEdge</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class HistoryEntryEdge(sgqlc.types.Type):\n    __schema__ = audiothek_schema\n    __field_names__ = ('cursor', 'node')\n    cursor = sgqlc.types.Field(\n        sgqlc.types.non_null(String), graphql_name='cursor')\n    node = sgqlc.types.Field('HistoryEntryInterface', graphql_name='node')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HistoryEntryEdge.__field_names__","title":"<code>__field_names__ = ('cursor', 'node')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HistoryEntryEdge.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HistoryEntryEdge.cursor","title":"<code>cursor = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='cursor')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HistoryEntryEdge.node","title":"<code>node = sgqlc.types.Field('HistoryEntryInterface', graphql_name='node')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HistoryEntryFilterB","title":"<code>HistoryEntryFilterB</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class HistoryEntryFilterB(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('created_at', 'last_listened_at',\n                       'modified_at', 'progress', 'user')\n    created_at = sgqlc.types.Field(DateFilterB, graphql_name='createdAt')\n    last_listened_at = sgqlc.types.Field(\n        DateFilterB, graphql_name='lastListenedAt')\n    modified_at = sgqlc.types.Field(DateFilterB, graphql_name='modifiedAt')\n    progress = sgqlc.types.Field(FloatFilterB, graphql_name='progress')\n    user = sgqlc.types.Field(EndUserRelationFilterB, graphql_name='user')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HistoryEntryFilterB.__field_names__","title":"<code>__field_names__ = ('created_at', 'last_listened_at', 'modified_at', 'progress', 'user')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HistoryEntryFilterB.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HistoryEntryFilterB.created_at","title":"<code>created_at = sgqlc.types.Field(DateFilterB, graphql_name='createdAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HistoryEntryFilterB.last_listened_at","title":"<code>last_listened_at = sgqlc.types.Field(DateFilterB, graphql_name='lastListenedAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HistoryEntryFilterB.modified_at","title":"<code>modified_at = sgqlc.types.Field(DateFilterB, graphql_name='modifiedAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HistoryEntryFilterB.progress","title":"<code>progress = sgqlc.types.Field(FloatFilterB, graphql_name='progress')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HistoryEntryFilterB.user","title":"<code>user = sgqlc.types.Field(EndUserRelationFilterB, graphql_name='user')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HistoryEntryInterface","title":"<code>HistoryEntryInterface</code>","text":"<p>         Bases: <code>sgqlc.types.Interface</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class HistoryEntryInterface(sgqlc.types.Interface):\n    __schema__ = audiothek_schema\n    __field_names__ = ('id', 'base_id_prefix', 'created_at', 'item',\n                       'last_listened_at', 'modified_at', 'progress', 'user')\n    id = sgqlc.types.Field(sgqlc.types.non_null(ID), graphql_name='id')\n    base_id_prefix = sgqlc.types.Field(\n        sgqlc.types.non_null(String), graphql_name='baseIdPrefix')\n    created_at = sgqlc.types.Field(DateTime, graphql_name='createdAt')\n    item = sgqlc.types.Field('Item', graphql_name='item')\n    last_listened_at = sgqlc.types.Field(\n        DateTime, graphql_name='lastListenedAt')\n    modified_at = sgqlc.types.Field(DateTime, graphql_name='modifiedAt')\n    progress = sgqlc.types.Field(Float, graphql_name='progress')\n    user = sgqlc.types.Field(EndUserInterface, graphql_name='user')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HistoryEntryInterface.__field_names__","title":"<code>__field_names__ = ('id', 'base_id_prefix', 'created_at', 'item', 'last_listened_at', 'modified_at', 'progress', 'user')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HistoryEntryInterface.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HistoryEntryInterface.base_id_prefix","title":"<code>base_id_prefix = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='baseIdPrefix')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HistoryEntryInterface.created_at","title":"<code>created_at = sgqlc.types.Field(DateTime, graphql_name='createdAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HistoryEntryInterface.id","title":"<code>id = sgqlc.types.Field(sgqlc.types.non_null(ID), graphql_name='id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HistoryEntryInterface.item","title":"<code>item = sgqlc.types.Field('Item', graphql_name='item')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HistoryEntryInterface.last_listened_at","title":"<code>last_listened_at = sgqlc.types.Field(DateTime, graphql_name='lastListenedAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HistoryEntryInterface.modified_at","title":"<code>modified_at = sgqlc.types.Field(DateTime, graphql_name='modifiedAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HistoryEntryInterface.progress","title":"<code>progress = sgqlc.types.Field(Float, graphql_name='progress')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HistoryEntryInterface.user","title":"<code>user = sgqlc.types.Field(EndUserInterface, graphql_name='user')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HistoryEntryPayload","title":"<code>HistoryEntryPayload</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class HistoryEntryPayload(sgqlc.types.Type):\n    __schema__ = audiothek_schema\n    __field_names__ = ('client_mutation_id', 'changed_history_entry')\n    client_mutation_id = sgqlc.types.Field(\n        String, graphql_name='clientMutationId')\n    changed_history_entry = sgqlc.types.Field(\n        'HistoryEntry', graphql_name='changedHistoryEntry')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HistoryEntryPayload.__field_names__","title":"<code>__field_names__ = ('client_mutation_id', 'changed_history_entry')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HistoryEntryPayload.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HistoryEntryPayload.changed_history_entry","title":"<code>changed_history_entry = sgqlc.types.Field('HistoryEntry', graphql_name='changedHistoryEntry')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HistoryEntryPayload.client_mutation_id","title":"<code>client_mutation_id = sgqlc.types.Field(String, graphql_name='clientMutationId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HistoryEntryRelationFilterB","title":"<code>HistoryEntryRelationFilterB</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class HistoryEntryRelationFilterB(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('id', 'exists')\n    id = sgqlc.types.Field('IDFilterB', graphql_name='id')\n    exists = sgqlc.types.Field(BooleanFilterB, graphql_name='exists')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HistoryEntryRelationFilterB.__field_names__","title":"<code>__field_names__ = ('id', 'exists')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HistoryEntryRelationFilterB.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HistoryEntryRelationFilterB.exists","title":"<code>exists = sgqlc.types.Field(BooleanFilterB, graphql_name='exists')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HistoryEntryRelationFilterB.id","title":"<code>id = sgqlc.types.Field('IDFilterB', graphql_name='id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HistoryEntryRemoveAllListInput","title":"<code>HistoryEntryRemoveAllListInput</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class HistoryEntryRemoveAllListInput(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('client_mutation_id', 'history_entry')\n    client_mutation_id = sgqlc.types.Field(\n        String, graphql_name='clientMutationId')\n    history_entry = sgqlc.types.Field(\n        sgqlc.types.non_null(ID), graphql_name='historyEntry')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HistoryEntryRemoveAllListInput.__field_names__","title":"<code>__field_names__ = ('client_mutation_id', 'history_entry')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HistoryEntryRemoveAllListInput.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HistoryEntryRemoveAllListInput.client_mutation_id","title":"<code>client_mutation_id = sgqlc.types.Field(String, graphql_name='clientMutationId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HistoryEntryRemoveAllListInput.history_entry","title":"<code>history_entry = sgqlc.types.Field(sgqlc.types.non_null(ID), graphql_name='historyEntry')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HistoryEntrySortOrder","title":"<code>HistoryEntrySortOrder</code>","text":"<p>         Bases: <code>sgqlc.types.Enum</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class HistoryEntrySortOrder(sgqlc.types.Enum):\n    __schema__ = audiothek_schema\n    __choices__ = ('CREATEDAT_ASC', 'CREATEDAT_DESC', 'ITEM_ID_ASC', 'ITEM_ID_DESC', 'LASTLISTENEDAT_ASC',\n                   'LASTLISTENEDAT_DESC', 'MODIFIEDAT_ASC', 'MODIFIEDAT_DESC', 'PROGRESS_ASC', 'PROGRESS_DESC')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HistoryEntrySortOrder.__choices__","title":"<code>__choices__ = ('CREATEDAT_ASC', 'CREATEDAT_DESC', 'ITEM_ID_ASC', 'ITEM_ID_DESC', 'LASTLISTENEDAT_ASC', 'LASTLISTENEDAT_DESC', 'MODIFIEDAT_ASC', 'MODIFIEDAT_DESC', 'PROGRESS_ASC', 'PROGRESS_DESC')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HistoryEntrySortOrder.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HistoryEntryUpdateInput","title":"<code>HistoryEntryUpdateInput</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class HistoryEntryUpdateInput(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('client_mutation_id', 'id', 'item',\n                       'last_listened_at', 'progress')\n    client_mutation_id = sgqlc.types.Field(\n        String, graphql_name='clientMutationId')\n    id = sgqlc.types.Field(sgqlc.types.non_null(ID), graphql_name='id')\n    item = sgqlc.types.Field('ItemCreateInput', graphql_name='item')\n    last_listened_at = sgqlc.types.Field(\n        DateTime, graphql_name='lastListenedAt')\n    progress = sgqlc.types.Field(Float, graphql_name='progress')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HistoryEntryUpdateInput.__field_names__","title":"<code>__field_names__ = ('client_mutation_id', 'id', 'item', 'last_listened_at', 'progress')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HistoryEntryUpdateInput.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HistoryEntryUpdateInput.client_mutation_id","title":"<code>client_mutation_id = sgqlc.types.Field(String, graphql_name='clientMutationId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HistoryEntryUpdateInput.id","title":"<code>id = sgqlc.types.Field(sgqlc.types.non_null(ID), graphql_name='id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HistoryEntryUpdateInput.item","title":"<code>item = sgqlc.types.Field('ItemCreateInput', graphql_name='item')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HistoryEntryUpdateInput.last_listened_at","title":"<code>last_listened_at = sgqlc.types.Field(DateTime, graphql_name='lastListenedAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.HistoryEntryUpdateInput.progress","title":"<code>progress = sgqlc.types.Field(Float, graphql_name='progress')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.IDFilterB","title":"<code>IDFilterB</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class IDFilterB(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('eq', 'ne', 'in_')\n    eq = sgqlc.types.Field(ID, graphql_name='eq')\n    ne = sgqlc.types.Field(ID, graphql_name='ne')\n    in_ = sgqlc.types.Field(sgqlc.types.list_of(ID), graphql_name='in')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.IDFilterB.__field_names__","title":"<code>__field_names__ = ('eq', 'ne', 'in_')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.IDFilterB.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.IDFilterB.eq","title":"<code>eq = sgqlc.types.Field(ID, graphql_name='eq')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.IDFilterB.in_","title":"<code>in_ = sgqlc.types.Field(sgqlc.types.list_of(ID), graphql_name='in')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.IDFilterB.ne","title":"<code>ne = sgqlc.types.Field(ID, graphql_name='ne')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Image","title":"<code>Image</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code>, <code>Node</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class Image(sgqlc.types.Type, Node):\n    __schema__ = audiothek_schema\n    __field_names__ = ('row_id', 'core_document', 'title',\n                       'producer_name', 'image_binary_id')\n    row_id = sgqlc.types.Field(\n        sgqlc.types.non_null(String), graphql_name='rowId')\n    core_document = sgqlc.types.Field(JSON, graphql_name='coreDocument')\n    title = sgqlc.types.Field(String, graphql_name='title')\n    producer_name = sgqlc.types.Field(String, graphql_name='producerName')\n    image_binary_id = sgqlc.types.Field(String, graphql_name='imageBinaryId')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Image.__field_names__","title":"<code>__field_names__ = ('row_id', 'core_document', 'title', 'producer_name', 'image_binary_id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Image.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Image.core_document","title":"<code>core_document = sgqlc.types.Field(JSON, graphql_name='coreDocument')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Image.image_binary_id","title":"<code>image_binary_id = sgqlc.types.Field(String, graphql_name='imageBinaryId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Image.producer_name","title":"<code>producer_name = sgqlc.types.Field(String, graphql_name='producerName')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Image.row_id","title":"<code>row_id = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='rowId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Image.title","title":"<code>title = sgqlc.types.Field(String, graphql_name='title')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImageBinary","title":"<code>ImageBinary</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code>, <code>Node</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class ImageBinary(sgqlc.types.Type, Node):\n    __schema__ = audiothek_schema\n    __field_names__ = ('row_id', 'core_document', 'file_location',\n                       'media_type', 'width', 'height', 'aspect_ratio')\n    row_id = sgqlc.types.Field(\n        sgqlc.types.non_null(String), graphql_name='rowId')\n    core_document = sgqlc.types.Field(JSON, graphql_name='coreDocument')\n    file_location = sgqlc.types.Field(String, graphql_name='fileLocation')\n    media_type = sgqlc.types.Field(String, graphql_name='mediaType')\n    width = sgqlc.types.Field(Int, graphql_name='width')\n    height = sgqlc.types.Field(Int, graphql_name='height')\n    aspect_ratio = sgqlc.types.Field(String, graphql_name='aspectRatio')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImageBinary.__field_names__","title":"<code>__field_names__ = ('row_id', 'core_document', 'file_location', 'media_type', 'width', 'height', 'aspect_ratio')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImageBinary.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImageBinary.aspect_ratio","title":"<code>aspect_ratio = sgqlc.types.Field(String, graphql_name='aspectRatio')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImageBinary.core_document","title":"<code>core_document = sgqlc.types.Field(JSON, graphql_name='coreDocument')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImageBinary.file_location","title":"<code>file_location = sgqlc.types.Field(String, graphql_name='fileLocation')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImageBinary.height","title":"<code>height = sgqlc.types.Field(Int, graphql_name='height')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImageBinary.media_type","title":"<code>media_type = sgqlc.types.Field(String, graphql_name='mediaType')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImageBinary.row_id","title":"<code>row_id = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='rowId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImageBinary.width","title":"<code>width = sgqlc.types.Field(Int, graphql_name='width')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImageCollection","title":"<code>ImageCollection</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code>, <code>Node</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class ImageCollection(sgqlc.types.Type, Node):\n    __schema__ = audiothek_schema\n    __field_names__ = ('row_id', 'core_document', 'image_ids')\n    row_id = sgqlc.types.Field(\n        sgqlc.types.non_null(String), graphql_name='rowId')\n    core_document = sgqlc.types.Field(JSON, graphql_name='coreDocument')\n    image_ids = sgqlc.types.Field(\n        sgqlc.types.list_of(String), graphql_name='imageIds')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImageCollection.__field_names__","title":"<code>__field_names__ = ('row_id', 'core_document', 'image_ids')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImageCollection.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImageCollection.core_document","title":"<code>core_document = sgqlc.types.Field(JSON, graphql_name='coreDocument')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImageCollection.image_ids","title":"<code>image_ids = sgqlc.types.Field(sgqlc.types.list_of(String), graphql_name='imageIds')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImageCollection.row_id","title":"<code>row_id = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='rowId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImageType","title":"<code>ImageType</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class ImageType(sgqlc.types.Type):\n    __schema__ = audiothek_schema\n    __field_names__ = ('url', 'url1_x1', 'description', 'attribution')\n    url = sgqlc.types.Field(String, graphql_name='url')\n    url1_x1 = sgqlc.types.Field(String, graphql_name='url1X1')\n    description = sgqlc.types.Field(String, graphql_name='description')\n    attribution = sgqlc.types.Field(String, graphql_name='attribution')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImageType.__field_names__","title":"<code>__field_names__ = ('url', 'url1_x1', 'description', 'attribution')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImageType.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImageType.attribution","title":"<code>attribution = sgqlc.types.Field(String, graphql_name='attribution')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImageType.description","title":"<code>description = sgqlc.types.Field(String, graphql_name='description')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImageType.url","title":"<code>url = sgqlc.types.Field(String, graphql_name='url')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImageType.url1_x1","title":"<code>url1_x1 = sgqlc.types.Field(String, graphql_name='url1X1')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImageTypeFilter","title":"<code>ImageTypeFilter</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class ImageTypeFilter(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('url', 'url1_x1', 'description',\n                       'attribution', 'and_', 'or_', 'not_')\n    url = sgqlc.types.Field('StringFilter', graphql_name='url')\n    url1_x1 = sgqlc.types.Field('StringFilter', graphql_name='url1X1')\n    description = sgqlc.types.Field('StringFilter', graphql_name='description')\n    attribution = sgqlc.types.Field('StringFilter', graphql_name='attribution')\n    and_ = sgqlc.types.Field(sgqlc.types.list_of(\n        sgqlc.types.non_null('ImageTypeFilter')), graphql_name='and')\n    or_ = sgqlc.types.Field(sgqlc.types.list_of(\n        sgqlc.types.non_null('ImageTypeFilter')), graphql_name='or')\n    not_ = sgqlc.types.Field('ImageTypeFilter', graphql_name='not')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImageTypeFilter.__field_names__","title":"<code>__field_names__ = ('url', 'url1_x1', 'description', 'attribution', 'and_', 'or_', 'not_')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImageTypeFilter.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImageTypeFilter.and_","title":"<code>and_ = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('ImageTypeFilter')), graphql_name='and')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImageTypeFilter.attribution","title":"<code>attribution = sgqlc.types.Field('StringFilter', graphql_name='attribution')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImageTypeFilter.description","title":"<code>description = sgqlc.types.Field('StringFilter', graphql_name='description')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImageTypeFilter.not_","title":"<code>not_ = sgqlc.types.Field('ImageTypeFilter', graphql_name='not')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImageTypeFilter.or_","title":"<code>or_ = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('ImageTypeFilter')), graphql_name='or')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImageTypeFilter.url","title":"<code>url = sgqlc.types.Field('StringFilter', graphql_name='url')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImageTypeFilter.url1_x1","title":"<code>url1_x1 = sgqlc.types.Field('StringFilter', graphql_name='url1X1')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImageTypeInput","title":"<code>ImageTypeInput</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class ImageTypeInput(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('url', 'url1_x1', 'description', 'attribution')\n    url = sgqlc.types.Field(String, graphql_name='url')\n    url1_x1 = sgqlc.types.Field(String, graphql_name='url1X1')\n    description = sgqlc.types.Field(String, graphql_name='description')\n    attribution = sgqlc.types.Field(String, graphql_name='attribution')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImageTypeInput.__field_names__","title":"<code>__field_names__ = ('url', 'url1_x1', 'description', 'attribution')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImageTypeInput.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImageTypeInput.attribution","title":"<code>attribution = sgqlc.types.Field(String, graphql_name='attribution')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImageTypeInput.description","title":"<code>description = sgqlc.types.Field(String, graphql_name='description')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImageTypeInput.url","title":"<code>url = sgqlc.types.Field(String, graphql_name='url')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImageTypeInput.url1_x1","title":"<code>url1_x1 = sgqlc.types.Field(String, graphql_name='url1X1')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImagesCollectionsBinariesView","title":"<code>ImagesCollectionsBinariesView</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class ImagesCollectionsBinariesView(sgqlc.types.Type):\n    __schema__ = audiothek_schema\n    __field_names__ = ('image_collection_id', 'image_id', 'title', 'producer_name',\n                       'image_binary_id', 'aspect_ratio', 'height', 'width', 'media_type', 'file_location', 'url')\n    image_collection_id = sgqlc.types.Field(\n        String, graphql_name='imageCollectionId')\n    image_id = sgqlc.types.Field(String, graphql_name='imageId')\n    title = sgqlc.types.Field(String, graphql_name='title')\n    producer_name = sgqlc.types.Field(String, graphql_name='producerName')\n    image_binary_id = sgqlc.types.Field(String, graphql_name='imageBinaryId')\n    aspect_ratio = sgqlc.types.Field(String, graphql_name='aspectRatio')\n    height = sgqlc.types.Field(Int, graphql_name='height')\n    width = sgqlc.types.Field(Int, graphql_name='width')\n    media_type = sgqlc.types.Field(String, graphql_name='mediaType')\n    file_location = sgqlc.types.Field(String, graphql_name='fileLocation')\n    url = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='url')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImagesCollectionsBinariesView.__field_names__","title":"<code>__field_names__ = ('image_collection_id', 'image_id', 'title', 'producer_name', 'image_binary_id', 'aspect_ratio', 'height', 'width', 'media_type', 'file_location', 'url')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImagesCollectionsBinariesView.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImagesCollectionsBinariesView.aspect_ratio","title":"<code>aspect_ratio = sgqlc.types.Field(String, graphql_name='aspectRatio')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImagesCollectionsBinariesView.file_location","title":"<code>file_location = sgqlc.types.Field(String, graphql_name='fileLocation')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImagesCollectionsBinariesView.height","title":"<code>height = sgqlc.types.Field(Int, graphql_name='height')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImagesCollectionsBinariesView.image_binary_id","title":"<code>image_binary_id = sgqlc.types.Field(String, graphql_name='imageBinaryId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImagesCollectionsBinariesView.image_collection_id","title":"<code>image_collection_id = sgqlc.types.Field(String, graphql_name='imageCollectionId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImagesCollectionsBinariesView.image_id","title":"<code>image_id = sgqlc.types.Field(String, graphql_name='imageId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImagesCollectionsBinariesView.media_type","title":"<code>media_type = sgqlc.types.Field(String, graphql_name='mediaType')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImagesCollectionsBinariesView.producer_name","title":"<code>producer_name = sgqlc.types.Field(String, graphql_name='producerName')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImagesCollectionsBinariesView.title","title":"<code>title = sgqlc.types.Field(String, graphql_name='title')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImagesCollectionsBinariesView.url","title":"<code>url = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='url')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImagesCollectionsBinariesView.width","title":"<code>width = sgqlc.types.Field(Int, graphql_name='width')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImagesCollectionsBinariesViewCondition","title":"<code>ImagesCollectionsBinariesViewCondition</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class ImagesCollectionsBinariesViewCondition(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('image_collection_id', 'image_id', 'title', 'producer_name',\n                       'image_binary_id', 'aspect_ratio', 'height', 'width', 'media_type', 'file_location')\n    image_collection_id = sgqlc.types.Field(\n        String, graphql_name='imageCollectionId')\n    image_id = sgqlc.types.Field(String, graphql_name='imageId')\n    title = sgqlc.types.Field(String, graphql_name='title')\n    producer_name = sgqlc.types.Field(String, graphql_name='producerName')\n    image_binary_id = sgqlc.types.Field(String, graphql_name='imageBinaryId')\n    aspect_ratio = sgqlc.types.Field(String, graphql_name='aspectRatio')\n    height = sgqlc.types.Field(Int, graphql_name='height')\n    width = sgqlc.types.Field(Int, graphql_name='width')\n    media_type = sgqlc.types.Field(String, graphql_name='mediaType')\n    file_location = sgqlc.types.Field(String, graphql_name='fileLocation')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImagesCollectionsBinariesViewCondition.__field_names__","title":"<code>__field_names__ = ('image_collection_id', 'image_id', 'title', 'producer_name', 'image_binary_id', 'aspect_ratio', 'height', 'width', 'media_type', 'file_location')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImagesCollectionsBinariesViewCondition.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImagesCollectionsBinariesViewCondition.aspect_ratio","title":"<code>aspect_ratio = sgqlc.types.Field(String, graphql_name='aspectRatio')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImagesCollectionsBinariesViewCondition.file_location","title":"<code>file_location = sgqlc.types.Field(String, graphql_name='fileLocation')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImagesCollectionsBinariesViewCondition.height","title":"<code>height = sgqlc.types.Field(Int, graphql_name='height')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImagesCollectionsBinariesViewCondition.image_binary_id","title":"<code>image_binary_id = sgqlc.types.Field(String, graphql_name='imageBinaryId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImagesCollectionsBinariesViewCondition.image_collection_id","title":"<code>image_collection_id = sgqlc.types.Field(String, graphql_name='imageCollectionId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImagesCollectionsBinariesViewCondition.image_id","title":"<code>image_id = sgqlc.types.Field(String, graphql_name='imageId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImagesCollectionsBinariesViewCondition.media_type","title":"<code>media_type = sgqlc.types.Field(String, graphql_name='mediaType')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImagesCollectionsBinariesViewCondition.producer_name","title":"<code>producer_name = sgqlc.types.Field(String, graphql_name='producerName')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImagesCollectionsBinariesViewCondition.title","title":"<code>title = sgqlc.types.Field(String, graphql_name='title')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImagesCollectionsBinariesViewCondition.width","title":"<code>width = sgqlc.types.Field(Int, graphql_name='width')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImagesCollectionsBinariesViewFilter","title":"<code>ImagesCollectionsBinariesViewFilter</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class ImagesCollectionsBinariesViewFilter(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('image_collection_id', 'image_id', 'title', 'producer_name', 'image_binary_id',\n                       'aspect_ratio', 'height', 'width', 'media_type', 'file_location', 'and_', 'or_', 'not_')\n    image_collection_id = sgqlc.types.Field(\n        'StringFilter', graphql_name='imageCollectionId')\n    image_id = sgqlc.types.Field('StringFilter', graphql_name='imageId')\n    title = sgqlc.types.Field('StringFilter', graphql_name='title')\n    producer_name = sgqlc.types.Field(\n        'StringFilter', graphql_name='producerName')\n    image_binary_id = sgqlc.types.Field(\n        'StringFilter', graphql_name='imageBinaryId')\n    aspect_ratio = sgqlc.types.Field(\n        'StringFilter', graphql_name='aspectRatio')\n    height = sgqlc.types.Field('IntFilter', graphql_name='height')\n    width = sgqlc.types.Field('IntFilter', graphql_name='width')\n    media_type = sgqlc.types.Field('StringFilter', graphql_name='mediaType')\n    file_location = sgqlc.types.Field(\n        'StringFilter', graphql_name='fileLocation')\n    and_ = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null(\n        'ImagesCollectionsBinariesViewFilter')), graphql_name='and')\n    or_ = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null(\n        'ImagesCollectionsBinariesViewFilter')), graphql_name='or')\n    not_ = sgqlc.types.Field(\n        'ImagesCollectionsBinariesViewFilter', graphql_name='not')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImagesCollectionsBinariesViewFilter.__field_names__","title":"<code>__field_names__ = ('image_collection_id', 'image_id', 'title', 'producer_name', 'image_binary_id', 'aspect_ratio', 'height', 'width', 'media_type', 'file_location', 'and_', 'or_', 'not_')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImagesCollectionsBinariesViewFilter.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImagesCollectionsBinariesViewFilter.and_","title":"<code>and_ = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('ImagesCollectionsBinariesViewFilter')), graphql_name='and')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImagesCollectionsBinariesViewFilter.aspect_ratio","title":"<code>aspect_ratio = sgqlc.types.Field('StringFilter', graphql_name='aspectRatio')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImagesCollectionsBinariesViewFilter.file_location","title":"<code>file_location = sgqlc.types.Field('StringFilter', graphql_name='fileLocation')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImagesCollectionsBinariesViewFilter.height","title":"<code>height = sgqlc.types.Field('IntFilter', graphql_name='height')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImagesCollectionsBinariesViewFilter.image_binary_id","title":"<code>image_binary_id = sgqlc.types.Field('StringFilter', graphql_name='imageBinaryId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImagesCollectionsBinariesViewFilter.image_collection_id","title":"<code>image_collection_id = sgqlc.types.Field('StringFilter', graphql_name='imageCollectionId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImagesCollectionsBinariesViewFilter.image_id","title":"<code>image_id = sgqlc.types.Field('StringFilter', graphql_name='imageId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImagesCollectionsBinariesViewFilter.media_type","title":"<code>media_type = sgqlc.types.Field('StringFilter', graphql_name='mediaType')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImagesCollectionsBinariesViewFilter.not_","title":"<code>not_ = sgqlc.types.Field('ImagesCollectionsBinariesViewFilter', graphql_name='not')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImagesCollectionsBinariesViewFilter.or_","title":"<code>or_ = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('ImagesCollectionsBinariesViewFilter')), graphql_name='or')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImagesCollectionsBinariesViewFilter.producer_name","title":"<code>producer_name = sgqlc.types.Field('StringFilter', graphql_name='producerName')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImagesCollectionsBinariesViewFilter.title","title":"<code>title = sgqlc.types.Field('StringFilter', graphql_name='title')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImagesCollectionsBinariesViewFilter.width","title":"<code>width = sgqlc.types.Field('IntFilter', graphql_name='width')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImagesCollectionsBinariesViewsConnection","title":"<code>ImagesCollectionsBinariesViewsConnection</code>","text":"<p>         Bases: <code>sgqlc.types.relay.Connection</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class ImagesCollectionsBinariesViewsConnection(sgqlc.types.relay.Connection):\n    __schema__ = audiothek_schema\n    __field_names__ = ('nodes', 'edges', 'page_info', 'total_count')\n    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(\n        sgqlc.types.non_null(ImagesCollectionsBinariesView))), graphql_name='nodes')\n    edges = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(\n        sgqlc.types.non_null('ImagesCollectionsBinariesViewsEdge'))), graphql_name='edges')\n    page_info = sgqlc.types.Field(sgqlc.types.non_null(\n        'PageInfo'), graphql_name='pageInfo')\n    total_count = sgqlc.types.Field(\n        sgqlc.types.non_null(Int), graphql_name='totalCount')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImagesCollectionsBinariesViewsConnection.__field_names__","title":"<code>__field_names__ = ('nodes', 'edges', 'page_info', 'total_count')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImagesCollectionsBinariesViewsConnection.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImagesCollectionsBinariesViewsConnection.edges","title":"<code>edges = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('ImagesCollectionsBinariesViewsEdge'))), graphql_name='edges')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImagesCollectionsBinariesViewsConnection.nodes","title":"<code>nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(ImagesCollectionsBinariesView))), graphql_name='nodes')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImagesCollectionsBinariesViewsConnection.page_info","title":"<code>page_info = sgqlc.types.Field(sgqlc.types.non_null('PageInfo'), graphql_name='pageInfo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImagesCollectionsBinariesViewsConnection.total_count","title":"<code>total_count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='totalCount')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImagesCollectionsBinariesViewsEdge","title":"<code>ImagesCollectionsBinariesViewsEdge</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class ImagesCollectionsBinariesViewsEdge(sgqlc.types.Type):\n    __schema__ = audiothek_schema\n    __field_names__ = ('cursor', 'node')\n    cursor = sgqlc.types.Field(Cursor, graphql_name='cursor')\n    node = sgqlc.types.Field(sgqlc.types.non_null(\n        ImagesCollectionsBinariesView), graphql_name='node')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImagesCollectionsBinariesViewsEdge.__field_names__","title":"<code>__field_names__ = ('cursor', 'node')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImagesCollectionsBinariesViewsEdge.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImagesCollectionsBinariesViewsEdge.cursor","title":"<code>cursor = sgqlc.types.Field(Cursor, graphql_name='cursor')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImagesCollectionsBinariesViewsEdge.node","title":"<code>node = sgqlc.types.Field(sgqlc.types.non_null(ImagesCollectionsBinariesView), graphql_name='node')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImagesCollectionsBinariesViewsOrderBy","title":"<code>ImagesCollectionsBinariesViewsOrderBy</code>","text":"<p>         Bases: <code>sgqlc.types.Enum</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class ImagesCollectionsBinariesViewsOrderBy(sgqlc.types.Enum):\n    __schema__ = audiothek_schema\n    __choices__ = ('ASPECT_RATIO_ASC', 'ASPECT_RATIO_DESC', 'FILE_LOCATION_ASC', 'FILE_LOCATION_DESC', 'HEIGHT_ASC', 'HEIGHT_DESC', 'IMAGE_BINARY_ID_ASC', 'IMAGE_BINARY_ID_DESC', 'IMAGE_COLLECTION_ID_ASC',\n                   'IMAGE_COLLECTION_ID_DESC', 'IMAGE_ID_ASC', 'IMAGE_ID_DESC', 'MEDIA_TYPE_ASC', 'MEDIA_TYPE_DESC', 'NATURAL', 'PRODUCER_NAME_ASC', 'PRODUCER_NAME_DESC', 'TITLE_ASC', 'TITLE_DESC', 'WIDTH_ASC', 'WIDTH_DESC')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImagesCollectionsBinariesViewsOrderBy.__choices__","title":"<code>__choices__ = ('ASPECT_RATIO_ASC', 'ASPECT_RATIO_DESC', 'FILE_LOCATION_ASC', 'FILE_LOCATION_DESC', 'HEIGHT_ASC', 'HEIGHT_DESC', 'IMAGE_BINARY_ID_ASC', 'IMAGE_BINARY_ID_DESC', 'IMAGE_COLLECTION_ID_ASC', 'IMAGE_COLLECTION_ID_DESC', 'IMAGE_ID_ASC', 'IMAGE_ID_DESC', 'MEDIA_TYPE_ASC', 'MEDIA_TYPE_DESC', 'NATURAL', 'PRODUCER_NAME_ASC', 'PRODUCER_NAME_DESC', 'TITLE_ASC', 'TITLE_DESC', 'WIDTH_ASC', 'WIDTH_DESC')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ImagesCollectionsBinariesViewsOrderBy.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.IntFilter","title":"<code>IntFilter</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class IntFilter(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('is_null', 'equal_to', 'not_equal_to', 'distinct_from', 'not_distinct_from',\n                       'in_', 'not_in', 'less_than', 'less_than_or_equal_to', 'greater_than', 'greater_than_or_equal_to')\n    is_null = sgqlc.types.Field(Boolean, graphql_name='isNull')\n    equal_to = sgqlc.types.Field(Int, graphql_name='equalTo')\n    not_equal_to = sgqlc.types.Field(Int, graphql_name='notEqualTo')\n    distinct_from = sgqlc.types.Field(Int, graphql_name='distinctFrom')\n    not_distinct_from = sgqlc.types.Field(Int, graphql_name='notDistinctFrom')\n    in_ = sgqlc.types.Field(sgqlc.types.list_of(\n        sgqlc.types.non_null(Int)), graphql_name='in')\n    not_in = sgqlc.types.Field(sgqlc.types.list_of(\n        sgqlc.types.non_null(Int)), graphql_name='notIn')\n    less_than = sgqlc.types.Field(Int, graphql_name='lessThan')\n    less_than_or_equal_to = sgqlc.types.Field(\n        Int, graphql_name='lessThanOrEqualTo')\n    greater_than = sgqlc.types.Field(Int, graphql_name='greaterThan')\n    greater_than_or_equal_to = sgqlc.types.Field(\n        Int, graphql_name='greaterThanOrEqualTo')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.IntFilter.__field_names__","title":"<code>__field_names__ = ('is_null', 'equal_to', 'not_equal_to', 'distinct_from', 'not_distinct_from', 'in_', 'not_in', 'less_than', 'less_than_or_equal_to', 'greater_than', 'greater_than_or_equal_to')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.IntFilter.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.IntFilter.distinct_from","title":"<code>distinct_from = sgqlc.types.Field(Int, graphql_name='distinctFrom')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.IntFilter.equal_to","title":"<code>equal_to = sgqlc.types.Field(Int, graphql_name='equalTo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.IntFilter.greater_than","title":"<code>greater_than = sgqlc.types.Field(Int, graphql_name='greaterThan')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.IntFilter.greater_than_or_equal_to","title":"<code>greater_than_or_equal_to = sgqlc.types.Field(Int, graphql_name='greaterThanOrEqualTo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.IntFilter.in_","title":"<code>in_ = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null(Int)), graphql_name='in')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.IntFilter.is_null","title":"<code>is_null = sgqlc.types.Field(Boolean, graphql_name='isNull')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.IntFilter.less_than","title":"<code>less_than = sgqlc.types.Field(Int, graphql_name='lessThan')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.IntFilter.less_than_or_equal_to","title":"<code>less_than_or_equal_to = sgqlc.types.Field(Int, graphql_name='lessThanOrEqualTo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.IntFilter.not_distinct_from","title":"<code>not_distinct_from = sgqlc.types.Field(Int, graphql_name='notDistinctFrom')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.IntFilter.not_equal_to","title":"<code>not_equal_to = sgqlc.types.Field(Int, graphql_name='notEqualTo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.IntFilter.not_in","title":"<code>not_in = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null(Int)), graphql_name='notIn')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.IntFilterB","title":"<code>IntFilterB</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class IntFilterB(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('eq', 'ne', 'in_', 'gt', 'gte', 'lt', 'lte')\n    eq = sgqlc.types.Field(Int, graphql_name='eq')\n    ne = sgqlc.types.Field(Int, graphql_name='ne')\n    in_ = sgqlc.types.Field(sgqlc.types.list_of(Int), graphql_name='in')\n    gt = sgqlc.types.Field(Int, graphql_name='gt')\n    gte = sgqlc.types.Field(Int, graphql_name='gte')\n    lt = sgqlc.types.Field(Int, graphql_name='lt')\n    lte = sgqlc.types.Field(Int, graphql_name='lte')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.IntFilterB.__field_names__","title":"<code>__field_names__ = ('eq', 'ne', 'in_', 'gt', 'gte', 'lt', 'lte')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.IntFilterB.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.IntFilterB.eq","title":"<code>eq = sgqlc.types.Field(Int, graphql_name='eq')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.IntFilterB.gt","title":"<code>gt = sgqlc.types.Field(Int, graphql_name='gt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.IntFilterB.gte","title":"<code>gte = sgqlc.types.Field(Int, graphql_name='gte')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.IntFilterB.in_","title":"<code>in_ = sgqlc.types.Field(sgqlc.types.list_of(Int), graphql_name='in')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.IntFilterB.lt","title":"<code>lt = sgqlc.types.Field(Int, graphql_name='lt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.IntFilterB.lte","title":"<code>lte = sgqlc.types.Field(Int, graphql_name='lte')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.IntFilterB.ne","title":"<code>ne = sgqlc.types.Field(Int, graphql_name='ne')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Item","title":"<code>Item</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code>, <code>Node</code>, <code>Teaser</code>, <code>CoreTeaser</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class Item(sgqlc.types.Type, Node, Teaser, CoreTeaser):\n    __schema__ = audiothek_schema\n    __field_names__ = ('row_id', 'publish_date', 'codex_pending', 'is_published', 'program_set_id', 'title_without_number', 'group_id', 'episode_number', 'max_group_number', 'codex_last_published', 'external_ids', 'editorial_category_id', 'core_id', 'item_type', 'core_document', 'external_id', 'image_collection_id', 'show_id', 'first_publish_date', 'audio_binary_id',\n                       'status', 'program_set', 'group', 'editorial_category', 'concepts', 'transcript', 'audio_list', 'editorial_categories', 'editorial_categories_list', 'has_core_document', 'has_synthetic_row_id', 'images', 'images_list', 'next_episode', 'title_clean', 'summary', 'description', 'duration', 'grouping', 'audios', 'keywords', 'subjects', 'recommendations', 'core')\n    row_id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='rowId')\n    publish_date = sgqlc.types.Field(\n        sgqlc.types.non_null(Datetime), graphql_name='publishDate')\n    codex_pending = sgqlc.types.Field(\n        sgqlc.types.non_null(Boolean), graphql_name='codexPending')\n    is_published = sgqlc.types.Field(\n        sgqlc.types.non_null(Boolean), graphql_name='isPublished')\n    program_set_id = sgqlc.types.Field(Int, graphql_name='programSetId')\n    title_without_number = sgqlc.types.Field(\n        String, graphql_name='titleWithoutNumber')\n    group_id = sgqlc.types.Field(String, graphql_name='groupId')\n    episode_number = sgqlc.types.Field(Int, graphql_name='episodeNumber')\n    max_group_number = sgqlc.types.Field(Int, graphql_name='maxGroupNumber')\n    codex_last_published = sgqlc.types.Field(\n        BigInt, graphql_name='codexLastPublished')\n    external_ids = sgqlc.types.Field(\n        sgqlc.types.list_of(String), graphql_name='externalIds')\n    editorial_category_id = sgqlc.types.Field(\n        String, graphql_name='editorialCategoryId')\n    core_id = sgqlc.types.Field(String, graphql_name='coreId')\n    item_type = sgqlc.types.Field(\n        sgqlc.types.non_null(ItemType), graphql_name='itemType')\n    core_document = sgqlc.types.Field(JSON, graphql_name='coreDocument')\n    external_id = sgqlc.types.Field(String, graphql_name='externalId')\n    image_collection_id = sgqlc.types.Field(\n        String, graphql_name='imageCollectionId')\n    show_id = sgqlc.types.Field(String, graphql_name='showId')\n    first_publish_date = sgqlc.types.Field(\n        Datetime, graphql_name='firstPublishDate')\n    audio_binary_id = sgqlc.types.Field(String, graphql_name='audioBinaryId')\n    status = sgqlc.types.Field(Status, graphql_name='status')\n    program_set = sgqlc.types.Field('ProgramSet', graphql_name='programSet')\n    group = sgqlc.types.Field(Grouping, graphql_name='group')\n    editorial_category = sgqlc.types.Field(\n        EditorialCategory, graphql_name='editorialCategory')\n    concepts = sgqlc.types.Field(sgqlc.types.non_null(ConceptsConnection), graphql_name='concepts', args=sgqlc.types.ArgDict((\n        ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)),\n        ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)),\n        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),\n        ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)),\n        ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)),\n        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(\n            ConceptsOrderBy)), graphql_name='orderBy', default=('PRIMARY_KEY_ASC',))),\n        ('condition', sgqlc.types.Arg(ConceptCondition,\n         graphql_name='condition', default=None)),\n        ('filter', sgqlc.types.Arg(ConceptFilter, graphql_name='filter', default=None)),\n    ))\n    )\n    transcript = sgqlc.types.Field('Transcript', graphql_name='transcript')\n    audio_list = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null(AudioBinary)), graphql_name='audioList', args=sgqlc.types.ArgDict((\n        ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)),\n        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),\n    ))\n    )\n    editorial_categories = sgqlc.types.Field(sgqlc.types.non_null(EditorialCategoriesConnection), graphql_name='editorialCategories', args=sgqlc.types.ArgDict((\n        ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)),\n        ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)),\n        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),\n        ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)),\n        ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)),\n        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(\n            EditorialCategoriesOrderBy)), graphql_name='orderBy', default=None)),\n        ('condition', sgqlc.types.Arg(EditorialCategoryCondition,\n         graphql_name='condition', default=None)),\n        ('filter', sgqlc.types.Arg(EditorialCategoryFilter,\n         graphql_name='filter', default=None)),\n    ))\n    )\n    editorial_categories_list = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null(EditorialCategory)), graphql_name='editorialCategoriesList', args=sgqlc.types.ArgDict((\n        ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)),\n        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),\n        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(\n            EditorialCategoriesOrderBy)), graphql_name='orderBy', default=None)),\n        ('condition', sgqlc.types.Arg(EditorialCategoryCondition,\n         graphql_name='condition', default=None)),\n        ('filter', sgqlc.types.Arg(EditorialCategoryFilter,\n         graphql_name='filter', default=None)),\n    ))\n    )\n    has_core_document = sgqlc.types.Field(\n        Boolean, graphql_name='hasCoreDocument')\n    has_synthetic_row_id = sgqlc.types.Field(\n        Boolean, graphql_name='hasSyntheticRowId')\n    images = sgqlc.types.Field(sgqlc.types.non_null(ImagesCollectionsBinariesViewsConnection), graphql_name='images', args=sgqlc.types.ArgDict((\n        ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)),\n        ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)),\n        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),\n        ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)),\n        ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)),\n    ))\n    )\n    images_list = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null(ImagesCollectionsBinariesView)), graphql_name='imagesList', args=sgqlc.types.ArgDict((\n        ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)),\n        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),\n    ))\n    )\n    next_episode = sgqlc.types.Field('Item', graphql_name='nextEpisode')\n    title_clean = sgqlc.types.Field(String, graphql_name='titleClean')\n    summary = sgqlc.types.Field(String, graphql_name='summary')\n    description = sgqlc.types.Field(HTML, graphql_name='description')\n    duration = sgqlc.types.Field(Int, graphql_name='duration', args=sgqlc.types.ArgDict((\n        ('variant', sgqlc.types.Arg(DurationVariant,\n         graphql_name='variant', default=None)),\n    ))\n    )\n    grouping = sgqlc.types.Field(JSON, graphql_name='grouping')\n    audios = sgqlc.types.Field(sgqlc.types.list_of(\n        sgqlc.types.non_null(AssetType)), graphql_name='audios')\n    keywords = sgqlc.types.Field(JSON, graphql_name='keywords')\n    subjects = sgqlc.types.Field(JSON, graphql_name='subjects')\n    recommendations = sgqlc.types.Field(RecommendationsConnection, graphql_name='recommendations', args=sgqlc.types.ArgDict((\n        ('variant', sgqlc.types.Arg(sgqlc.types.non_null(\n            ItemRecVariant), graphql_name='variant', default=None)),\n    ))\n    )\n    core = sgqlc.types.Field(JSON, graphql_name='core', args=sgqlc.types.ArgDict((\n        ('filter', sgqlc.types.Arg(String, graphql_name='filter', default=None)),\n        ('key', sgqlc.types.Arg(String, graphql_name='key', default=None)),\n    ))\n    )\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Item.__field_names__","title":"<code>__field_names__ = ('row_id', 'publish_date', 'codex_pending', 'is_published', 'program_set_id', 'title_without_number', 'group_id', 'episode_number', 'max_group_number', 'codex_last_published', 'external_ids', 'editorial_category_id', 'core_id', 'item_type', 'core_document', 'external_id', 'image_collection_id', 'show_id', 'first_publish_date', 'audio_binary_id', 'status', 'program_set', 'group', 'editorial_category', 'concepts', 'transcript', 'audio_list', 'editorial_categories', 'editorial_categories_list', 'has_core_document', 'has_synthetic_row_id', 'images', 'images_list', 'next_episode', 'title_clean', 'summary', 'description', 'duration', 'grouping', 'audios', 'keywords', 'subjects', 'recommendations', 'core')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Item.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Item.audio_binary_id","title":"<code>audio_binary_id = sgqlc.types.Field(String, graphql_name='audioBinaryId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Item.audio_list","title":"<code>audio_list = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null(AudioBinary)), graphql_name='audioList', args=sgqlc.types.ArgDict((('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)), ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Item.audios","title":"<code>audios = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null(AssetType)), graphql_name='audios')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Item.codex_last_published","title":"<code>codex_last_published = sgqlc.types.Field(BigInt, graphql_name='codexLastPublished')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Item.codex_pending","title":"<code>codex_pending = sgqlc.types.Field(sgqlc.types.non_null(Boolean), graphql_name='codexPending')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Item.concepts","title":"<code>concepts = sgqlc.types.Field(sgqlc.types.non_null(ConceptsConnection), graphql_name='concepts', args=sgqlc.types.ArgDict((('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)), ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)), ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)), ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)), ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)), ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(ConceptsOrderBy)), graphql_name='orderBy', default=('PRIMARY_KEY_ASC'))), ('condition', sgqlc.types.Arg(ConceptCondition, graphql_name='condition', default=None)), ('filter', sgqlc.types.Arg(ConceptFilter, graphql_name='filter', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Item.core","title":"<code>core = sgqlc.types.Field(JSON, graphql_name='core', args=sgqlc.types.ArgDict((('filter', sgqlc.types.Arg(String, graphql_name='filter', default=None)), ('key', sgqlc.types.Arg(String, graphql_name='key', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Item.core_document","title":"<code>core_document = sgqlc.types.Field(JSON, graphql_name='coreDocument')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Item.core_id","title":"<code>core_id = sgqlc.types.Field(String, graphql_name='coreId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Item.description","title":"<code>description = sgqlc.types.Field(HTML, graphql_name='description')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Item.duration","title":"<code>duration = sgqlc.types.Field(Int, graphql_name='duration', args=sgqlc.types.ArgDict((('variant', sgqlc.types.Arg(DurationVariant, graphql_name='variant', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Item.editorial_categories","title":"<code>editorial_categories = sgqlc.types.Field(sgqlc.types.non_null(EditorialCategoriesConnection), graphql_name='editorialCategories', args=sgqlc.types.ArgDict((('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)), ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)), ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)), ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)), ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)), ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(EditorialCategoriesOrderBy)), graphql_name='orderBy', default=None)), ('condition', sgqlc.types.Arg(EditorialCategoryCondition, graphql_name='condition', default=None)), ('filter', sgqlc.types.Arg(EditorialCategoryFilter, graphql_name='filter', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Item.editorial_categories_list","title":"<code>editorial_categories_list = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null(EditorialCategory)), graphql_name='editorialCategoriesList', args=sgqlc.types.ArgDict((('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)), ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)), ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(EditorialCategoriesOrderBy)), graphql_name='orderBy', default=None)), ('condition', sgqlc.types.Arg(EditorialCategoryCondition, graphql_name='condition', default=None)), ('filter', sgqlc.types.Arg(EditorialCategoryFilter, graphql_name='filter', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Item.editorial_category","title":"<code>editorial_category = sgqlc.types.Field(EditorialCategory, graphql_name='editorialCategory')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Item.editorial_category_id","title":"<code>editorial_category_id = sgqlc.types.Field(String, graphql_name='editorialCategoryId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Item.episode_number","title":"<code>episode_number = sgqlc.types.Field(Int, graphql_name='episodeNumber')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Item.external_id","title":"<code>external_id = sgqlc.types.Field(String, graphql_name='externalId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Item.external_ids","title":"<code>external_ids = sgqlc.types.Field(sgqlc.types.list_of(String), graphql_name='externalIds')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Item.first_publish_date","title":"<code>first_publish_date = sgqlc.types.Field(Datetime, graphql_name='firstPublishDate')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Item.group","title":"<code>group = sgqlc.types.Field(Grouping, graphql_name='group')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Item.group_id","title":"<code>group_id = sgqlc.types.Field(String, graphql_name='groupId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Item.grouping","title":"<code>grouping = sgqlc.types.Field(JSON, graphql_name='grouping')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Item.has_core_document","title":"<code>has_core_document = sgqlc.types.Field(Boolean, graphql_name='hasCoreDocument')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Item.has_synthetic_row_id","title":"<code>has_synthetic_row_id = sgqlc.types.Field(Boolean, graphql_name='hasSyntheticRowId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Item.image_collection_id","title":"<code>image_collection_id = sgqlc.types.Field(String, graphql_name='imageCollectionId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Item.images","title":"<code>images = sgqlc.types.Field(sgqlc.types.non_null(ImagesCollectionsBinariesViewsConnection), graphql_name='images', args=sgqlc.types.ArgDict((('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)), ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)), ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)), ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)), ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Item.images_list","title":"<code>images_list = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null(ImagesCollectionsBinariesView)), graphql_name='imagesList', args=sgqlc.types.ArgDict((('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)), ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Item.is_published","title":"<code>is_published = sgqlc.types.Field(sgqlc.types.non_null(Boolean), graphql_name='isPublished')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Item.item_type","title":"<code>item_type = sgqlc.types.Field(sgqlc.types.non_null(ItemType), graphql_name='itemType')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Item.keywords","title":"<code>keywords = sgqlc.types.Field(JSON, graphql_name='keywords')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Item.max_group_number","title":"<code>max_group_number = sgqlc.types.Field(Int, graphql_name='maxGroupNumber')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Item.next_episode","title":"<code>next_episode = sgqlc.types.Field('Item', graphql_name='nextEpisode')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Item.program_set","title":"<code>program_set = sgqlc.types.Field('ProgramSet', graphql_name='programSet')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Item.program_set_id","title":"<code>program_set_id = sgqlc.types.Field(Int, graphql_name='programSetId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Item.publish_date","title":"<code>publish_date = sgqlc.types.Field(sgqlc.types.non_null(Datetime), graphql_name='publishDate')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Item.recommendations","title":"<code>recommendations = sgqlc.types.Field(RecommendationsConnection, graphql_name='recommendations', args=sgqlc.types.ArgDict((('variant', sgqlc.types.Arg(sgqlc.types.non_null(ItemRecVariant), graphql_name='variant', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Item.row_id","title":"<code>row_id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='rowId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Item.show_id","title":"<code>show_id = sgqlc.types.Field(String, graphql_name='showId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Item.status","title":"<code>status = sgqlc.types.Field(Status, graphql_name='status')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Item.subjects","title":"<code>subjects = sgqlc.types.Field(JSON, graphql_name='subjects')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Item.summary","title":"<code>summary = sgqlc.types.Field(String, graphql_name='summary')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Item.title_clean","title":"<code>title_clean = sgqlc.types.Field(String, graphql_name='titleClean')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Item.title_without_number","title":"<code>title_without_number = sgqlc.types.Field(String, graphql_name='titleWithoutNumber')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Item.transcript","title":"<code>transcript = sgqlc.types.Field('Transcript', graphql_name='transcript')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemCondition","title":"<code>ItemCondition</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class ItemCondition(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('id', 'backend_document_hash', 'backend_document', 'publish_date', 'codex_pending', 'feed_document', 'feed_document_modified_at', 'is_published', 'depublished_at', 'program_set_id', 'title', 'title_without_number', 'group_id',\n                       'episode_number', 'max_group_number', 'codex_last_published', 'external_ids', 'image', 'editorial_category_id', 'core_id', 'item_type', 'core_document', 'external_id', 'image_collection_id', 'show_id', 'first_publish_date', 'audio_binary_id', 'status')\n    id = sgqlc.types.Field(Int, graphql_name='id')\n    backend_document_hash = sgqlc.types.Field(\n        String, graphql_name='backendDocumentHash')\n    backend_document = sgqlc.types.Field(JSON, graphql_name='backendDocument')\n    publish_date = sgqlc.types.Field(Datetime, graphql_name='publishDate')\n    codex_pending = sgqlc.types.Field(Boolean, graphql_name='codexPending')\n    feed_document = sgqlc.types.Field(JSON, graphql_name='feedDocument')\n    feed_document_modified_at = sgqlc.types.Field(\n        BigInt, graphql_name='feedDocumentModifiedAt')\n    is_published = sgqlc.types.Field(Boolean, graphql_name='isPublished')\n    depublished_at = sgqlc.types.Field(BigInt, graphql_name='depublishedAt')\n    program_set_id = sgqlc.types.Field(Int, graphql_name='programSetId')\n    title = sgqlc.types.Field(String, graphql_name='title')\n    title_without_number = sgqlc.types.Field(\n        String, graphql_name='titleWithoutNumber')\n    group_id = sgqlc.types.Field(String, graphql_name='groupId')\n    episode_number = sgqlc.types.Field(Int, graphql_name='episodeNumber')\n    max_group_number = sgqlc.types.Field(Int, graphql_name='maxGroupNumber')\n    codex_last_published = sgqlc.types.Field(\n        BigInt, graphql_name='codexLastPublished')\n    external_ids = sgqlc.types.Field(\n        sgqlc.types.list_of(String), graphql_name='externalIds')\n    image = sgqlc.types.Field(ImageTypeInput, graphql_name='image')\n    editorial_category_id = sgqlc.types.Field(\n        String, graphql_name='editorialCategoryId')\n    core_id = sgqlc.types.Field(String, graphql_name='coreId')\n    item_type = sgqlc.types.Field(ItemType, graphql_name='itemType')\n    core_document = sgqlc.types.Field(JSON, graphql_name='coreDocument')\n    external_id = sgqlc.types.Field(String, graphql_name='externalId')\n    image_collection_id = sgqlc.types.Field(\n        String, graphql_name='imageCollectionId')\n    show_id = sgqlc.types.Field(String, graphql_name='showId')\n    first_publish_date = sgqlc.types.Field(\n        Datetime, graphql_name='firstPublishDate')\n    audio_binary_id = sgqlc.types.Field(String, graphql_name='audioBinaryId')\n    status = sgqlc.types.Field(Status, graphql_name='status')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemCondition.__field_names__","title":"<code>__field_names__ = ('id', 'backend_document_hash', 'backend_document', 'publish_date', 'codex_pending', 'feed_document', 'feed_document_modified_at', 'is_published', 'depublished_at', 'program_set_id', 'title', 'title_without_number', 'group_id', 'episode_number', 'max_group_number', 'codex_last_published', 'external_ids', 'image', 'editorial_category_id', 'core_id', 'item_type', 'core_document', 'external_id', 'image_collection_id', 'show_id', 'first_publish_date', 'audio_binary_id', 'status')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemCondition.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemCondition.audio_binary_id","title":"<code>audio_binary_id = sgqlc.types.Field(String, graphql_name='audioBinaryId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemCondition.backend_document","title":"<code>backend_document = sgqlc.types.Field(JSON, graphql_name='backendDocument')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemCondition.backend_document_hash","title":"<code>backend_document_hash = sgqlc.types.Field(String, graphql_name='backendDocumentHash')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemCondition.codex_last_published","title":"<code>codex_last_published = sgqlc.types.Field(BigInt, graphql_name='codexLastPublished')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemCondition.codex_pending","title":"<code>codex_pending = sgqlc.types.Field(Boolean, graphql_name='codexPending')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemCondition.core_document","title":"<code>core_document = sgqlc.types.Field(JSON, graphql_name='coreDocument')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemCondition.core_id","title":"<code>core_id = sgqlc.types.Field(String, graphql_name='coreId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemCondition.depublished_at","title":"<code>depublished_at = sgqlc.types.Field(BigInt, graphql_name='depublishedAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemCondition.editorial_category_id","title":"<code>editorial_category_id = sgqlc.types.Field(String, graphql_name='editorialCategoryId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemCondition.episode_number","title":"<code>episode_number = sgqlc.types.Field(Int, graphql_name='episodeNumber')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemCondition.external_id","title":"<code>external_id = sgqlc.types.Field(String, graphql_name='externalId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemCondition.external_ids","title":"<code>external_ids = sgqlc.types.Field(sgqlc.types.list_of(String), graphql_name='externalIds')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemCondition.feed_document","title":"<code>feed_document = sgqlc.types.Field(JSON, graphql_name='feedDocument')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemCondition.feed_document_modified_at","title":"<code>feed_document_modified_at = sgqlc.types.Field(BigInt, graphql_name='feedDocumentModifiedAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemCondition.first_publish_date","title":"<code>first_publish_date = sgqlc.types.Field(Datetime, graphql_name='firstPublishDate')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemCondition.group_id","title":"<code>group_id = sgqlc.types.Field(String, graphql_name='groupId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemCondition.id","title":"<code>id = sgqlc.types.Field(Int, graphql_name='id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemCondition.image","title":"<code>image = sgqlc.types.Field(ImageTypeInput, graphql_name='image')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemCondition.image_collection_id","title":"<code>image_collection_id = sgqlc.types.Field(String, graphql_name='imageCollectionId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemCondition.is_published","title":"<code>is_published = sgqlc.types.Field(Boolean, graphql_name='isPublished')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemCondition.item_type","title":"<code>item_type = sgqlc.types.Field(ItemType, graphql_name='itemType')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemCondition.max_group_number","title":"<code>max_group_number = sgqlc.types.Field(Int, graphql_name='maxGroupNumber')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemCondition.program_set_id","title":"<code>program_set_id = sgqlc.types.Field(Int, graphql_name='programSetId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemCondition.publish_date","title":"<code>publish_date = sgqlc.types.Field(Datetime, graphql_name='publishDate')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemCondition.show_id","title":"<code>show_id = sgqlc.types.Field(String, graphql_name='showId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemCondition.status","title":"<code>status = sgqlc.types.Field(Status, graphql_name='status')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemCondition.title","title":"<code>title = sgqlc.types.Field(String, graphql_name='title')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemCondition.title_without_number","title":"<code>title_without_number = sgqlc.types.Field(String, graphql_name='titleWithoutNumber')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemConnection","title":"<code>ItemConnection</code>","text":"<p>         Bases: <code>sgqlc.types.relay.Connection</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class ItemConnection(sgqlc.types.relay.Connection):\n    __schema__ = audiothek_schema\n    __field_names__ = ('count', 'edges', 'nodes', 'page_info')\n    count = sgqlc.types.Field(Int, graphql_name='count')\n    edges = sgqlc.types.Field(sgqlc.types.list_of(\n        'ItemEdge'), graphql_name='edges')\n    nodes = sgqlc.types.Field(\n        sgqlc.types.list_of('Item'), graphql_name='nodes')\n    page_info = sgqlc.types.Field(sgqlc.types.non_null(\n        'PageInfo'), graphql_name='pageInfo')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemConnection.__field_names__","title":"<code>__field_names__ = ('count', 'edges', 'nodes', 'page_info')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemConnection.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemConnection.count","title":"<code>count = sgqlc.types.Field(Int, graphql_name='count')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemConnection.edges","title":"<code>edges = sgqlc.types.Field(sgqlc.types.list_of('ItemEdge'), graphql_name='edges')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemConnection.nodes","title":"<code>nodes = sgqlc.types.Field(sgqlc.types.list_of('Item'), graphql_name='nodes')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemConnection.page_info","title":"<code>page_info = sgqlc.types.Field(sgqlc.types.non_null('PageInfo'), graphql_name='pageInfo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemConnectionFilterB","title":"<code>ItemConnectionFilterB</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class ItemConnectionFilterB(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('id', 'empty')\n    id = sgqlc.types.Field(IntFilterB, graphql_name='id')\n    empty = sgqlc.types.Field(BooleanFilterB, graphql_name='empty')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemConnectionFilterB.__field_names__","title":"<code>__field_names__ = ('id', 'empty')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemConnectionFilterB.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemConnectionFilterB.empty","title":"<code>empty = sgqlc.types.Field(BooleanFilterB, graphql_name='empty')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemConnectionFilterB.id","title":"<code>id = sgqlc.types.Field(IntFilterB, graphql_name='id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemCreateInput","title":"<code>ItemCreateInput</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class ItemCreateInput(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('type', 'id')\n    type = sgqlc.types.Field(String, graphql_name='type')\n    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemCreateInput.__field_names__","title":"<code>__field_names__ = ('type', 'id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemCreateInput.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemCreateInput.id","title":"<code>id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemCreateInput.type","title":"<code>type = sgqlc.types.Field(String, graphql_name='type')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemEdge","title":"<code>ItemEdge</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class ItemEdge(sgqlc.types.Type):\n    __schema__ = audiothek_schema\n    __field_names__ = ('cursor', 'node')\n    cursor = sgqlc.types.Field(\n        sgqlc.types.non_null(String), graphql_name='cursor')\n    node = sgqlc.types.Field('Item', graphql_name='node')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemEdge.__field_names__","title":"<code>__field_names__ = ('cursor', 'node')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemEdge.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemEdge.cursor","title":"<code>cursor = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='cursor')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemEdge.node","title":"<code>node = sgqlc.types.Field('Item', graphql_name='node')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemFilter","title":"<code>ItemFilter</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class ItemFilter(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('id', 'backend_document_hash', 'backend_document', 'publish_date', 'codex_pending', 'feed_document', 'feed_document_modified_at', 'is_published', 'depublished_at', 'program_set_id', 'title', 'title_without_number', 'group_id', 'episode_number',\n                       'max_group_number', 'codex_last_published', 'external_ids', 'editorial_category_id', 'core_id', 'item_type', 'core_document', 'external_id', 'image_collection_id', 'show_id', 'first_publish_date', 'audio_binary_id', 'status', 'image', 'and_', 'or_', 'not_')\n    id = sgqlc.types.Field(IntFilter, graphql_name='id')\n    backend_document_hash = sgqlc.types.Field(\n        'StringFilter', graphql_name='backendDocumentHash')\n    backend_document = sgqlc.types.Field(\n        'JSONFilter', graphql_name='backendDocument')\n    publish_date = sgqlc.types.Field(\n        DatetimeFilter, graphql_name='publishDate')\n    codex_pending = sgqlc.types.Field(\n        BooleanFilter, graphql_name='codexPending')\n    feed_document = sgqlc.types.Field(\n        'JSONFilter', graphql_name='feedDocument')\n    feed_document_modified_at = sgqlc.types.Field(\n        BigIntFilter, graphql_name='feedDocumentModifiedAt')\n    is_published = sgqlc.types.Field(BooleanFilter, graphql_name='isPublished')\n    depublished_at = sgqlc.types.Field(\n        BigIntFilter, graphql_name='depublishedAt')\n    program_set_id = sgqlc.types.Field(IntFilter, graphql_name='programSetId')\n    title = sgqlc.types.Field('StringFilter', graphql_name='title')\n    title_without_number = sgqlc.types.Field(\n        'StringFilter', graphql_name='titleWithoutNumber')\n    group_id = sgqlc.types.Field('StringFilter', graphql_name='groupId')\n    episode_number = sgqlc.types.Field(IntFilter, graphql_name='episodeNumber')\n    max_group_number = sgqlc.types.Field(\n        IntFilter, graphql_name='maxGroupNumber')\n    codex_last_published = sgqlc.types.Field(\n        BigIntFilter, graphql_name='codexLastPublished')\n    external_ids = sgqlc.types.Field(\n        'StringListFilter', graphql_name='externalIds')\n    editorial_category_id = sgqlc.types.Field(\n        'StringFilter', graphql_name='editorialCategoryId')\n    core_id = sgqlc.types.Field('StringFilter', graphql_name='coreId')\n    item_type = sgqlc.types.Field('ItemTypeFilter', graphql_name='itemType')\n    core_document = sgqlc.types.Field(\n        'JSONFilter', graphql_name='coreDocument')\n    external_id = sgqlc.types.Field('StringFilter', graphql_name='externalId')\n    image_collection_id = sgqlc.types.Field(\n        'StringFilter', graphql_name='imageCollectionId')\n    show_id = sgqlc.types.Field('StringFilter', graphql_name='showId')\n    first_publish_date = sgqlc.types.Field(\n        DatetimeFilter, graphql_name='firstPublishDate')\n    audio_binary_id = sgqlc.types.Field(\n        'StringFilter', graphql_name='audioBinaryId')\n    status = sgqlc.types.Field('StatusFilter', graphql_name='status')\n    image = sgqlc.types.Field(ImageTypeFilter, graphql_name='image')\n    and_ = sgqlc.types.Field(sgqlc.types.list_of(\n        sgqlc.types.non_null('ItemFilter')), graphql_name='and')\n    or_ = sgqlc.types.Field(sgqlc.types.list_of(\n        sgqlc.types.non_null('ItemFilter')), graphql_name='or')\n    not_ = sgqlc.types.Field('ItemFilter', graphql_name='not')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemFilter.__field_names__","title":"<code>__field_names__ = ('id', 'backend_document_hash', 'backend_document', 'publish_date', 'codex_pending', 'feed_document', 'feed_document_modified_at', 'is_published', 'depublished_at', 'program_set_id', 'title', 'title_without_number', 'group_id', 'episode_number', 'max_group_number', 'codex_last_published', 'external_ids', 'editorial_category_id', 'core_id', 'item_type', 'core_document', 'external_id', 'image_collection_id', 'show_id', 'first_publish_date', 'audio_binary_id', 'status', 'image', 'and_', 'or_', 'not_')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemFilter.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemFilter.and_","title":"<code>and_ = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('ItemFilter')), graphql_name='and')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemFilter.audio_binary_id","title":"<code>audio_binary_id = sgqlc.types.Field('StringFilter', graphql_name='audioBinaryId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemFilter.backend_document","title":"<code>backend_document = sgqlc.types.Field('JSONFilter', graphql_name='backendDocument')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemFilter.backend_document_hash","title":"<code>backend_document_hash = sgqlc.types.Field('StringFilter', graphql_name='backendDocumentHash')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemFilter.codex_last_published","title":"<code>codex_last_published = sgqlc.types.Field(BigIntFilter, graphql_name='codexLastPublished')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemFilter.codex_pending","title":"<code>codex_pending = sgqlc.types.Field(BooleanFilter, graphql_name='codexPending')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemFilter.core_document","title":"<code>core_document = sgqlc.types.Field('JSONFilter', graphql_name='coreDocument')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemFilter.core_id","title":"<code>core_id = sgqlc.types.Field('StringFilter', graphql_name='coreId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemFilter.depublished_at","title":"<code>depublished_at = sgqlc.types.Field(BigIntFilter, graphql_name='depublishedAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemFilter.editorial_category_id","title":"<code>editorial_category_id = sgqlc.types.Field('StringFilter', graphql_name='editorialCategoryId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemFilter.episode_number","title":"<code>episode_number = sgqlc.types.Field(IntFilter, graphql_name='episodeNumber')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemFilter.external_id","title":"<code>external_id = sgqlc.types.Field('StringFilter', graphql_name='externalId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemFilter.external_ids","title":"<code>external_ids = sgqlc.types.Field('StringListFilter', graphql_name='externalIds')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemFilter.feed_document","title":"<code>feed_document = sgqlc.types.Field('JSONFilter', graphql_name='feedDocument')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemFilter.feed_document_modified_at","title":"<code>feed_document_modified_at = sgqlc.types.Field(BigIntFilter, graphql_name='feedDocumentModifiedAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemFilter.first_publish_date","title":"<code>first_publish_date = sgqlc.types.Field(DatetimeFilter, graphql_name='firstPublishDate')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemFilter.group_id","title":"<code>group_id = sgqlc.types.Field('StringFilter', graphql_name='groupId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemFilter.id","title":"<code>id = sgqlc.types.Field(IntFilter, graphql_name='id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemFilter.image","title":"<code>image = sgqlc.types.Field(ImageTypeFilter, graphql_name='image')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemFilter.image_collection_id","title":"<code>image_collection_id = sgqlc.types.Field('StringFilter', graphql_name='imageCollectionId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemFilter.is_published","title":"<code>is_published = sgqlc.types.Field(BooleanFilter, graphql_name='isPublished')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemFilter.item_type","title":"<code>item_type = sgqlc.types.Field('ItemTypeFilter', graphql_name='itemType')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemFilter.max_group_number","title":"<code>max_group_number = sgqlc.types.Field(IntFilter, graphql_name='maxGroupNumber')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemFilter.not_","title":"<code>not_ = sgqlc.types.Field('ItemFilter', graphql_name='not')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemFilter.or_","title":"<code>or_ = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('ItemFilter')), graphql_name='or')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemFilter.program_set_id","title":"<code>program_set_id = sgqlc.types.Field(IntFilter, graphql_name='programSetId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemFilter.publish_date","title":"<code>publish_date = sgqlc.types.Field(DatetimeFilter, graphql_name='publishDate')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemFilter.show_id","title":"<code>show_id = sgqlc.types.Field('StringFilter', graphql_name='showId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemFilter.status","title":"<code>status = sgqlc.types.Field('StatusFilter', graphql_name='status')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemFilter.title","title":"<code>title = sgqlc.types.Field('StringFilter', graphql_name='title')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemFilter.title_without_number","title":"<code>title_without_number = sgqlc.types.Field('StringFilter', graphql_name='titleWithoutNumber')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemFilterB","title":"<code>ItemFilterB</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class ItemFilterB(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('id',)\n    id = sgqlc.types.Field(IntFilterB, graphql_name='id')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemFilterB.__field_names__","title":"<code>__field_names__ = ('id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemFilterB.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemFilterB.id","title":"<code>id = sgqlc.types.Field(IntFilterB, graphql_name='id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemRecVariant","title":"<code>ItemRecVariant</code>","text":"<p>         Bases: <code>sgqlc.types.Enum</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class ItemRecVariant(sgqlc.types.Enum):\n    __schema__ = audiothek_schema\n    __choices__ = ('DETAIL_1', 'DETAIL_2', 'NOT_FOUND')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemRecVariant.__choices__","title":"<code>__choices__ = ('DETAIL_1', 'DETAIL_2', 'NOT_FOUND')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemRecVariant.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemRelationFilterB","title":"<code>ItemRelationFilterB</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class ItemRelationFilterB(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('id',)\n    id = sgqlc.types.Field(IntFilterB, graphql_name='id')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemRelationFilterB.__field_names__","title":"<code>__field_names__ = ('id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemRelationFilterB.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemRelationFilterB.id","title":"<code>id = sgqlc.types.Field(IntFilterB, graphql_name='id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemSection","title":"<code>ItemSection</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code>, <code>Section</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class ItemSection(sgqlc.types.Type, Section):\n    __schema__ = audiothek_schema\n    __field_names__ = ('key',)\n    key = sgqlc.types.Field(String, graphql_name='key')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemSection.__field_names__","title":"<code>__field_names__ = ('key')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemSection.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemSection.key","title":"<code>key = sgqlc.types.Field(String, graphql_name='key')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemSortOrder","title":"<code>ItemSortOrder</code>","text":"<p>         Bases: <code>sgqlc.types.Enum</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class ItemSortOrder(sgqlc.types.Enum):\n    __schema__ = audiothek_schema\n    __choices__ = ('ID_ASC', 'ID_DESC')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemSortOrder.__choices__","title":"<code>__choices__ = ('ID_ASC', 'ID_DESC')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemSortOrder.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemType","title":"<code>ItemType</code>","text":"<p>         Bases: <code>sgqlc.types.Enum</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class ItemType(sgqlc.types.Enum):\n    __schema__ = audiothek_schema\n    __choices__ = ('EPISODE', 'EVENT_LIVESTREAM', 'EXTRA', 'SECTION')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemType.__choices__","title":"<code>__choices__ = ('EPISODE', 'EVENT_LIVESTREAM', 'EXTRA', 'SECTION')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemType.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemTypeFilter","title":"<code>ItemTypeFilter</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class ItemTypeFilter(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('is_null', 'equal_to', 'not_equal_to', 'distinct_from', 'not_distinct_from',\n                       'in_', 'not_in', 'less_than', 'less_than_or_equal_to', 'greater_than', 'greater_than_or_equal_to')\n    is_null = sgqlc.types.Field(Boolean, graphql_name='isNull')\n    equal_to = sgqlc.types.Field(ItemType, graphql_name='equalTo')\n    not_equal_to = sgqlc.types.Field(ItemType, graphql_name='notEqualTo')\n    distinct_from = sgqlc.types.Field(ItemType, graphql_name='distinctFrom')\n    not_distinct_from = sgqlc.types.Field(\n        ItemType, graphql_name='notDistinctFrom')\n    in_ = sgqlc.types.Field(sgqlc.types.list_of(\n        sgqlc.types.non_null(ItemType)), graphql_name='in')\n    not_in = sgqlc.types.Field(sgqlc.types.list_of(\n        sgqlc.types.non_null(ItemType)), graphql_name='notIn')\n    less_than = sgqlc.types.Field(ItemType, graphql_name='lessThan')\n    less_than_or_equal_to = sgqlc.types.Field(\n        ItemType, graphql_name='lessThanOrEqualTo')\n    greater_than = sgqlc.types.Field(ItemType, graphql_name='greaterThan')\n    greater_than_or_equal_to = sgqlc.types.Field(\n        ItemType, graphql_name='greaterThanOrEqualTo')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemTypeFilter.__field_names__","title":"<code>__field_names__ = ('is_null', 'equal_to', 'not_equal_to', 'distinct_from', 'not_distinct_from', 'in_', 'not_in', 'less_than', 'less_than_or_equal_to', 'greater_than', 'greater_than_or_equal_to')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemTypeFilter.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemTypeFilter.distinct_from","title":"<code>distinct_from = sgqlc.types.Field(ItemType, graphql_name='distinctFrom')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemTypeFilter.equal_to","title":"<code>equal_to = sgqlc.types.Field(ItemType, graphql_name='equalTo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemTypeFilter.greater_than","title":"<code>greater_than = sgqlc.types.Field(ItemType, graphql_name='greaterThan')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemTypeFilter.greater_than_or_equal_to","title":"<code>greater_than_or_equal_to = sgqlc.types.Field(ItemType, graphql_name='greaterThanOrEqualTo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemTypeFilter.in_","title":"<code>in_ = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null(ItemType)), graphql_name='in')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemTypeFilter.is_null","title":"<code>is_null = sgqlc.types.Field(Boolean, graphql_name='isNull')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemTypeFilter.less_than","title":"<code>less_than = sgqlc.types.Field(ItemType, graphql_name='lessThan')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemTypeFilter.less_than_or_equal_to","title":"<code>less_than_or_equal_to = sgqlc.types.Field(ItemType, graphql_name='lessThanOrEqualTo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemTypeFilter.not_distinct_from","title":"<code>not_distinct_from = sgqlc.types.Field(ItemType, graphql_name='notDistinctFrom')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemTypeFilter.not_equal_to","title":"<code>not_equal_to = sgqlc.types.Field(ItemType, graphql_name='notEqualTo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemTypeFilter.not_in","title":"<code>not_in = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null(ItemType)), graphql_name='notIn')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemsConnection","title":"<code>ItemsConnection</code>","text":"<p>         Bases: <code>sgqlc.types.relay.Connection</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class ItemsConnection(sgqlc.types.relay.Connection):\n    __schema__ = audiothek_schema\n    __field_names__ = ('nodes', 'edges', 'page_info', 'total_count')\n    nodes = sgqlc.types.Field(sgqlc.types.non_null(\n        sgqlc.types.list_of(sgqlc.types.non_null('Item'))), graphql_name='nodes')\n    edges = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(\n        sgqlc.types.non_null('ItemsEdge'))), graphql_name='edges')\n    page_info = sgqlc.types.Field(sgqlc.types.non_null(\n        'PageInfo'), graphql_name='pageInfo')\n    total_count = sgqlc.types.Field(\n        sgqlc.types.non_null(Int), graphql_name='totalCount')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemsConnection.__field_names__","title":"<code>__field_names__ = ('nodes', 'edges', 'page_info', 'total_count')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemsConnection.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemsConnection.edges","title":"<code>edges = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('ItemsEdge'))), graphql_name='edges')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemsConnection.nodes","title":"<code>nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('Item'))), graphql_name='nodes')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemsConnection.page_info","title":"<code>page_info = sgqlc.types.Field(sgqlc.types.non_null('PageInfo'), graphql_name='pageInfo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemsConnection.total_count","title":"<code>total_count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='totalCount')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemsEdge","title":"<code>ItemsEdge</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class ItemsEdge(sgqlc.types.Type):\n    __schema__ = audiothek_schema\n    __field_names__ = ('cursor', 'node')\n    cursor = sgqlc.types.Field(Cursor, graphql_name='cursor')\n    node = sgqlc.types.Field(sgqlc.types.non_null('Item'), graphql_name='node')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemsEdge.__field_names__","title":"<code>__field_names__ = ('cursor', 'node')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemsEdge.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemsEdge.cursor","title":"<code>cursor = sgqlc.types.Field(Cursor, graphql_name='cursor')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemsEdge.node","title":"<code>node = sgqlc.types.Field(sgqlc.types.non_null('Item'), graphql_name='node')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemsOrderBy","title":"<code>ItemsOrderBy</code>","text":"<p>         Bases: <code>sgqlc.types.Enum</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class ItemsOrderBy(sgqlc.types.Enum):\n    __schema__ = audiothek_schema\n    __choices__ = ('AUDIO_BINARY_ID_ASC', 'AUDIO_BINARY_ID_DESC', 'BACKEND_DOCUMENT_ASC', 'BACKEND_DOCUMENT_DESC', 'BACKEND_DOCUMENT_HASH_ASC', 'BACKEND_DOCUMENT_HASH_DESC', 'CODEX_LAST_PUBLISHED_ASC', 'CODEX_LAST_PUBLISHED_DESC', 'CODEX_PENDING_ASC', 'CODEX_PENDING_DESC', 'CORE_DOCUMENT_ASC', 'CORE_DOCUMENT_DESC', 'CORE_ID_ASC', 'CORE_ID_DESC', 'DEPUBLISHED_AT_ASC', 'DEPUBLISHED_AT_DESC', 'EDITORIAL_CATEGORY_ID_ASC', 'EDITORIAL_CATEGORY_ID_DESC', 'EPISODE_NUMBER_ASC', 'EPISODE_NUMBER_DESC', 'EXTERNAL_IDS_ASC', 'EXTERNAL_IDS_DESC', 'EXTERNAL_ID_ASC', 'EXTERNAL_ID_DESC', 'FEED_DOCUMENT_ASC', 'FEED_DOCUMENT_DESC', 'FEED_DOCUMENT_MODIFIED_AT_ASC',\n                   'FEED_DOCUMENT_MODIFIED_AT_DESC', 'FIRST_PUBLISH_DATE_ASC', 'FIRST_PUBLISH_DATE_DESC', 'GROUP_ID_ASC', 'GROUP_ID_DESC', 'ID_ASC', 'ID_DESC', 'IMAGE_ASC', 'IMAGE_COLLECTION_ID_ASC', 'IMAGE_COLLECTION_ID_DESC', 'IMAGE_DESC', 'IS_PUBLISHED_ASC', 'IS_PUBLISHED_DESC', 'ITEM_TYPE_ASC', 'ITEM_TYPE_DESC', 'MAX_GROUP_NUMBER_ASC', 'MAX_GROUP_NUMBER_DESC', 'NATURAL', 'PRIMARY_KEY_ASC', 'PRIMARY_KEY_DESC', 'PROGRAM_SET_ID_ASC', 'PROGRAM_SET_ID_DESC', 'PUBLISH_DATE_ASC', 'PUBLISH_DATE_DESC', 'SHOW_ID_ASC', 'SHOW_ID_DESC', 'STATUS_ASC', 'STATUS_DESC', 'TITLE_ASC', 'TITLE_DESC', 'TITLE_WITHOUT_NUMBER_ASC', 'TITLE_WITHOUT_NUMBER_DESC')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemsOrderBy.__choices__","title":"<code>__choices__ = ('AUDIO_BINARY_ID_ASC', 'AUDIO_BINARY_ID_DESC', 'BACKEND_DOCUMENT_ASC', 'BACKEND_DOCUMENT_DESC', 'BACKEND_DOCUMENT_HASH_ASC', 'BACKEND_DOCUMENT_HASH_DESC', 'CODEX_LAST_PUBLISHED_ASC', 'CODEX_LAST_PUBLISHED_DESC', 'CODEX_PENDING_ASC', 'CODEX_PENDING_DESC', 'CORE_DOCUMENT_ASC', 'CORE_DOCUMENT_DESC', 'CORE_ID_ASC', 'CORE_ID_DESC', 'DEPUBLISHED_AT_ASC', 'DEPUBLISHED_AT_DESC', 'EDITORIAL_CATEGORY_ID_ASC', 'EDITORIAL_CATEGORY_ID_DESC', 'EPISODE_NUMBER_ASC', 'EPISODE_NUMBER_DESC', 'EXTERNAL_IDS_ASC', 'EXTERNAL_IDS_DESC', 'EXTERNAL_ID_ASC', 'EXTERNAL_ID_DESC', 'FEED_DOCUMENT_ASC', 'FEED_DOCUMENT_DESC', 'FEED_DOCUMENT_MODIFIED_AT_ASC', 'FEED_DOCUMENT_MODIFIED_AT_DESC', 'FIRST_PUBLISH_DATE_ASC', 'FIRST_PUBLISH_DATE_DESC', 'GROUP_ID_ASC', 'GROUP_ID_DESC', 'ID_ASC', 'ID_DESC', 'IMAGE_ASC', 'IMAGE_COLLECTION_ID_ASC', 'IMAGE_COLLECTION_ID_DESC', 'IMAGE_DESC', 'IS_PUBLISHED_ASC', 'IS_PUBLISHED_DESC', 'ITEM_TYPE_ASC', 'ITEM_TYPE_DESC', 'MAX_GROUP_NUMBER_ASC', 'MAX_GROUP_NUMBER_DESC', 'NATURAL', 'PRIMARY_KEY_ASC', 'PRIMARY_KEY_DESC', 'PROGRAM_SET_ID_ASC', 'PROGRAM_SET_ID_DESC', 'PUBLISH_DATE_ASC', 'PUBLISH_DATE_DESC', 'SHOW_ID_ASC', 'SHOW_ID_DESC', 'STATUS_ASC', 'STATUS_DESC', 'TITLE_ASC', 'TITLE_DESC', 'TITLE_WITHOUT_NUMBER_ASC', 'TITLE_WITHOUT_NUMBER_DESC')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemsOrderBy.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemsSearchConnection","title":"<code>ItemsSearchConnection</code>","text":"<p>         Bases: <code>sgqlc.types.relay.Connection</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class ItemsSearchConnection(sgqlc.types.relay.Connection):\n    __schema__ = audiothek_schema\n    __field_names__ = ('page_info', 'total_count', 'nodes')\n    page_info = sgqlc.types.Field('PageInfo', graphql_name='pageInfo')\n    total_count = sgqlc.types.Field(\n        sgqlc.types.non_null(Int), graphql_name='totalCount')\n    nodes = sgqlc.types.Field(sgqlc.types.non_null(\n        sgqlc.types.list_of(sgqlc.types.non_null('Item'))), graphql_name='nodes')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemsSearchConnection.__field_names__","title":"<code>__field_names__ = ('page_info', 'total_count', 'nodes')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemsSearchConnection.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemsSearchConnection.nodes","title":"<code>nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('Item'))), graphql_name='nodes')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemsSearchConnection.page_info","title":"<code>page_info = sgqlc.types.Field('PageInfo', graphql_name='pageInfo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ItemsSearchConnection.total_count","title":"<code>total_count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='totalCount')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.JSON","title":"<code>JSON</code>","text":"<p>         Bases: <code>sgqlc.types.Scalar</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class JSON(sgqlc.types.Scalar):\n    __schema__ = audiothek_schema\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.JSON.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.JSONFilter","title":"<code>JSONFilter</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class JSONFilter(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('is_null', 'equal_to', 'not_equal_to', 'distinct_from', 'not_distinct_from', 'in_', 'not_in', 'less_than', 'less_than_or_equal_to',\n                       'greater_than', 'greater_than_or_equal_to', 'contains', 'contains_key', 'contains_all_keys', 'contains_any_keys', 'contained_by')\n    is_null = sgqlc.types.Field(Boolean, graphql_name='isNull')\n    equal_to = sgqlc.types.Field(JSON, graphql_name='equalTo')\n    not_equal_to = sgqlc.types.Field(JSON, graphql_name='notEqualTo')\n    distinct_from = sgqlc.types.Field(JSON, graphql_name='distinctFrom')\n    not_distinct_from = sgqlc.types.Field(JSON, graphql_name='notDistinctFrom')\n    in_ = sgqlc.types.Field(sgqlc.types.list_of(\n        sgqlc.types.non_null(JSON)), graphql_name='in')\n    not_in = sgqlc.types.Field(sgqlc.types.list_of(\n        sgqlc.types.non_null(JSON)), graphql_name='notIn')\n    less_than = sgqlc.types.Field(JSON, graphql_name='lessThan')\n    less_than_or_equal_to = sgqlc.types.Field(\n        JSON, graphql_name='lessThanOrEqualTo')\n    greater_than = sgqlc.types.Field(JSON, graphql_name='greaterThan')\n    greater_than_or_equal_to = sgqlc.types.Field(\n        JSON, graphql_name='greaterThanOrEqualTo')\n    contains = sgqlc.types.Field(JSON, graphql_name='contains')\n    contains_key = sgqlc.types.Field(String, graphql_name='containsKey')\n    contains_all_keys = sgqlc.types.Field(sgqlc.types.list_of(\n        sgqlc.types.non_null(String)), graphql_name='containsAllKeys')\n    contains_any_keys = sgqlc.types.Field(sgqlc.types.list_of(\n        sgqlc.types.non_null(String)), graphql_name='containsAnyKeys')\n    contained_by = sgqlc.types.Field(JSON, graphql_name='containedBy')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.JSONFilter.__field_names__","title":"<code>__field_names__ = ('is_null', 'equal_to', 'not_equal_to', 'distinct_from', 'not_distinct_from', 'in_', 'not_in', 'less_than', 'less_than_or_equal_to', 'greater_than', 'greater_than_or_equal_to', 'contains', 'contains_key', 'contains_all_keys', 'contains_any_keys', 'contained_by')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.JSONFilter.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.JSONFilter.contained_by","title":"<code>contained_by = sgqlc.types.Field(JSON, graphql_name='containedBy')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.JSONFilter.contains","title":"<code>contains = sgqlc.types.Field(JSON, graphql_name='contains')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.JSONFilter.contains_all_keys","title":"<code>contains_all_keys = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null(String)), graphql_name='containsAllKeys')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.JSONFilter.contains_any_keys","title":"<code>contains_any_keys = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null(String)), graphql_name='containsAnyKeys')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.JSONFilter.contains_key","title":"<code>contains_key = sgqlc.types.Field(String, graphql_name='containsKey')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.JSONFilter.distinct_from","title":"<code>distinct_from = sgqlc.types.Field(JSON, graphql_name='distinctFrom')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.JSONFilter.equal_to","title":"<code>equal_to = sgqlc.types.Field(JSON, graphql_name='equalTo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.JSONFilter.greater_than","title":"<code>greater_than = sgqlc.types.Field(JSON, graphql_name='greaterThan')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.JSONFilter.greater_than_or_equal_to","title":"<code>greater_than_or_equal_to = sgqlc.types.Field(JSON, graphql_name='greaterThanOrEqualTo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.JSONFilter.in_","title":"<code>in_ = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null(JSON)), graphql_name='in')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.JSONFilter.is_null","title":"<code>is_null = sgqlc.types.Field(Boolean, graphql_name='isNull')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.JSONFilter.less_than","title":"<code>less_than = sgqlc.types.Field(JSON, graphql_name='lessThan')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.JSONFilter.less_than_or_equal_to","title":"<code>less_than_or_equal_to = sgqlc.types.Field(JSON, graphql_name='lessThanOrEqualTo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.JSONFilter.not_distinct_from","title":"<code>not_distinct_from = sgqlc.types.Field(JSON, graphql_name='notDistinctFrom')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.JSONFilter.not_equal_to","title":"<code>not_equal_to = sgqlc.types.Field(JSON, graphql_name='notEqualTo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.JSONFilter.not_in","title":"<code>not_in = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null(JSON)), graphql_name='notIn')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Migration","title":"<code>Migration</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code>, <code>Node</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class Migration(sgqlc.types.Type, Node):\n    __schema__ = audiothek_schema\n    __field_names__ = ('row_id', 'name', 'hash', 'executed_at')\n    row_id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='rowId')\n    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')\n    hash = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='hash')\n    executed_at = sgqlc.types.Field(Datetime, graphql_name='executedAt')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Migration.__field_names__","title":"<code>__field_names__ = ('row_id', 'name', 'hash', 'executed_at')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Migration.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Migration.executed_at","title":"<code>executed_at = sgqlc.types.Field(Datetime, graphql_name='executedAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Migration.hash","title":"<code>hash = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='hash')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Migration.name","title":"<code>name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Migration.row_id","title":"<code>row_id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='rowId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.MigrationCondition","title":"<code>MigrationCondition</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class MigrationCondition(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('id', 'name', 'hash', 'executed_at')\n    id = sgqlc.types.Field(Int, graphql_name='id')\n    name = sgqlc.types.Field(String, graphql_name='name')\n    hash = sgqlc.types.Field(String, graphql_name='hash')\n    executed_at = sgqlc.types.Field(Datetime, graphql_name='executedAt')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.MigrationCondition.__field_names__","title":"<code>__field_names__ = ('id', 'name', 'hash', 'executed_at')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.MigrationCondition.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.MigrationCondition.executed_at","title":"<code>executed_at = sgqlc.types.Field(Datetime, graphql_name='executedAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.MigrationCondition.hash","title":"<code>hash = sgqlc.types.Field(String, graphql_name='hash')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.MigrationCondition.id","title":"<code>id = sgqlc.types.Field(Int, graphql_name='id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.MigrationCondition.name","title":"<code>name = sgqlc.types.Field(String, graphql_name='name')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.MigrationFilter","title":"<code>MigrationFilter</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class MigrationFilter(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('id', 'name', 'hash', 'executed_at',\n                       'and_', 'or_', 'not_')\n    id = sgqlc.types.Field(IntFilter, graphql_name='id')\n    name = sgqlc.types.Field('StringFilter', graphql_name='name')\n    hash = sgqlc.types.Field('StringFilter', graphql_name='hash')\n    executed_at = sgqlc.types.Field(DatetimeFilter, graphql_name='executedAt')\n    and_ = sgqlc.types.Field(sgqlc.types.list_of(\n        sgqlc.types.non_null('MigrationFilter')), graphql_name='and')\n    or_ = sgqlc.types.Field(sgqlc.types.list_of(\n        sgqlc.types.non_null('MigrationFilter')), graphql_name='or')\n    not_ = sgqlc.types.Field('MigrationFilter', graphql_name='not')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.MigrationFilter.__field_names__","title":"<code>__field_names__ = ('id', 'name', 'hash', 'executed_at', 'and_', 'or_', 'not_')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.MigrationFilter.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.MigrationFilter.and_","title":"<code>and_ = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('MigrationFilter')), graphql_name='and')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.MigrationFilter.executed_at","title":"<code>executed_at = sgqlc.types.Field(DatetimeFilter, graphql_name='executedAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.MigrationFilter.hash","title":"<code>hash = sgqlc.types.Field('StringFilter', graphql_name='hash')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.MigrationFilter.id","title":"<code>id = sgqlc.types.Field(IntFilter, graphql_name='id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.MigrationFilter.name","title":"<code>name = sgqlc.types.Field('StringFilter', graphql_name='name')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.MigrationFilter.not_","title":"<code>not_ = sgqlc.types.Field('MigrationFilter', graphql_name='not')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.MigrationFilter.or_","title":"<code>or_ = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('MigrationFilter')), graphql_name='or')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.MigrationsConnection","title":"<code>MigrationsConnection</code>","text":"<p>         Bases: <code>sgqlc.types.relay.Connection</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class MigrationsConnection(sgqlc.types.relay.Connection):\n    __schema__ = audiothek_schema\n    __field_names__ = ('nodes', 'edges', 'page_info', 'total_count')\n    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(\n        sgqlc.types.non_null('Migration'))), graphql_name='nodes')\n    edges = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(\n        sgqlc.types.non_null('MigrationsEdge'))), graphql_name='edges')\n    page_info = sgqlc.types.Field(sgqlc.types.non_null(\n        'PageInfo'), graphql_name='pageInfo')\n    total_count = sgqlc.types.Field(\n        sgqlc.types.non_null(Int), graphql_name='totalCount')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.MigrationsConnection.__field_names__","title":"<code>__field_names__ = ('nodes', 'edges', 'page_info', 'total_count')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.MigrationsConnection.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.MigrationsConnection.edges","title":"<code>edges = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('MigrationsEdge'))), graphql_name='edges')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.MigrationsConnection.nodes","title":"<code>nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('Migration'))), graphql_name='nodes')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.MigrationsConnection.page_info","title":"<code>page_info = sgqlc.types.Field(sgqlc.types.non_null('PageInfo'), graphql_name='pageInfo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.MigrationsConnection.total_count","title":"<code>total_count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='totalCount')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.MigrationsEdge","title":"<code>MigrationsEdge</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class MigrationsEdge(sgqlc.types.Type):\n    __schema__ = audiothek_schema\n    __field_names__ = ('cursor', 'node')\n    cursor = sgqlc.types.Field(Cursor, graphql_name='cursor')\n    node = sgqlc.types.Field(sgqlc.types.non_null(\n        'Migration'), graphql_name='node')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.MigrationsEdge.__field_names__","title":"<code>__field_names__ = ('cursor', 'node')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.MigrationsEdge.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.MigrationsEdge.cursor","title":"<code>cursor = sgqlc.types.Field(Cursor, graphql_name='cursor')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.MigrationsEdge.node","title":"<code>node = sgqlc.types.Field(sgqlc.types.non_null('Migration'), graphql_name='node')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.MigrationsOrderBy","title":"<code>MigrationsOrderBy</code>","text":"<p>         Bases: <code>sgqlc.types.Enum</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class MigrationsOrderBy(sgqlc.types.Enum):\n    __schema__ = audiothek_schema\n    __choices__ = ('EXECUTED_AT_ASC', 'EXECUTED_AT_DESC', 'HASH_ASC', 'HASH_DESC', 'ID_ASC',\n                   'ID_DESC', 'NAME_ASC', 'NAME_DESC', 'NATURAL', 'PRIMARY_KEY_ASC', 'PRIMARY_KEY_DESC')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.MigrationsOrderBy.__choices__","title":"<code>__choices__ = ('EXECUTED_AT_ASC', 'EXECUTED_AT_DESC', 'HASH_ASC', 'HASH_DESC', 'ID_ASC', 'ID_DESC', 'NAME_ASC', 'NAME_DESC', 'NATURAL', 'PRIMARY_KEY_ASC', 'PRIMARY_KEY_DESC')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.MigrationsOrderBy.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Mutation","title":"<code>Mutation</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class Mutation(sgqlc.types.Type):\n    __schema__ = audiothek_schema\n    __field_names__ = ('delete_history_entry_by_item', 'update_program_set_subscription_by_program_set', 'sync_user_data', 'update_bookmark', 'create_bookmark_list', 'update_bookmark_list', 'add_entry_to_bookmark_list', 'remove_entry_from_bookmark_list', 'remove_all_entries_from_bookmark_list', 'create_end_user', 'upsert_end_user', 'update_end_user', 'create_history_entry', 'upsert_history_entry', 'update_history_entry', 'create_playlist', 'update_playlist', 'add_entry_to_playlist',\n                       'remove_entry_from_playlist', 'remove_all_entries_from_playlist', 'update_program_set_subscription', 'create_property', 'update_property', 'create_queue', 'update_queue', 'add_entry_to_queue', 'remove_entry_from_queue', 'remove_all_entries_from_queue', 'create_subscription_list', 'update_subscription_list', 'add_program_set_to_subscription_list', 'remove_program_set_from_subscription_list', 'remove_all_program_sets_from_subscription_list', 'delete_history_entry', 'delete_playlist')\n    delete_history_entry_by_item = sgqlc.types.Field(DeletePayload, graphql_name='deleteHistoryEntryByItem', args=sgqlc.types.ArgDict((\n        ('input', sgqlc.types.Arg(DeleteHistoryEntryByItemInput,\n         graphql_name='input', default=None)),\n    ))\n    )\n    update_program_set_subscription_by_program_set = sgqlc.types.Field('ProgramSetSubscriptionPayload', graphql_name='updateProgramSetSubscriptionByProgramSet', args=sgqlc.types.ArgDict((\n        ('input', sgqlc.types.Arg(ProgramSetSubscriptionUpdateByProgramSetIdInput,\n         graphql_name='input', default=None)),\n    ))\n    )\n    sync_user_data = sgqlc.types.Field(EndUserPayload, graphql_name='syncUserData', args=sgqlc.types.ArgDict((\n        ('input', sgqlc.types.Arg(EndUserSyncInput, graphql_name='input', default=None)),\n    ))\n    )\n    update_bookmark = sgqlc.types.Field(BookmarkPayload, graphql_name='updateBookmark', args=sgqlc.types.ArgDict((\n        ('input', sgqlc.types.Arg(sgqlc.types.non_null(\n            BookmarkUpdateInput), graphql_name='input', default=None)),\n    ))\n    )\n    create_bookmark_list = sgqlc.types.Field(BookmarkListPayload, graphql_name='createBookmarkList', args=sgqlc.types.ArgDict((\n        ('input', sgqlc.types.Arg(sgqlc.types.non_null(\n            BookmarkListCreateInput), graphql_name='input', default=None)),\n    ))\n    )\n    update_bookmark_list = sgqlc.types.Field(BookmarkListPayload, graphql_name='updateBookmarkList', args=sgqlc.types.ArgDict((\n        ('input', sgqlc.types.Arg(sgqlc.types.non_null(\n            BookmarkListUpdateInput), graphql_name='input', default=None)),\n    ))\n    )\n    add_entry_to_bookmark_list = sgqlc.types.Field(BookmarkListPayload, graphql_name='addEntryToBookmarkList', args=sgqlc.types.ArgDict((\n        ('input', sgqlc.types.Arg(sgqlc.types.non_null(\n            BookmarkListEntryListInput), graphql_name='input', default=None)),\n    ))\n    )\n    remove_entry_from_bookmark_list = sgqlc.types.Field(BookmarkListPayload, graphql_name='removeEntryFromBookmarkList', args=sgqlc.types.ArgDict((\n        ('input', sgqlc.types.Arg(sgqlc.types.non_null(\n            BookmarkListEntryListInput), graphql_name='input', default=None)),\n    ))\n    )\n    remove_all_entries_from_bookmark_list = sgqlc.types.Field(BookmarkListPayload, graphql_name='removeAllEntriesFromBookmarkList', args=sgqlc.types.ArgDict((\n        ('input', sgqlc.types.Arg(sgqlc.types.non_null(\n            BookmarkListRemoveAllListInput), graphql_name='input', default=None)),\n    ))\n    )\n    create_end_user = sgqlc.types.Field(EndUserPayload, graphql_name='createEndUser', args=sgqlc.types.ArgDict((\n        ('input', sgqlc.types.Arg(sgqlc.types.non_null(\n            EndUserCreateInput), graphql_name='input', default=None)),\n    ))\n    )\n    upsert_end_user = sgqlc.types.Field(EndUserPayload, graphql_name='upsertEndUser', args=sgqlc.types.ArgDict((\n        ('input', sgqlc.types.Arg(sgqlc.types.non_null(\n            EndUserCreateInput), graphql_name='input', default=None)),\n    ))\n    )\n    update_end_user = sgqlc.types.Field(EndUserPayload, graphql_name='updateEndUser', args=sgqlc.types.ArgDict((\n        ('input', sgqlc.types.Arg(sgqlc.types.non_null(\n            EndUserUpdateInput), graphql_name='input', default=None)),\n    ))\n    )\n    create_history_entry = sgqlc.types.Field(HistoryEntryPayload, graphql_name='createHistoryEntry', args=sgqlc.types.ArgDict((\n        ('input', sgqlc.types.Arg(sgqlc.types.non_null(\n            HistoryEntryCreateInput), graphql_name='input', default=None)),\n    ))\n    )\n    upsert_history_entry = sgqlc.types.Field(HistoryEntryPayload, graphql_name='upsertHistoryEntry', args=sgqlc.types.ArgDict((\n        ('input', sgqlc.types.Arg(sgqlc.types.non_null(\n            HistoryEntryCreateInput), graphql_name='input', default=None)),\n    ))\n    )\n    update_history_entry = sgqlc.types.Field(HistoryEntryPayload, graphql_name='updateHistoryEntry', args=sgqlc.types.ArgDict((\n        ('input', sgqlc.types.Arg(sgqlc.types.non_null(\n            HistoryEntryUpdateInput), graphql_name='input', default=None)),\n    ))\n    )\n    create_playlist = sgqlc.types.Field('PlaylistPayload', graphql_name='createPlaylist', args=sgqlc.types.ArgDict((\n        ('input', sgqlc.types.Arg(sgqlc.types.non_null(\n            PlaylistCreateInput), graphql_name='input', default=None)),\n    ))\n    )\n    update_playlist = sgqlc.types.Field('PlaylistPayload', graphql_name='updatePlaylist', args=sgqlc.types.ArgDict((\n        ('input', sgqlc.types.Arg(sgqlc.types.non_null(\n            PlaylistUpdateInput), graphql_name='input', default=None)),\n    ))\n    )\n    add_entry_to_playlist = sgqlc.types.Field('PlaylistPayload', graphql_name='addEntryToPlaylist', args=sgqlc.types.ArgDict((\n        ('input', sgqlc.types.Arg(sgqlc.types.non_null(\n            PlaylistEntryListInput), graphql_name='input', default=None)),\n    ))\n    )\n    remove_entry_from_playlist = sgqlc.types.Field('PlaylistPayload', graphql_name='removeEntryFromPlaylist', args=sgqlc.types.ArgDict((\n        ('input', sgqlc.types.Arg(sgqlc.types.non_null(\n            PlaylistEntryListInput), graphql_name='input', default=None)),\n    ))\n    )\n    remove_all_entries_from_playlist = sgqlc.types.Field('PlaylistPayload', graphql_name='removeAllEntriesFromPlaylist', args=sgqlc.types.ArgDict((\n        ('input', sgqlc.types.Arg(sgqlc.types.non_null(\n            PlaylistRemoveAllListInput), graphql_name='input', default=None)),\n    ))\n    )\n    update_program_set_subscription = sgqlc.types.Field('ProgramSetSubscriptionPayload', graphql_name='updateProgramSetSubscription', args=sgqlc.types.ArgDict((\n        ('input', sgqlc.types.Arg(sgqlc.types.non_null(\n            ProgramSetSubscriptionUpdateInput), graphql_name='input', default=None)),\n    ))\n    )\n    create_property = sgqlc.types.Field('PropertyPayload', graphql_name='createProperty', args=sgqlc.types.ArgDict((\n        ('input', sgqlc.types.Arg(sgqlc.types.non_null(\n            PropertyCreateInput), graphql_name='input', default=None)),\n    ))\n    )\n    update_property = sgqlc.types.Field('PropertyPayload', graphql_name='updateProperty', args=sgqlc.types.ArgDict((\n        ('input', sgqlc.types.Arg(sgqlc.types.non_null(\n            PropertyUpdateInput), graphql_name='input', default=None)),\n    ))\n    )\n    create_queue = sgqlc.types.Field('QueuePayload', graphql_name='createQueue', args=sgqlc.types.ArgDict((\n        ('input', sgqlc.types.Arg(sgqlc.types.non_null(\n            QueueCreateInput), graphql_name='input', default=None)),\n    ))\n    )\n    update_queue = sgqlc.types.Field('QueuePayload', graphql_name='updateQueue', args=sgqlc.types.ArgDict((\n        ('input', sgqlc.types.Arg(sgqlc.types.non_null(\n            QueueUpdateInput), graphql_name='input', default=None)),\n    ))\n    )\n    add_entry_to_queue = sgqlc.types.Field('QueuePayload', graphql_name='addEntryToQueue', args=sgqlc.types.ArgDict((\n        ('input', sgqlc.types.Arg(sgqlc.types.non_null(\n            QueueEntryListInput), graphql_name='input', default=None)),\n    ))\n    )\n    remove_entry_from_queue = sgqlc.types.Field('QueuePayload', graphql_name='removeEntryFromQueue', args=sgqlc.types.ArgDict((\n        ('input', sgqlc.types.Arg(sgqlc.types.non_null(\n            QueueEntryListInput), graphql_name='input', default=None)),\n    ))\n    )\n    remove_all_entries_from_queue = sgqlc.types.Field('QueuePayload', graphql_name='removeAllEntriesFromQueue', args=sgqlc.types.ArgDict((\n        ('input', sgqlc.types.Arg(sgqlc.types.non_null(\n            QueueRemoveAllListInput), graphql_name='input', default=None)),\n    ))\n    )\n    create_subscription_list = sgqlc.types.Field('SubscriptionListPayload', graphql_name='createSubscriptionList', args=sgqlc.types.ArgDict((\n        ('input', sgqlc.types.Arg(sgqlc.types.non_null(\n            SubscriptionListCreateInput), graphql_name='input', default=None)),\n    ))\n    )\n    update_subscription_list = sgqlc.types.Field('SubscriptionListPayload', graphql_name='updateSubscriptionList', args=sgqlc.types.ArgDict((\n        ('input', sgqlc.types.Arg(sgqlc.types.non_null(\n            SubscriptionListUpdateInput), graphql_name='input', default=None)),\n    ))\n    )\n    add_program_set_to_subscription_list = sgqlc.types.Field('SubscriptionListPayload', graphql_name='addProgramSetToSubscriptionList', args=sgqlc.types.ArgDict((\n        ('input', sgqlc.types.Arg(sgqlc.types.non_null(\n            SubscriptionListProgramSetListInput), graphql_name='input', default=None)),\n    ))\n    )\n    remove_program_set_from_subscription_list = sgqlc.types.Field('SubscriptionListPayload', graphql_name='removeProgramSetFromSubscriptionList', args=sgqlc.types.ArgDict((\n        ('input', sgqlc.types.Arg(sgqlc.types.non_null(\n            SubscriptionListProgramSetListInput), graphql_name='input', default=None)),\n    ))\n    )\n    remove_all_program_sets_from_subscription_list = sgqlc.types.Field('SubscriptionListPayload', graphql_name='removeAllProgramSetsFromSubscriptionList', args=sgqlc.types.ArgDict((\n        ('input', sgqlc.types.Arg(sgqlc.types.non_null(\n            SubscriptionListRemoveAllListInput), graphql_name='input', default=None)),\n    ))\n    )\n    delete_history_entry = sgqlc.types.Field(DeletePayload, graphql_name='deleteHistoryEntry', args=sgqlc.types.ArgDict((\n        ('input', sgqlc.types.Arg(sgqlc.types.non_null(\n            DeleteInput), graphql_name='input', default=None)),\n    ))\n    )\n    delete_playlist = sgqlc.types.Field(DeletePayload, graphql_name='deletePlaylist', args=sgqlc.types.ArgDict((\n        ('input', sgqlc.types.Arg(sgqlc.types.non_null(\n            DeleteInput), graphql_name='input', default=None)),\n    ))\n    )\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Mutation.__field_names__","title":"<code>__field_names__ = ('delete_history_entry_by_item', 'update_program_set_subscription_by_program_set', 'sync_user_data', 'update_bookmark', 'create_bookmark_list', 'update_bookmark_list', 'add_entry_to_bookmark_list', 'remove_entry_from_bookmark_list', 'remove_all_entries_from_bookmark_list', 'create_end_user', 'upsert_end_user', 'update_end_user', 'create_history_entry', 'upsert_history_entry', 'update_history_entry', 'create_playlist', 'update_playlist', 'add_entry_to_playlist', 'remove_entry_from_playlist', 'remove_all_entries_from_playlist', 'update_program_set_subscription', 'create_property', 'update_property', 'create_queue', 'update_queue', 'add_entry_to_queue', 'remove_entry_from_queue', 'remove_all_entries_from_queue', 'create_subscription_list', 'update_subscription_list', 'add_program_set_to_subscription_list', 'remove_program_set_from_subscription_list', 'remove_all_program_sets_from_subscription_list', 'delete_history_entry', 'delete_playlist')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Mutation.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Mutation.add_entry_to_bookmark_list","title":"<code>add_entry_to_bookmark_list = sgqlc.types.Field(BookmarkListPayload, graphql_name='addEntryToBookmarkList', args=sgqlc.types.ArgDict((('input', sgqlc.types.Arg(sgqlc.types.non_null(BookmarkListEntryListInput), graphql_name='input', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Mutation.add_entry_to_playlist","title":"<code>add_entry_to_playlist = sgqlc.types.Field('PlaylistPayload', graphql_name='addEntryToPlaylist', args=sgqlc.types.ArgDict((('input', sgqlc.types.Arg(sgqlc.types.non_null(PlaylistEntryListInput), graphql_name='input', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Mutation.add_entry_to_queue","title":"<code>add_entry_to_queue = sgqlc.types.Field('QueuePayload', graphql_name='addEntryToQueue', args=sgqlc.types.ArgDict((('input', sgqlc.types.Arg(sgqlc.types.non_null(QueueEntryListInput), graphql_name='input', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Mutation.add_program_set_to_subscription_list","title":"<code>add_program_set_to_subscription_list = sgqlc.types.Field('SubscriptionListPayload', graphql_name='addProgramSetToSubscriptionList', args=sgqlc.types.ArgDict((('input', sgqlc.types.Arg(sgqlc.types.non_null(SubscriptionListProgramSetListInput), graphql_name='input', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Mutation.create_bookmark_list","title":"<code>create_bookmark_list = sgqlc.types.Field(BookmarkListPayload, graphql_name='createBookmarkList', args=sgqlc.types.ArgDict((('input', sgqlc.types.Arg(sgqlc.types.non_null(BookmarkListCreateInput), graphql_name='input', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Mutation.create_end_user","title":"<code>create_end_user = sgqlc.types.Field(EndUserPayload, graphql_name='createEndUser', args=sgqlc.types.ArgDict((('input', sgqlc.types.Arg(sgqlc.types.non_null(EndUserCreateInput), graphql_name='input', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Mutation.create_history_entry","title":"<code>create_history_entry = sgqlc.types.Field(HistoryEntryPayload, graphql_name='createHistoryEntry', args=sgqlc.types.ArgDict((('input', sgqlc.types.Arg(sgqlc.types.non_null(HistoryEntryCreateInput), graphql_name='input', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Mutation.create_playlist","title":"<code>create_playlist = sgqlc.types.Field('PlaylistPayload', graphql_name='createPlaylist', args=sgqlc.types.ArgDict((('input', sgqlc.types.Arg(sgqlc.types.non_null(PlaylistCreateInput), graphql_name='input', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Mutation.create_property","title":"<code>create_property = sgqlc.types.Field('PropertyPayload', graphql_name='createProperty', args=sgqlc.types.ArgDict((('input', sgqlc.types.Arg(sgqlc.types.non_null(PropertyCreateInput), graphql_name='input', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Mutation.create_queue","title":"<code>create_queue = sgqlc.types.Field('QueuePayload', graphql_name='createQueue', args=sgqlc.types.ArgDict((('input', sgqlc.types.Arg(sgqlc.types.non_null(QueueCreateInput), graphql_name='input', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Mutation.create_subscription_list","title":"<code>create_subscription_list = sgqlc.types.Field('SubscriptionListPayload', graphql_name='createSubscriptionList', args=sgqlc.types.ArgDict((('input', sgqlc.types.Arg(sgqlc.types.non_null(SubscriptionListCreateInput), graphql_name='input', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Mutation.delete_history_entry","title":"<code>delete_history_entry = sgqlc.types.Field(DeletePayload, graphql_name='deleteHistoryEntry', args=sgqlc.types.ArgDict((('input', sgqlc.types.Arg(sgqlc.types.non_null(DeleteInput), graphql_name='input', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Mutation.delete_history_entry_by_item","title":"<code>delete_history_entry_by_item = sgqlc.types.Field(DeletePayload, graphql_name='deleteHistoryEntryByItem', args=sgqlc.types.ArgDict((('input', sgqlc.types.Arg(DeleteHistoryEntryByItemInput, graphql_name='input', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Mutation.delete_playlist","title":"<code>delete_playlist = sgqlc.types.Field(DeletePayload, graphql_name='deletePlaylist', args=sgqlc.types.ArgDict((('input', sgqlc.types.Arg(sgqlc.types.non_null(DeleteInput), graphql_name='input', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Mutation.remove_all_entries_from_bookmark_list","title":"<code>remove_all_entries_from_bookmark_list = sgqlc.types.Field(BookmarkListPayload, graphql_name='removeAllEntriesFromBookmarkList', args=sgqlc.types.ArgDict((('input', sgqlc.types.Arg(sgqlc.types.non_null(BookmarkListRemoveAllListInput), graphql_name='input', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Mutation.remove_all_entries_from_playlist","title":"<code>remove_all_entries_from_playlist = sgqlc.types.Field('PlaylistPayload', graphql_name='removeAllEntriesFromPlaylist', args=sgqlc.types.ArgDict((('input', sgqlc.types.Arg(sgqlc.types.non_null(PlaylistRemoveAllListInput), graphql_name='input', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Mutation.remove_all_entries_from_queue","title":"<code>remove_all_entries_from_queue = sgqlc.types.Field('QueuePayload', graphql_name='removeAllEntriesFromQueue', args=sgqlc.types.ArgDict((('input', sgqlc.types.Arg(sgqlc.types.non_null(QueueRemoveAllListInput), graphql_name='input', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Mutation.remove_all_program_sets_from_subscription_list","title":"<code>remove_all_program_sets_from_subscription_list = sgqlc.types.Field('SubscriptionListPayload', graphql_name='removeAllProgramSetsFromSubscriptionList', args=sgqlc.types.ArgDict((('input', sgqlc.types.Arg(sgqlc.types.non_null(SubscriptionListRemoveAllListInput), graphql_name='input', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Mutation.remove_entry_from_bookmark_list","title":"<code>remove_entry_from_bookmark_list = sgqlc.types.Field(BookmarkListPayload, graphql_name='removeEntryFromBookmarkList', args=sgqlc.types.ArgDict((('input', sgqlc.types.Arg(sgqlc.types.non_null(BookmarkListEntryListInput), graphql_name='input', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Mutation.remove_entry_from_playlist","title":"<code>remove_entry_from_playlist = sgqlc.types.Field('PlaylistPayload', graphql_name='removeEntryFromPlaylist', args=sgqlc.types.ArgDict((('input', sgqlc.types.Arg(sgqlc.types.non_null(PlaylistEntryListInput), graphql_name='input', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Mutation.remove_entry_from_queue","title":"<code>remove_entry_from_queue = sgqlc.types.Field('QueuePayload', graphql_name='removeEntryFromQueue', args=sgqlc.types.ArgDict((('input', sgqlc.types.Arg(sgqlc.types.non_null(QueueEntryListInput), graphql_name='input', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Mutation.remove_program_set_from_subscription_list","title":"<code>remove_program_set_from_subscription_list = sgqlc.types.Field('SubscriptionListPayload', graphql_name='removeProgramSetFromSubscriptionList', args=sgqlc.types.ArgDict((('input', sgqlc.types.Arg(sgqlc.types.non_null(SubscriptionListProgramSetListInput), graphql_name='input', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Mutation.sync_user_data","title":"<code>sync_user_data = sgqlc.types.Field(EndUserPayload, graphql_name='syncUserData', args=sgqlc.types.ArgDict((('input', sgqlc.types.Arg(EndUserSyncInput, graphql_name='input', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Mutation.update_bookmark","title":"<code>update_bookmark = sgqlc.types.Field(BookmarkPayload, graphql_name='updateBookmark', args=sgqlc.types.ArgDict((('input', sgqlc.types.Arg(sgqlc.types.non_null(BookmarkUpdateInput), graphql_name='input', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Mutation.update_bookmark_list","title":"<code>update_bookmark_list = sgqlc.types.Field(BookmarkListPayload, graphql_name='updateBookmarkList', args=sgqlc.types.ArgDict((('input', sgqlc.types.Arg(sgqlc.types.non_null(BookmarkListUpdateInput), graphql_name='input', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Mutation.update_end_user","title":"<code>update_end_user = sgqlc.types.Field(EndUserPayload, graphql_name='updateEndUser', args=sgqlc.types.ArgDict((('input', sgqlc.types.Arg(sgqlc.types.non_null(EndUserUpdateInput), graphql_name='input', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Mutation.update_history_entry","title":"<code>update_history_entry = sgqlc.types.Field(HistoryEntryPayload, graphql_name='updateHistoryEntry', args=sgqlc.types.ArgDict((('input', sgqlc.types.Arg(sgqlc.types.non_null(HistoryEntryUpdateInput), graphql_name='input', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Mutation.update_playlist","title":"<code>update_playlist = sgqlc.types.Field('PlaylistPayload', graphql_name='updatePlaylist', args=sgqlc.types.ArgDict((('input', sgqlc.types.Arg(sgqlc.types.non_null(PlaylistUpdateInput), graphql_name='input', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Mutation.update_program_set_subscription","title":"<code>update_program_set_subscription = sgqlc.types.Field('ProgramSetSubscriptionPayload', graphql_name='updateProgramSetSubscription', args=sgqlc.types.ArgDict((('input', sgqlc.types.Arg(sgqlc.types.non_null(ProgramSetSubscriptionUpdateInput), graphql_name='input', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Mutation.update_program_set_subscription_by_program_set","title":"<code>update_program_set_subscription_by_program_set = sgqlc.types.Field('ProgramSetSubscriptionPayload', graphql_name='updateProgramSetSubscriptionByProgramSet', args=sgqlc.types.ArgDict((('input', sgqlc.types.Arg(ProgramSetSubscriptionUpdateByProgramSetIdInput, graphql_name='input', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Mutation.update_property","title":"<code>update_property = sgqlc.types.Field('PropertyPayload', graphql_name='updateProperty', args=sgqlc.types.ArgDict((('input', sgqlc.types.Arg(sgqlc.types.non_null(PropertyUpdateInput), graphql_name='input', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Mutation.update_queue","title":"<code>update_queue = sgqlc.types.Field('QueuePayload', graphql_name='updateQueue', args=sgqlc.types.ArgDict((('input', sgqlc.types.Arg(sgqlc.types.non_null(QueueUpdateInput), graphql_name='input', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Mutation.update_subscription_list","title":"<code>update_subscription_list = sgqlc.types.Field('SubscriptionListPayload', graphql_name='updateSubscriptionList', args=sgqlc.types.ArgDict((('input', sgqlc.types.Arg(sgqlc.types.non_null(SubscriptionListUpdateInput), graphql_name='input', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Mutation.upsert_end_user","title":"<code>upsert_end_user = sgqlc.types.Field(EndUserPayload, graphql_name='upsertEndUser', args=sgqlc.types.ArgDict((('input', sgqlc.types.Arg(sgqlc.types.non_null(EndUserCreateInput), graphql_name='input', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Mutation.upsert_history_entry","title":"<code>upsert_history_entry = sgqlc.types.Field(HistoryEntryPayload, graphql_name='upsertHistoryEntry', args=sgqlc.types.ArgDict((('input', sgqlc.types.Arg(sgqlc.types.non_null(HistoryEntryCreateInput), graphql_name='input', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Node","title":"<code>Node</code>","text":"<p>         Bases: <code>sgqlc.types.Interface</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class Node(sgqlc.types.Interface):\n    __schema__ = audiothek_schema\n    __field_names__ = ('node_id',)\n    node_id = sgqlc.types.Field(\n        sgqlc.types.non_null(ID), graphql_name='nodeId')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Node.__field_names__","title":"<code>__field_names__ = ('node_id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Node.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Node.node_id","title":"<code>node_id = sgqlc.types.Field(sgqlc.types.non_null(ID), graphql_name='nodeId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Organization","title":"<code>Organization</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code>, <code>Node</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class Organization(sgqlc.types.Type, Node):\n    __schema__ = audiothek_schema\n    __field_names__ = ('row_id', 'name', 'core_id', 'core_document', 'order', 'title', 'publication_services_by_organization_name',\n                       'images', 'images_list', 'publication_services', 'sharing_url', 'path', 'url', 'tracking', '_links', 'image')\n    row_id = sgqlc.types.Field(Int, graphql_name='rowId')\n    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')\n    core_id = sgqlc.types.Field(String, graphql_name='coreId')\n    core_document = sgqlc.types.Field(JSON, graphql_name='coreDocument')\n    order = sgqlc.types.Field(Int, graphql_name='order')\n    title = sgqlc.types.Field(String, graphql_name='title')\n    publication_services_by_organization_name = sgqlc.types.Field(sgqlc.types.non_null(PublicationServicesConnection), graphql_name='publicationServicesByOrganizationName', args=sgqlc.types.ArgDict((\n        ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)),\n        ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)),\n        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),\n        ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)),\n        ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)),\n        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(\n            PublicationServicesOrderBy)), graphql_name='orderBy', default=('ORDER_ASC',))),\n        ('condition', sgqlc.types.Arg(PublicationServiceCondition,\n         graphql_name='condition', default=None)),\n        ('filter', sgqlc.types.Arg(PublicationServiceFilter,\n         graphql_name='filter', default=None)),\n    ))\n    )\n    images = sgqlc.types.Field(sgqlc.types.non_null(ImagesCollectionsBinariesViewsConnection), graphql_name='images', args=sgqlc.types.ArgDict((\n        ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)),\n        ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)),\n        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),\n        ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)),\n        ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)),\n    ))\n    )\n    images_list = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null(ImagesCollectionsBinariesView)), graphql_name='imagesList', args=sgqlc.types.ArgDict((\n        ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)),\n        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),\n    ))\n    )\n    publication_services = sgqlc.types.Field(sgqlc.types.non_null(PublicationServicesConnection), graphql_name='publicationServices', args=sgqlc.types.ArgDict((\n        ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)),\n        ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)),\n        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),\n        ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)),\n        ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)),\n        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(\n            PublicationServicesOrderBy)), graphql_name='orderBy', default=None)),\n        ('condition', sgqlc.types.Arg(PublicationServiceCondition,\n         graphql_name='condition', default=None)),\n        ('filter', sgqlc.types.Arg(PublicationServiceFilter,\n         graphql_name='filter', default=None)),\n    ))\n    )\n    sharing_url = sgqlc.types.Field(URL, graphql_name='sharingUrl')\n    path = sgqlc.types.Field(String, graphql_name='path')\n    url = sgqlc.types.Field(String, graphql_name='url', args=sgqlc.types.ArgDict((\n        ('variant', sgqlc.types.Arg(UrlVariant, graphql_name='variant', default=None)),\n    ))\n    )\n    tracking = sgqlc.types.Field(JSON, graphql_name='tracking')\n    _links = sgqlc.types.Field(JSON, graphql_name='_links')\n    image = sgqlc.types.Field(ImageType, graphql_name='image', args=sgqlc.types.ArgDict((\n        ('aspect', sgqlc.types.Arg(AspectRatio, graphql_name='aspect', default=None)),\n    ))\n    )\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Organization.__field_names__","title":"<code>__field_names__ = ('row_id', 'name', 'core_id', 'core_document', 'order', 'title', 'publication_services_by_organization_name', 'images', 'images_list', 'publication_services', 'sharing_url', 'path', 'url', 'tracking', '_links', 'image')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Organization.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Organization.core_document","title":"<code>core_document = sgqlc.types.Field(JSON, graphql_name='coreDocument')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Organization.core_id","title":"<code>core_id = sgqlc.types.Field(String, graphql_name='coreId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Organization.image","title":"<code>image = sgqlc.types.Field(ImageType, graphql_name='image', args=sgqlc.types.ArgDict((('aspect', sgqlc.types.Arg(AspectRatio, graphql_name='aspect', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Organization.images","title":"<code>images = sgqlc.types.Field(sgqlc.types.non_null(ImagesCollectionsBinariesViewsConnection), graphql_name='images', args=sgqlc.types.ArgDict((('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)), ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)), ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)), ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)), ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Organization.images_list","title":"<code>images_list = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null(ImagesCollectionsBinariesView)), graphql_name='imagesList', args=sgqlc.types.ArgDict((('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)), ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Organization.name","title":"<code>name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Organization.order","title":"<code>order = sgqlc.types.Field(Int, graphql_name='order')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Organization.path","title":"<code>path = sgqlc.types.Field(String, graphql_name='path')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Organization.publication_services","title":"<code>publication_services = sgqlc.types.Field(sgqlc.types.non_null(PublicationServicesConnection), graphql_name='publicationServices', args=sgqlc.types.ArgDict((('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)), ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)), ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)), ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)), ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)), ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(PublicationServicesOrderBy)), graphql_name='orderBy', default=None)), ('condition', sgqlc.types.Arg(PublicationServiceCondition, graphql_name='condition', default=None)), ('filter', sgqlc.types.Arg(PublicationServiceFilter, graphql_name='filter', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Organization.publication_services_by_organization_name","title":"<code>publication_services_by_organization_name = sgqlc.types.Field(sgqlc.types.non_null(PublicationServicesConnection), graphql_name='publicationServicesByOrganizationName', args=sgqlc.types.ArgDict((('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)), ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)), ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)), ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)), ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)), ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(PublicationServicesOrderBy)), graphql_name='orderBy', default=('ORDER_ASC'))), ('condition', sgqlc.types.Arg(PublicationServiceCondition, graphql_name='condition', default=None)), ('filter', sgqlc.types.Arg(PublicationServiceFilter, graphql_name='filter', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Organization.row_id","title":"<code>row_id = sgqlc.types.Field(Int, graphql_name='rowId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Organization.sharing_url","title":"<code>sharing_url = sgqlc.types.Field(URL, graphql_name='sharingUrl')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Organization.title","title":"<code>title = sgqlc.types.Field(String, graphql_name='title')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Organization.tracking","title":"<code>tracking = sgqlc.types.Field(JSON, graphql_name='tracking')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Organization.url","title":"<code>url = sgqlc.types.Field(String, graphql_name='url', args=sgqlc.types.ArgDict((('variant', sgqlc.types.Arg(UrlVariant, graphql_name='variant', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.OrganizationCondition","title":"<code>OrganizationCondition</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class OrganizationCondition(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('id', 'name', 'core_id',\n                       'core_document', 'order', 'title')\n    id = sgqlc.types.Field(Int, graphql_name='id')\n    name = sgqlc.types.Field(String, graphql_name='name')\n    core_id = sgqlc.types.Field(String, graphql_name='coreId')\n    core_document = sgqlc.types.Field(JSON, graphql_name='coreDocument')\n    order = sgqlc.types.Field(Int, graphql_name='order')\n    title = sgqlc.types.Field(String, graphql_name='title')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.OrganizationCondition.__field_names__","title":"<code>__field_names__ = ('id', 'name', 'core_id', 'core_document', 'order', 'title')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.OrganizationCondition.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.OrganizationCondition.core_document","title":"<code>core_document = sgqlc.types.Field(JSON, graphql_name='coreDocument')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.OrganizationCondition.core_id","title":"<code>core_id = sgqlc.types.Field(String, graphql_name='coreId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.OrganizationCondition.id","title":"<code>id = sgqlc.types.Field(Int, graphql_name='id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.OrganizationCondition.name","title":"<code>name = sgqlc.types.Field(String, graphql_name='name')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.OrganizationCondition.order","title":"<code>order = sgqlc.types.Field(Int, graphql_name='order')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.OrganizationCondition.title","title":"<code>title = sgqlc.types.Field(String, graphql_name='title')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.OrganizationFilter","title":"<code>OrganizationFilter</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class OrganizationFilter(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('id', 'name', 'core_id', 'core_document',\n                       'order', 'title', 'and_', 'or_', 'not_')\n    id = sgqlc.types.Field(IntFilter, graphql_name='id')\n    name = sgqlc.types.Field('StringFilter', graphql_name='name')\n    core_id = sgqlc.types.Field('StringFilter', graphql_name='coreId')\n    core_document = sgqlc.types.Field(JSONFilter, graphql_name='coreDocument')\n    order = sgqlc.types.Field(IntFilter, graphql_name='order')\n    title = sgqlc.types.Field('StringFilter', graphql_name='title')\n    and_ = sgqlc.types.Field(sgqlc.types.list_of(\n        sgqlc.types.non_null('OrganizationFilter')), graphql_name='and')\n    or_ = sgqlc.types.Field(sgqlc.types.list_of(\n        sgqlc.types.non_null('OrganizationFilter')), graphql_name='or')\n    not_ = sgqlc.types.Field('OrganizationFilter', graphql_name='not')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.OrganizationFilter.__field_names__","title":"<code>__field_names__ = ('id', 'name', 'core_id', 'core_document', 'order', 'title', 'and_', 'or_', 'not_')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.OrganizationFilter.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.OrganizationFilter.and_","title":"<code>and_ = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('OrganizationFilter')), graphql_name='and')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.OrganizationFilter.core_document","title":"<code>core_document = sgqlc.types.Field(JSONFilter, graphql_name='coreDocument')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.OrganizationFilter.core_id","title":"<code>core_id = sgqlc.types.Field('StringFilter', graphql_name='coreId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.OrganizationFilter.id","title":"<code>id = sgqlc.types.Field(IntFilter, graphql_name='id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.OrganizationFilter.name","title":"<code>name = sgqlc.types.Field('StringFilter', graphql_name='name')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.OrganizationFilter.not_","title":"<code>not_ = sgqlc.types.Field('OrganizationFilter', graphql_name='not')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.OrganizationFilter.or_","title":"<code>or_ = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('OrganizationFilter')), graphql_name='or')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.OrganizationFilter.order","title":"<code>order = sgqlc.types.Field(IntFilter, graphql_name='order')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.OrganizationFilter.title","title":"<code>title = sgqlc.types.Field('StringFilter', graphql_name='title')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.OrganizationsConnection","title":"<code>OrganizationsConnection</code>","text":"<p>         Bases: <code>sgqlc.types.relay.Connection</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class OrganizationsConnection(sgqlc.types.relay.Connection):\n    __schema__ = audiothek_schema\n    __field_names__ = ('nodes', 'edges', 'page_info',\n                       'total_count', '_links', 'tracking')\n    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(\n        sgqlc.types.non_null('Organization'))), graphql_name='nodes')\n    edges = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(\n        sgqlc.types.non_null('OrganizationsEdge'))), graphql_name='edges')\n    page_info = sgqlc.types.Field(sgqlc.types.non_null(\n        'PageInfo'), graphql_name='pageInfo')\n    total_count = sgqlc.types.Field(\n        sgqlc.types.non_null(Int), graphql_name='totalCount')\n    _links = sgqlc.types.Field(JSON, graphql_name='_links')\n    tracking = sgqlc.types.Field(JSON, graphql_name='tracking')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.OrganizationsConnection.__field_names__","title":"<code>__field_names__ = ('nodes', 'edges', 'page_info', 'total_count', '_links', 'tracking')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.OrganizationsConnection.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.OrganizationsConnection.edges","title":"<code>edges = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('OrganizationsEdge'))), graphql_name='edges')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.OrganizationsConnection.nodes","title":"<code>nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('Organization'))), graphql_name='nodes')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.OrganizationsConnection.page_info","title":"<code>page_info = sgqlc.types.Field(sgqlc.types.non_null('PageInfo'), graphql_name='pageInfo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.OrganizationsConnection.total_count","title":"<code>total_count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='totalCount')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.OrganizationsConnection.tracking","title":"<code>tracking = sgqlc.types.Field(JSON, graphql_name='tracking')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.OrganizationsEdge","title":"<code>OrganizationsEdge</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class OrganizationsEdge(sgqlc.types.Type):\n    __schema__ = audiothek_schema\n    __field_names__ = ('cursor', 'node')\n    cursor = sgqlc.types.Field(Cursor, graphql_name='cursor')\n    node = sgqlc.types.Field(sgqlc.types.non_null(\n        'Organization'), graphql_name='node')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.OrganizationsEdge.__field_names__","title":"<code>__field_names__ = ('cursor', 'node')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.OrganizationsEdge.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.OrganizationsEdge.cursor","title":"<code>cursor = sgqlc.types.Field(Cursor, graphql_name='cursor')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.OrganizationsEdge.node","title":"<code>node = sgqlc.types.Field(sgqlc.types.non_null('Organization'), graphql_name='node')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.OrganizationsOrderBy","title":"<code>OrganizationsOrderBy</code>","text":"<p>         Bases: <code>sgqlc.types.Enum</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class OrganizationsOrderBy(sgqlc.types.Enum):\n    __schema__ = audiothek_schema\n    __choices__ = ('CORE_DOCUMENT_ASC', 'CORE_DOCUMENT_DESC', 'CORE_ID_ASC', 'CORE_ID_DESC', 'ID_ASC', 'ID_DESC', 'NAME_ASC',\n                   'NAME_DESC', 'NATURAL', 'ORDER_ASC', 'ORDER_DESC', 'PRIMARY_KEY_ASC', 'PRIMARY_KEY_DESC', 'TITLE_ASC', 'TITLE_DESC')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.OrganizationsOrderBy.__choices__","title":"<code>__choices__ = ('CORE_DOCUMENT_ASC', 'CORE_DOCUMENT_DESC', 'CORE_ID_ASC', 'CORE_ID_DESC', 'ID_ASC', 'ID_DESC', 'NAME_ASC', 'NAME_DESC', 'NATURAL', 'ORDER_ASC', 'ORDER_DESC', 'PRIMARY_KEY_ASC', 'PRIMARY_KEY_DESC', 'TITLE_ASC', 'TITLE_DESC')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.OrganizationsOrderBy.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PageInfo","title":"<code>PageInfo</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class PageInfo(sgqlc.types.Type):\n    __schema__ = audiothek_schema\n    __field_names__ = ('has_next_page', 'has_previous_page',\n                       'start_cursor', 'end_cursor')\n    has_next_page = sgqlc.types.Field(\n        sgqlc.types.non_null(Boolean), graphql_name='hasNextPage')\n    has_previous_page = sgqlc.types.Field(\n        sgqlc.types.non_null(Boolean), graphql_name='hasPreviousPage')\n    start_cursor = sgqlc.types.Field(Cursor, graphql_name='startCursor')\n    end_cursor = sgqlc.types.Field(Cursor, graphql_name='endCursor')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PageInfo.__field_names__","title":"<code>__field_names__ = ('has_next_page', 'has_previous_page', 'start_cursor', 'end_cursor')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PageInfo.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PageInfo.end_cursor","title":"<code>end_cursor = sgqlc.types.Field(Cursor, graphql_name='endCursor')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PageInfo.has_next_page","title":"<code>has_next_page = sgqlc.types.Field(sgqlc.types.non_null(Boolean), graphql_name='hasNextPage')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PageInfo.has_previous_page","title":"<code>has_previous_page = sgqlc.types.Field(sgqlc.types.non_null(Boolean), graphql_name='hasPreviousPage')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PageInfo.start_cursor","title":"<code>start_cursor = sgqlc.types.Field(Cursor, graphql_name='startCursor')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermanentLivestream","title":"<code>PermanentLivestream</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code>, <code>Node</code>, <code>CoreTeaser</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class PermanentLivestream(sgqlc.types.Type, Node, CoreTeaser):\n    __schema__ = audiothek_schema\n    __field_names__ = ('row_id', 'core_id', 'external_ids', 'publication_service_id', 'image', 'core_document', 'tracking', 'audios', 'image_collection_id',\n                       'audio_binary_id', 'publisher_core_id', 'order', 'publication_service', 'audio_list', 'images', 'images_list', 'summary', 'description')\n    row_id = sgqlc.types.Field(\n        sgqlc.types.non_null(String), graphql_name='rowId')\n    core_id = sgqlc.types.Field(String, graphql_name='coreId')\n    external_ids = sgqlc.types.Field(\n        sgqlc.types.list_of(String), graphql_name='externalIds')\n    publication_service_id = sgqlc.types.Field(\n        sgqlc.types.non_null(Int), graphql_name='publicationServiceId')\n    image = sgqlc.types.Field(ImageType, graphql_name='image')\n    core_document = sgqlc.types.Field(JSON, graphql_name='coreDocument')\n    tracking = sgqlc.types.Field(JSON, graphql_name='tracking')\n    audios = sgqlc.types.Field(sgqlc.types.list_of(\n        sgqlc.types.non_null(StreamType)), graphql_name='audios')\n    image_collection_id = sgqlc.types.Field(\n        String, graphql_name='imageCollectionId')\n    audio_binary_id = sgqlc.types.Field(String, graphql_name='audioBinaryId')\n    publisher_core_id = sgqlc.types.Field(\n        String, graphql_name='publisherCoreId')\n    order = sgqlc.types.Field(Int, graphql_name='order')\n    publication_service = sgqlc.types.Field(\n        'PublicationService', graphql_name='publicationService')\n    audio_list = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null(AudioBinary)), graphql_name='audioList', args=sgqlc.types.ArgDict((\n        ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)),\n        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),\n    ))\n    )\n    images = sgqlc.types.Field(sgqlc.types.non_null(ImagesCollectionsBinariesViewsConnection), graphql_name='images', args=sgqlc.types.ArgDict((\n        ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)),\n        ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)),\n        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),\n        ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)),\n        ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)),\n    ))\n    )\n    images_list = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null(ImagesCollectionsBinariesView)), graphql_name='imagesList', args=sgqlc.types.ArgDict((\n        ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)),\n        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),\n    ))\n    )\n    summary = sgqlc.types.Field(String, graphql_name='summary')\n    description = sgqlc.types.Field(HTML, graphql_name='description')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermanentLivestream.__field_names__","title":"<code>__field_names__ = ('row_id', 'core_id', 'external_ids', 'publication_service_id', 'image', 'core_document', 'tracking', 'audios', 'image_collection_id', 'audio_binary_id', 'publisher_core_id', 'order', 'publication_service', 'audio_list', 'images', 'images_list', 'summary', 'description')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermanentLivestream.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermanentLivestream.audio_binary_id","title":"<code>audio_binary_id = sgqlc.types.Field(String, graphql_name='audioBinaryId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermanentLivestream.audio_list","title":"<code>audio_list = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null(AudioBinary)), graphql_name='audioList', args=sgqlc.types.ArgDict((('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)), ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermanentLivestream.audios","title":"<code>audios = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null(StreamType)), graphql_name='audios')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermanentLivestream.core_document","title":"<code>core_document = sgqlc.types.Field(JSON, graphql_name='coreDocument')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermanentLivestream.core_id","title":"<code>core_id = sgqlc.types.Field(String, graphql_name='coreId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermanentLivestream.description","title":"<code>description = sgqlc.types.Field(HTML, graphql_name='description')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermanentLivestream.external_ids","title":"<code>external_ids = sgqlc.types.Field(sgqlc.types.list_of(String), graphql_name='externalIds')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermanentLivestream.image","title":"<code>image = sgqlc.types.Field(ImageType, graphql_name='image')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermanentLivestream.image_collection_id","title":"<code>image_collection_id = sgqlc.types.Field(String, graphql_name='imageCollectionId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermanentLivestream.images","title":"<code>images = sgqlc.types.Field(sgqlc.types.non_null(ImagesCollectionsBinariesViewsConnection), graphql_name='images', args=sgqlc.types.ArgDict((('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)), ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)), ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)), ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)), ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermanentLivestream.images_list","title":"<code>images_list = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null(ImagesCollectionsBinariesView)), graphql_name='imagesList', args=sgqlc.types.ArgDict((('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)), ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermanentLivestream.order","title":"<code>order = sgqlc.types.Field(Int, graphql_name='order')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermanentLivestream.publication_service","title":"<code>publication_service = sgqlc.types.Field('PublicationService', graphql_name='publicationService')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermanentLivestream.publication_service_id","title":"<code>publication_service_id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='publicationServiceId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermanentLivestream.publisher_core_id","title":"<code>publisher_core_id = sgqlc.types.Field(String, graphql_name='publisherCoreId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermanentLivestream.row_id","title":"<code>row_id = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='rowId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermanentLivestream.summary","title":"<code>summary = sgqlc.types.Field(String, graphql_name='summary')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermanentLivestream.tracking","title":"<code>tracking = sgqlc.types.Field(JSON, graphql_name='tracking')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermanentLivestreamCondition","title":"<code>PermanentLivestreamCondition</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class PermanentLivestreamCondition(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('id', 'core_id', 'external_ids', 'publication_service_id', 'title', 'image', 'core_document',\n                       'stream', 'tracking', 'audios', 'image_collection_id', 'audio_binary_id', 'publisher_core_id', 'order')\n    id = sgqlc.types.Field(String, graphql_name='id')\n    core_id = sgqlc.types.Field(String, graphql_name='coreId')\n    external_ids = sgqlc.types.Field(\n        sgqlc.types.list_of(String), graphql_name='externalIds')\n    publication_service_id = sgqlc.types.Field(\n        Int, graphql_name='publicationServiceId')\n    title = sgqlc.types.Field(String, graphql_name='title')\n    image = sgqlc.types.Field(ImageTypeInput, graphql_name='image')\n    core_document = sgqlc.types.Field(JSON, graphql_name='coreDocument')\n    stream = sgqlc.types.Field(JSON, graphql_name='stream')\n    tracking = sgqlc.types.Field(JSON, graphql_name='tracking')\n    audios = sgqlc.types.Field(sgqlc.types.list_of(\n        'StreamTypeInput'), graphql_name='audios')\n    image_collection_id = sgqlc.types.Field(\n        String, graphql_name='imageCollectionId')\n    audio_binary_id = sgqlc.types.Field(String, graphql_name='audioBinaryId')\n    publisher_core_id = sgqlc.types.Field(\n        String, graphql_name='publisherCoreId')\n    order = sgqlc.types.Field(Int, graphql_name='order')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermanentLivestreamCondition.__field_names__","title":"<code>__field_names__ = ('id', 'core_id', 'external_ids', 'publication_service_id', 'title', 'image', 'core_document', 'stream', 'tracking', 'audios', 'image_collection_id', 'audio_binary_id', 'publisher_core_id', 'order')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermanentLivestreamCondition.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermanentLivestreamCondition.audio_binary_id","title":"<code>audio_binary_id = sgqlc.types.Field(String, graphql_name='audioBinaryId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermanentLivestreamCondition.audios","title":"<code>audios = sgqlc.types.Field(sgqlc.types.list_of('StreamTypeInput'), graphql_name='audios')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermanentLivestreamCondition.core_document","title":"<code>core_document = sgqlc.types.Field(JSON, graphql_name='coreDocument')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermanentLivestreamCondition.core_id","title":"<code>core_id = sgqlc.types.Field(String, graphql_name='coreId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermanentLivestreamCondition.external_ids","title":"<code>external_ids = sgqlc.types.Field(sgqlc.types.list_of(String), graphql_name='externalIds')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermanentLivestreamCondition.id","title":"<code>id = sgqlc.types.Field(String, graphql_name='id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermanentLivestreamCondition.image","title":"<code>image = sgqlc.types.Field(ImageTypeInput, graphql_name='image')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermanentLivestreamCondition.image_collection_id","title":"<code>image_collection_id = sgqlc.types.Field(String, graphql_name='imageCollectionId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermanentLivestreamCondition.order","title":"<code>order = sgqlc.types.Field(Int, graphql_name='order')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermanentLivestreamCondition.publication_service_id","title":"<code>publication_service_id = sgqlc.types.Field(Int, graphql_name='publicationServiceId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermanentLivestreamCondition.publisher_core_id","title":"<code>publisher_core_id = sgqlc.types.Field(String, graphql_name='publisherCoreId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermanentLivestreamCondition.stream","title":"<code>stream = sgqlc.types.Field(JSON, graphql_name='stream')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermanentLivestreamCondition.title","title":"<code>title = sgqlc.types.Field(String, graphql_name='title')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermanentLivestreamCondition.tracking","title":"<code>tracking = sgqlc.types.Field(JSON, graphql_name='tracking')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermanentLivestreamFilter","title":"<code>PermanentLivestreamFilter</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class PermanentLivestreamFilter(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('id', 'core_id', 'external_ids', 'publication_service_id', 'title', 'core_document', 'stream',\n                       'tracking', 'image_collection_id', 'audio_binary_id', 'publisher_core_id', 'order', 'image', 'and_', 'or_', 'not_')\n    id = sgqlc.types.Field('StringFilter', graphql_name='id')\n    core_id = sgqlc.types.Field('StringFilter', graphql_name='coreId')\n    external_ids = sgqlc.types.Field(\n        'StringListFilter', graphql_name='externalIds')\n    publication_service_id = sgqlc.types.Field(\n        IntFilter, graphql_name='publicationServiceId')\n    title = sgqlc.types.Field('StringFilter', graphql_name='title')\n    core_document = sgqlc.types.Field(JSONFilter, graphql_name='coreDocument')\n    stream = sgqlc.types.Field(JSONFilter, graphql_name='stream')\n    tracking = sgqlc.types.Field(JSONFilter, graphql_name='tracking')\n    image_collection_id = sgqlc.types.Field(\n        'StringFilter', graphql_name='imageCollectionId')\n    audio_binary_id = sgqlc.types.Field(\n        'StringFilter', graphql_name='audioBinaryId')\n    publisher_core_id = sgqlc.types.Field(\n        'StringFilter', graphql_name='publisherCoreId')\n    order = sgqlc.types.Field(IntFilter, graphql_name='order')\n    image = sgqlc.types.Field(ImageTypeFilter, graphql_name='image')\n    and_ = sgqlc.types.Field(sgqlc.types.list_of(\n        sgqlc.types.non_null('PermanentLivestreamFilter')), graphql_name='and')\n    or_ = sgqlc.types.Field(sgqlc.types.list_of(\n        sgqlc.types.non_null('PermanentLivestreamFilter')), graphql_name='or')\n    not_ = sgqlc.types.Field('PermanentLivestreamFilter', graphql_name='not')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermanentLivestreamFilter.__field_names__","title":"<code>__field_names__ = ('id', 'core_id', 'external_ids', 'publication_service_id', 'title', 'core_document', 'stream', 'tracking', 'image_collection_id', 'audio_binary_id', 'publisher_core_id', 'order', 'image', 'and_', 'or_', 'not_')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermanentLivestreamFilter.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermanentLivestreamFilter.and_","title":"<code>and_ = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('PermanentLivestreamFilter')), graphql_name='and')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermanentLivestreamFilter.audio_binary_id","title":"<code>audio_binary_id = sgqlc.types.Field('StringFilter', graphql_name='audioBinaryId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermanentLivestreamFilter.core_document","title":"<code>core_document = sgqlc.types.Field(JSONFilter, graphql_name='coreDocument')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermanentLivestreamFilter.core_id","title":"<code>core_id = sgqlc.types.Field('StringFilter', graphql_name='coreId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermanentLivestreamFilter.external_ids","title":"<code>external_ids = sgqlc.types.Field('StringListFilter', graphql_name='externalIds')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermanentLivestreamFilter.id","title":"<code>id = sgqlc.types.Field('StringFilter', graphql_name='id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermanentLivestreamFilter.image","title":"<code>image = sgqlc.types.Field(ImageTypeFilter, graphql_name='image')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermanentLivestreamFilter.image_collection_id","title":"<code>image_collection_id = sgqlc.types.Field('StringFilter', graphql_name='imageCollectionId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermanentLivestreamFilter.not_","title":"<code>not_ = sgqlc.types.Field('PermanentLivestreamFilter', graphql_name='not')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermanentLivestreamFilter.or_","title":"<code>or_ = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('PermanentLivestreamFilter')), graphql_name='or')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermanentLivestreamFilter.order","title":"<code>order = sgqlc.types.Field(IntFilter, graphql_name='order')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermanentLivestreamFilter.publication_service_id","title":"<code>publication_service_id = sgqlc.types.Field(IntFilter, graphql_name='publicationServiceId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermanentLivestreamFilter.publisher_core_id","title":"<code>publisher_core_id = sgqlc.types.Field('StringFilter', graphql_name='publisherCoreId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermanentLivestreamFilter.stream","title":"<code>stream = sgqlc.types.Field(JSONFilter, graphql_name='stream')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermanentLivestreamFilter.title","title":"<code>title = sgqlc.types.Field('StringFilter', graphql_name='title')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermanentLivestreamFilter.tracking","title":"<code>tracking = sgqlc.types.Field(JSONFilter, graphql_name='tracking')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermanentLivestreamsConnection","title":"<code>PermanentLivestreamsConnection</code>","text":"<p>         Bases: <code>sgqlc.types.relay.Connection</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class PermanentLivestreamsConnection(sgqlc.types.relay.Connection):\n    __schema__ = audiothek_schema\n    __field_names__ = ('nodes', 'edges', 'page_info', 'total_count')\n    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(\n        sgqlc.types.non_null('PermanentLivestream'))), graphql_name='nodes')\n    edges = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(\n        sgqlc.types.non_null('PermanentLivestreamsEdge'))), graphql_name='edges')\n    page_info = sgqlc.types.Field(\n        sgqlc.types.non_null(PageInfo), graphql_name='pageInfo')\n    total_count = sgqlc.types.Field(\n        sgqlc.types.non_null(Int), graphql_name='totalCount')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermanentLivestreamsConnection.__field_names__","title":"<code>__field_names__ = ('nodes', 'edges', 'page_info', 'total_count')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermanentLivestreamsConnection.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermanentLivestreamsConnection.edges","title":"<code>edges = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('PermanentLivestreamsEdge'))), graphql_name='edges')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermanentLivestreamsConnection.nodes","title":"<code>nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('PermanentLivestream'))), graphql_name='nodes')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermanentLivestreamsConnection.page_info","title":"<code>page_info = sgqlc.types.Field(sgqlc.types.non_null(PageInfo), graphql_name='pageInfo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermanentLivestreamsConnection.total_count","title":"<code>total_count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='totalCount')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermanentLivestreamsEdge","title":"<code>PermanentLivestreamsEdge</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class PermanentLivestreamsEdge(sgqlc.types.Type):\n    __schema__ = audiothek_schema\n    __field_names__ = ('cursor', 'node')\n    cursor = sgqlc.types.Field(Cursor, graphql_name='cursor')\n    node = sgqlc.types.Field(sgqlc.types.non_null(\n        'PermanentLivestream'), graphql_name='node')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermanentLivestreamsEdge.__field_names__","title":"<code>__field_names__ = ('cursor', 'node')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermanentLivestreamsEdge.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermanentLivestreamsEdge.cursor","title":"<code>cursor = sgqlc.types.Field(Cursor, graphql_name='cursor')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermanentLivestreamsEdge.node","title":"<code>node = sgqlc.types.Field(sgqlc.types.non_null('PermanentLivestream'), graphql_name='node')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermanentLivestreamsOrderBy","title":"<code>PermanentLivestreamsOrderBy</code>","text":"<p>         Bases: <code>sgqlc.types.Enum</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class PermanentLivestreamsOrderBy(sgqlc.types.Enum):\n    __schema__ = audiothek_schema\n    __choices__ = ('AUDIOS_ASC', 'AUDIOS_DESC', 'AUDIO_BINARY_ID_ASC', 'AUDIO_BINARY_ID_DESC', 'CORE_DOCUMENT_ASC', 'CORE_DOCUMENT_DESC', 'CORE_ID_ASC', 'CORE_ID_DESC', 'EXTERNAL_IDS_ASC', 'EXTERNAL_IDS_DESC', 'ID_ASC', 'ID_DESC', 'IMAGE_ASC', 'IMAGE_COLLECTION_ID_ASC', 'IMAGE_COLLECTION_ID_DESC',\n                   'IMAGE_DESC', 'NATURAL', 'ORDER_ASC', 'ORDER_DESC', 'PRIMARY_KEY_ASC', 'PRIMARY_KEY_DESC', 'PUBLICATION_SERVICE_ID_ASC', 'PUBLICATION_SERVICE_ID_DESC', 'PUBLISHER_CORE_ID_ASC', 'PUBLISHER_CORE_ID_DESC', 'STREAM_ASC', 'STREAM_DESC', 'TITLE_ASC', 'TITLE_DESC', 'TRACKING_ASC', 'TRACKING_DESC')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermanentLivestreamsOrderBy.__choices__","title":"<code>__choices__ = ('AUDIOS_ASC', 'AUDIOS_DESC', 'AUDIO_BINARY_ID_ASC', 'AUDIO_BINARY_ID_DESC', 'CORE_DOCUMENT_ASC', 'CORE_DOCUMENT_DESC', 'CORE_ID_ASC', 'CORE_ID_DESC', 'EXTERNAL_IDS_ASC', 'EXTERNAL_IDS_DESC', 'ID_ASC', 'ID_DESC', 'IMAGE_ASC', 'IMAGE_COLLECTION_ID_ASC', 'IMAGE_COLLECTION_ID_DESC', 'IMAGE_DESC', 'NATURAL', 'ORDER_ASC', 'ORDER_DESC', 'PRIMARY_KEY_ASC', 'PRIMARY_KEY_DESC', 'PUBLICATION_SERVICE_ID_ASC', 'PUBLICATION_SERVICE_ID_DESC', 'PUBLISHER_CORE_ID_ASC', 'PUBLISHER_CORE_ID_DESC', 'STREAM_ASC', 'STREAM_DESC', 'TITLE_ASC', 'TITLE_DESC', 'TRACKING_ASC', 'TRACKING_DESC')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermanentLivestreamsOrderBy.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermantentLivestreamConnection","title":"<code>PermantentLivestreamConnection</code>","text":"<p>         Bases: <code>sgqlc.types.relay.Connection</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class PermantentLivestreamConnection(sgqlc.types.relay.Connection):\n    __schema__ = audiothek_schema\n    __field_names__ = ('total_count', 'nodes')\n    total_count = sgqlc.types.Field(\n        sgqlc.types.non_null(Int), graphql_name='totalCount')\n    nodes = sgqlc.types.Field(sgqlc.types.list_of(\n        sgqlc.types.non_null('PermanentLivestream')), graphql_name='nodes')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermantentLivestreamConnection.__field_names__","title":"<code>__field_names__ = ('total_count', 'nodes')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermantentLivestreamConnection.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermantentLivestreamConnection.nodes","title":"<code>nodes = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('PermanentLivestream')), graphql_name='nodes')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PermantentLivestreamConnection.total_count","title":"<code>total_count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='totalCount')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Playlist","title":"<code>Playlist</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code>, <code>PlaylistInterface</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class Playlist(sgqlc.types.Type, PlaylistInterface):\n    __schema__ = audiothek_schema\n    __field_names__ = ()\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Playlist.__field_names__","title":"<code>__field_names__ = ()</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Playlist.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistConnection","title":"<code>PlaylistConnection</code>","text":"<p>         Bases: <code>sgqlc.types.relay.Connection</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class PlaylistConnection(sgqlc.types.relay.Connection):\n    __schema__ = audiothek_schema\n    __field_names__ = ('count', 'edges', 'nodes', 'page_info')\n    count = sgqlc.types.Field(Int, graphql_name='count')\n    edges = sgqlc.types.Field(sgqlc.types.list_of(\n        'PlaylistEdge'), graphql_name='edges')\n    nodes = sgqlc.types.Field(sgqlc.types.list_of(\n        'PlaylistInterface'), graphql_name='nodes')\n    page_info = sgqlc.types.Field(\n        sgqlc.types.non_null(PageInfo), graphql_name='pageInfo')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistConnection.__field_names__","title":"<code>__field_names__ = ('count', 'edges', 'nodes', 'page_info')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistConnection.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistConnection.count","title":"<code>count = sgqlc.types.Field(Int, graphql_name='count')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistConnection.edges","title":"<code>edges = sgqlc.types.Field(sgqlc.types.list_of('PlaylistEdge'), graphql_name='edges')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistConnection.nodes","title":"<code>nodes = sgqlc.types.Field(sgqlc.types.list_of('PlaylistInterface'), graphql_name='nodes')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistConnection.page_info","title":"<code>page_info = sgqlc.types.Field(sgqlc.types.non_null(PageInfo), graphql_name='pageInfo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistConnectionFilterB","title":"<code>PlaylistConnectionFilterB</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class PlaylistConnectionFilterB(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('empty', 'contains')\n    empty = sgqlc.types.Field(BooleanFilterB, graphql_name='empty')\n    contains = sgqlc.types.Field(ID, graphql_name='contains')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistConnectionFilterB.__field_names__","title":"<code>__field_names__ = ('empty', 'contains')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistConnectionFilterB.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistConnectionFilterB.contains","title":"<code>contains = sgqlc.types.Field(ID, graphql_name='contains')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistConnectionFilterB.empty","title":"<code>empty = sgqlc.types.Field(BooleanFilterB, graphql_name='empty')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistCreateInput","title":"<code>PlaylistCreateInput</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class PlaylistCreateInput(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('client_mutation_id', 'type',\n                       'entries', 'private', 'sort_index', 'title')\n    client_mutation_id = sgqlc.types.Field(\n        String, graphql_name='clientMutationId')\n    type = sgqlc.types.Field(String, graphql_name='type')\n    entries = sgqlc.types.Field(sgqlc.types.list_of(\n        ItemCreateInput), graphql_name='entries')\n    private = sgqlc.types.Field(Boolean, graphql_name='private')\n    sort_index = sgqlc.types.Field(Int, graphql_name='sortIndex')\n    title = sgqlc.types.Field(String, graphql_name='title')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistCreateInput.__field_names__","title":"<code>__field_names__ = ('client_mutation_id', 'type', 'entries', 'private', 'sort_index', 'title')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistCreateInput.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistCreateInput.client_mutation_id","title":"<code>client_mutation_id = sgqlc.types.Field(String, graphql_name='clientMutationId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistCreateInput.entries","title":"<code>entries = sgqlc.types.Field(sgqlc.types.list_of(ItemCreateInput), graphql_name='entries')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistCreateInput.private","title":"<code>private = sgqlc.types.Field(Boolean, graphql_name='private')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistCreateInput.sort_index","title":"<code>sort_index = sgqlc.types.Field(Int, graphql_name='sortIndex')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistCreateInput.title","title":"<code>title = sgqlc.types.Field(String, graphql_name='title')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistCreateInput.type","title":"<code>type = sgqlc.types.Field(String, graphql_name='type')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistEdge","title":"<code>PlaylistEdge</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class PlaylistEdge(sgqlc.types.Type):\n    __schema__ = audiothek_schema\n    __field_names__ = ('cursor', 'node')\n    cursor = sgqlc.types.Field(\n        sgqlc.types.non_null(String), graphql_name='cursor')\n    node = sgqlc.types.Field('PlaylistInterface', graphql_name='node')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistEdge.__field_names__","title":"<code>__field_names__ = ('cursor', 'node')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistEdge.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistEdge.cursor","title":"<code>cursor = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='cursor')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistEdge.node","title":"<code>node = sgqlc.types.Field('PlaylistInterface', graphql_name='node')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistEntryListInput","title":"<code>PlaylistEntryListInput</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class PlaylistEntryListInput(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('client_mutation_id', 'entry', 'playlist')\n    client_mutation_id = sgqlc.types.Field(\n        String, graphql_name='clientMutationId')\n    entry = sgqlc.types.Field(sgqlc.types.non_null(\n        ItemCreateInput), graphql_name='entry')\n    playlist = sgqlc.types.Field(\n        sgqlc.types.non_null(ID), graphql_name='playlist')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistEntryListInput.__field_names__","title":"<code>__field_names__ = ('client_mutation_id', 'entry', 'playlist')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistEntryListInput.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistEntryListInput.client_mutation_id","title":"<code>client_mutation_id = sgqlc.types.Field(String, graphql_name='clientMutationId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistEntryListInput.entry","title":"<code>entry = sgqlc.types.Field(sgqlc.types.non_null(ItemCreateInput), graphql_name='entry')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistEntryListInput.playlist","title":"<code>playlist = sgqlc.types.Field(sgqlc.types.non_null(ID), graphql_name='playlist')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistFilterB","title":"<code>PlaylistFilterB</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class PlaylistFilterB(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('created_at', 'modified_at',\n                       'private', 'sort_index', 'title', 'user')\n    created_at = sgqlc.types.Field(DateFilterB, graphql_name='createdAt')\n    modified_at = sgqlc.types.Field(DateFilterB, graphql_name='modifiedAt')\n    private = sgqlc.types.Field(BooleanFilterB, graphql_name='private')\n    sort_index = sgqlc.types.Field(IntFilterB, graphql_name='sortIndex')\n    title = sgqlc.types.Field('StringFilterB', graphql_name='title')\n    user = sgqlc.types.Field(EndUserRelationFilterB, graphql_name='user')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistFilterB.__field_names__","title":"<code>__field_names__ = ('created_at', 'modified_at', 'private', 'sort_index', 'title', 'user')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistFilterB.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistFilterB.created_at","title":"<code>created_at = sgqlc.types.Field(DateFilterB, graphql_name='createdAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistFilterB.modified_at","title":"<code>modified_at = sgqlc.types.Field(DateFilterB, graphql_name='modifiedAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistFilterB.private","title":"<code>private = sgqlc.types.Field(BooleanFilterB, graphql_name='private')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistFilterB.sort_index","title":"<code>sort_index = sgqlc.types.Field(IntFilterB, graphql_name='sortIndex')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistFilterB.title","title":"<code>title = sgqlc.types.Field('StringFilterB', graphql_name='title')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistFilterB.user","title":"<code>user = sgqlc.types.Field(EndUserRelationFilterB, graphql_name='user')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistInterface","title":"<code>PlaylistInterface</code>","text":"<p>         Bases: <code>sgqlc.types.Interface</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class PlaylistInterface(sgqlc.types.Interface):\n    __schema__ = audiothek_schema\n    __field_names__ = ('id', 'base_id_prefix', 'created_at', 'entries',\n                       'modified_at', 'private', 'sort_index', 'title', 'user')\n    id = sgqlc.types.Field(sgqlc.types.non_null(ID), graphql_name='id')\n    base_id_prefix = sgqlc.types.Field(\n        sgqlc.types.non_null(String), graphql_name='baseIdPrefix')\n    created_at = sgqlc.types.Field(DateTime, graphql_name='createdAt')\n    entries = sgqlc.types.Field(ItemConnection, graphql_name='entries', args=sgqlc.types.ArgDict((\n        ('after', sgqlc.types.Arg(String, graphql_name='after', default=None)),\n        ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)),\n        ('before', sgqlc.types.Arg(String, graphql_name='before', default=None)),\n        ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)),\n        ('filter', sgqlc.types.Arg(ItemFilterB, graphql_name='filter', default=None)),\n        ('order_by', sgqlc.types.Arg(ItemSortOrder,\n         graphql_name='orderBy', default=None)),\n    ))\n    )\n    modified_at = sgqlc.types.Field(DateTime, graphql_name='modifiedAt')\n    private = sgqlc.types.Field(Boolean, graphql_name='private')\n    sort_index = sgqlc.types.Field(Int, graphql_name='sortIndex')\n    title = sgqlc.types.Field(String, graphql_name='title')\n    user = sgqlc.types.Field(EndUserInterface, graphql_name='user')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistInterface.__field_names__","title":"<code>__field_names__ = ('id', 'base_id_prefix', 'created_at', 'entries', 'modified_at', 'private', 'sort_index', 'title', 'user')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistInterface.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistInterface.base_id_prefix","title":"<code>base_id_prefix = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='baseIdPrefix')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistInterface.created_at","title":"<code>created_at = sgqlc.types.Field(DateTime, graphql_name='createdAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistInterface.entries","title":"<code>entries = sgqlc.types.Field(ItemConnection, graphql_name='entries', args=sgqlc.types.ArgDict((('after', sgqlc.types.Arg(String, graphql_name='after', default=None)), ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)), ('before', sgqlc.types.Arg(String, graphql_name='before', default=None)), ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)), ('filter', sgqlc.types.Arg(ItemFilterB, graphql_name='filter', default=None)), ('order_by', sgqlc.types.Arg(ItemSortOrder, graphql_name='orderBy', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistInterface.id","title":"<code>id = sgqlc.types.Field(sgqlc.types.non_null(ID), graphql_name='id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistInterface.modified_at","title":"<code>modified_at = sgqlc.types.Field(DateTime, graphql_name='modifiedAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistInterface.private","title":"<code>private = sgqlc.types.Field(Boolean, graphql_name='private')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistInterface.sort_index","title":"<code>sort_index = sgqlc.types.Field(Int, graphql_name='sortIndex')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistInterface.title","title":"<code>title = sgqlc.types.Field(String, graphql_name='title')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistInterface.user","title":"<code>user = sgqlc.types.Field(EndUserInterface, graphql_name='user')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistPayload","title":"<code>PlaylistPayload</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class PlaylistPayload(sgqlc.types.Type):\n    __schema__ = audiothek_schema\n    __field_names__ = ('client_mutation_id', 'changed_playlist')\n    client_mutation_id = sgqlc.types.Field(\n        String, graphql_name='clientMutationId')\n    changed_playlist = sgqlc.types.Field(\n        'Playlist', graphql_name='changedPlaylist')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistPayload.__field_names__","title":"<code>__field_names__ = ('client_mutation_id', 'changed_playlist')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistPayload.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistPayload.changed_playlist","title":"<code>changed_playlist = sgqlc.types.Field('Playlist', graphql_name='changedPlaylist')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistPayload.client_mutation_id","title":"<code>client_mutation_id = sgqlc.types.Field(String, graphql_name='clientMutationId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistRelationFilterB","title":"<code>PlaylistRelationFilterB</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class PlaylistRelationFilterB(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('id', 'exists')\n    id = sgqlc.types.Field(IDFilterB, graphql_name='id')\n    exists = sgqlc.types.Field(BooleanFilterB, graphql_name='exists')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistRelationFilterB.__field_names__","title":"<code>__field_names__ = ('id', 'exists')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistRelationFilterB.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistRelationFilterB.exists","title":"<code>exists = sgqlc.types.Field(BooleanFilterB, graphql_name='exists')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistRelationFilterB.id","title":"<code>id = sgqlc.types.Field(IDFilterB, graphql_name='id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistRemoveAllListInput","title":"<code>PlaylistRemoveAllListInput</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class PlaylistRemoveAllListInput(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('client_mutation_id', 'playlist')\n    client_mutation_id = sgqlc.types.Field(\n        String, graphql_name='clientMutationId')\n    playlist = sgqlc.types.Field(\n        sgqlc.types.non_null(ID), graphql_name='playlist')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistRemoveAllListInput.__field_names__","title":"<code>__field_names__ = ('client_mutation_id', 'playlist')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistRemoveAllListInput.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistRemoveAllListInput.client_mutation_id","title":"<code>client_mutation_id = sgqlc.types.Field(String, graphql_name='clientMutationId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistRemoveAllListInput.playlist","title":"<code>playlist = sgqlc.types.Field(sgqlc.types.non_null(ID), graphql_name='playlist')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistSortOrder","title":"<code>PlaylistSortOrder</code>","text":"<p>         Bases: <code>sgqlc.types.Enum</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class PlaylistSortOrder(sgqlc.types.Enum):\n    __schema__ = audiothek_schema\n    __choices__ = ('CREATEDAT_ASC', 'CREATEDAT_DESC', 'ENTRIES_ID_ASC', 'ENTRIES_ID_DESC', 'MODIFIEDAT_ASC',\n                   'MODIFIEDAT_DESC', 'PRIVATE_ASC', 'PRIVATE_DESC', 'SORTINDEX_ASC', 'SORTINDEX_DESC', 'TITLE_ASC', 'TITLE_DESC')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistSortOrder.__choices__","title":"<code>__choices__ = ('CREATEDAT_ASC', 'CREATEDAT_DESC', 'ENTRIES_ID_ASC', 'ENTRIES_ID_DESC', 'MODIFIEDAT_ASC', 'MODIFIEDAT_DESC', 'PRIVATE_ASC', 'PRIVATE_DESC', 'SORTINDEX_ASC', 'SORTINDEX_DESC', 'TITLE_ASC', 'TITLE_DESC')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistSortOrder.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistUpdateInput","title":"<code>PlaylistUpdateInput</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class PlaylistUpdateInput(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('client_mutation_id', 'id', 'entries',\n                       'private', 'sort_index', 'title')\n    client_mutation_id = sgqlc.types.Field(\n        String, graphql_name='clientMutationId')\n    id = sgqlc.types.Field(sgqlc.types.non_null(ID), graphql_name='id')\n    entries = sgqlc.types.Field(sgqlc.types.list_of(\n        ItemCreateInput), graphql_name='entries')\n    private = sgqlc.types.Field(Boolean, graphql_name='private')\n    sort_index = sgqlc.types.Field(Int, graphql_name='sortIndex')\n    title = sgqlc.types.Field(String, graphql_name='title')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistUpdateInput.__field_names__","title":"<code>__field_names__ = ('client_mutation_id', 'id', 'entries', 'private', 'sort_index', 'title')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistUpdateInput.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistUpdateInput.client_mutation_id","title":"<code>client_mutation_id = sgqlc.types.Field(String, graphql_name='clientMutationId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistUpdateInput.entries","title":"<code>entries = sgqlc.types.Field(sgqlc.types.list_of(ItemCreateInput), graphql_name='entries')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistUpdateInput.id","title":"<code>id = sgqlc.types.Field(sgqlc.types.non_null(ID), graphql_name='id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistUpdateInput.private","title":"<code>private = sgqlc.types.Field(Boolean, graphql_name='private')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistUpdateInput.sort_index","title":"<code>sort_index = sgqlc.types.Field(Int, graphql_name='sortIndex')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PlaylistUpdateInput.title","title":"<code>title = sgqlc.types.Field(String, graphql_name='title')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSet","title":"<code>ProgramSet</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code>, <code>Node</code>, <code>Teaser</code>, <code>CoreTeaser</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class ProgramSet(sgqlc.types.Type, Node, Teaser, CoreTeaser):\n    __schema__ = audiothek_schema\n    __field_names__ = ('row_id', 'publication_service_id', 'editorial_category_id', 'core_id', 'core_document', 'image_collection_id', 'last_item_modified', 'last_item_added', 'publication_service', 'items', 'groupings_by_programset_id', 'groupings_by_show_id',\n                       'categories_to_program_sets_by_program_set_core_id', 'categories_to_program_sets_by_program_set_core_id_list', 'editorial_category', 'images', 'images_list', 'editorial_categories', 'editorial_categories_list', 'show_type', 'description', '_links', 'core')\n    row_id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='rowId')\n    publication_service_id = sgqlc.types.Field(\n        sgqlc.types.non_null(Int), graphql_name='publicationServiceId')\n    editorial_category_id = sgqlc.types.Field(\n        String, graphql_name='editorialCategoryId')\n    core_id = sgqlc.types.Field(String, graphql_name='coreId')\n    core_document = sgqlc.types.Field(JSON, graphql_name='coreDocument')\n    image_collection_id = sgqlc.types.Field(\n        String, graphql_name='imageCollectionId')\n    last_item_modified = sgqlc.types.Field(\n        Datetime, graphql_name='lastItemModified')\n    last_item_added = sgqlc.types.Field(Datetime, graphql_name='lastItemAdded')\n    publication_service = sgqlc.types.Field(\n        'PublicationService', graphql_name='publicationService')\n    items = sgqlc.types.Field(sgqlc.types.non_null(ItemsConnection), graphql_name='items', args=sgqlc.types.ArgDict((\n        ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)),\n        ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)),\n        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),\n        ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)),\n        ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)),\n        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(\n            ItemsOrderBy)), graphql_name='orderBy', default=('PRIMARY_KEY_ASC',))),\n        ('condition', sgqlc.types.Arg(ItemCondition,\n         graphql_name='condition', default=None)),\n        ('filter', sgqlc.types.Arg(ItemFilter, graphql_name='filter', default=None)),\n    ))\n    )\n    groupings_by_programset_id = sgqlc.types.Field(sgqlc.types.non_null(GroupingsConnection), graphql_name='groupingsByProgramsetId', args=sgqlc.types.ArgDict((\n        ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)),\n        ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)),\n        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),\n        ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)),\n        ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)),\n        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(\n            GroupingsOrderBy)), graphql_name='orderBy', default=('PRIMARY_KEY_ASC',))),\n        ('condition', sgqlc.types.Arg(GroupingCondition,\n         graphql_name='condition', default=None)),\n        ('filter', sgqlc.types.Arg(GroupingFilter,\n         graphql_name='filter', default=None)),\n    ))\n    )\n    groupings_by_show_id = sgqlc.types.Field(sgqlc.types.non_null(GroupingsConnection), graphql_name='groupingsByShowId', args=sgqlc.types.ArgDict((\n        ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)),\n        ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)),\n        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),\n        ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)),\n        ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)),\n        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(\n            GroupingsOrderBy)), graphql_name='orderBy', default=('PRIMARY_KEY_ASC',))),\n        ('condition', sgqlc.types.Arg(GroupingCondition,\n         graphql_name='condition', default=None)),\n        ('filter', sgqlc.types.Arg(GroupingFilter,\n         graphql_name='filter', default=None)),\n    ))\n    )\n    categories_to_program_sets_by_program_set_core_id = sgqlc.types.Field(sgqlc.types.non_null(CategoriesToProgramSetsConnection), graphql_name='categoriesToProgramSetsByProgramSetCoreId', args=sgqlc.types.ArgDict((\n        ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)),\n        ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)),\n        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),\n        ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)),\n        ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)),\n        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(\n            CategoriesToProgramSetsOrderBy)), graphql_name='orderBy', default=('PRIMARY_KEY_ASC',))),\n        ('condition', sgqlc.types.Arg(CategoriesToProgramSetCondition,\n         graphql_name='condition', default=None)),\n        ('filter', sgqlc.types.Arg(CategoriesToProgramSetFilter,\n         graphql_name='filter', default=None)),\n    ))\n    )\n    categories_to_program_sets_by_program_set_core_id_list = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(CategoriesToProgramSet))), graphql_name='categoriesToProgramSetsByProgramSetCoreIdList', args=sgqlc.types.ArgDict((\n        ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)),\n        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),\n        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(\n            CategoriesToProgramSetsOrderBy)), graphql_name='orderBy', default=None)),\n        ('condition', sgqlc.types.Arg(CategoriesToProgramSetCondition,\n         graphql_name='condition', default=None)),\n        ('filter', sgqlc.types.Arg(CategoriesToProgramSetFilter,\n         graphql_name='filter', default=None)),\n    ))\n    )\n    editorial_category = sgqlc.types.Field(\n        EditorialCategory, graphql_name='editorialCategory')\n    images = sgqlc.types.Field(sgqlc.types.non_null(ImagesCollectionsBinariesViewsConnection), graphql_name='images', args=sgqlc.types.ArgDict((\n        ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)),\n        ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)),\n        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),\n        ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)),\n        ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)),\n    ))\n    )\n    images_list = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null(ImagesCollectionsBinariesView)), graphql_name='imagesList', args=sgqlc.types.ArgDict((\n        ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)),\n        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),\n    ))\n    )\n    editorial_categories = sgqlc.types.Field(sgqlc.types.non_null(ProgramSetEditorialCategoriesManyToManyConnection), graphql_name='editorialCategories', args=sgqlc.types.ArgDict((\n        ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)),\n        ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)),\n        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),\n        ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)),\n        ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)),\n        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(\n            EditorialCategoriesOrderBy)), graphql_name='orderBy', default=('ORDER_ASC',))),\n        ('condition', sgqlc.types.Arg(EditorialCategoryCondition,\n         graphql_name='condition', default=None)),\n        ('filter', sgqlc.types.Arg(EditorialCategoryFilter,\n         graphql_name='filter', default=None)),\n    ))\n    )\n    editorial_categories_list = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(EditorialCategory))), graphql_name='editorialCategoriesList', args=sgqlc.types.ArgDict((\n        ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)),\n        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),\n        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(\n            EditorialCategoriesOrderBy)), graphql_name='orderBy', default=None)),\n        ('condition', sgqlc.types.Arg(EditorialCategoryCondition,\n         graphql_name='condition', default=None)),\n        ('filter', sgqlc.types.Arg(EditorialCategoryFilter,\n         graphql_name='filter', default=None)),\n    ))\n    )\n    show_type = sgqlc.types.Field(\n        sgqlc.types.non_null(ShowType), graphql_name='showType')\n    description = sgqlc.types.Field(HTML, graphql_name='description')\n    _links = sgqlc.types.Field(JSON, graphql_name='_links')\n    core = sgqlc.types.Field(JSON, graphql_name='core', args=sgqlc.types.ArgDict((\n        ('filter', sgqlc.types.Arg(String, graphql_name='filter', default=None)),\n        ('key', sgqlc.types.Arg(String, graphql_name='key', default=None)),\n    ))\n    )\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSet.__field_names__","title":"<code>__field_names__ = ('row_id', 'publication_service_id', 'editorial_category_id', 'core_id', 'core_document', 'image_collection_id', 'last_item_modified', 'last_item_added', 'publication_service', 'items', 'groupings_by_programset_id', 'groupings_by_show_id', 'categories_to_program_sets_by_program_set_core_id', 'categories_to_program_sets_by_program_set_core_id_list', 'editorial_category', 'images', 'images_list', 'editorial_categories', 'editorial_categories_list', 'show_type', 'description', '_links', 'core')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSet.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSet.categories_to_program_sets_by_program_set_core_id","title":"<code>categories_to_program_sets_by_program_set_core_id = sgqlc.types.Field(sgqlc.types.non_null(CategoriesToProgramSetsConnection), graphql_name='categoriesToProgramSetsByProgramSetCoreId', args=sgqlc.types.ArgDict((('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)), ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)), ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)), ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)), ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)), ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(CategoriesToProgramSetsOrderBy)), graphql_name='orderBy', default=('PRIMARY_KEY_ASC'))), ('condition', sgqlc.types.Arg(CategoriesToProgramSetCondition, graphql_name='condition', default=None)), ('filter', sgqlc.types.Arg(CategoriesToProgramSetFilter, graphql_name='filter', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSet.categories_to_program_sets_by_program_set_core_id_list","title":"<code>categories_to_program_sets_by_program_set_core_id_list = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(CategoriesToProgramSet))), graphql_name='categoriesToProgramSetsByProgramSetCoreIdList', args=sgqlc.types.ArgDict((('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)), ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)), ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(CategoriesToProgramSetsOrderBy)), graphql_name='orderBy', default=None)), ('condition', sgqlc.types.Arg(CategoriesToProgramSetCondition, graphql_name='condition', default=None)), ('filter', sgqlc.types.Arg(CategoriesToProgramSetFilter, graphql_name='filter', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSet.core","title":"<code>core = sgqlc.types.Field(JSON, graphql_name='core', args=sgqlc.types.ArgDict((('filter', sgqlc.types.Arg(String, graphql_name='filter', default=None)), ('key', sgqlc.types.Arg(String, graphql_name='key', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSet.core_document","title":"<code>core_document = sgqlc.types.Field(JSON, graphql_name='coreDocument')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSet.core_id","title":"<code>core_id = sgqlc.types.Field(String, graphql_name='coreId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSet.description","title":"<code>description = sgqlc.types.Field(HTML, graphql_name='description')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSet.editorial_categories","title":"<code>editorial_categories = sgqlc.types.Field(sgqlc.types.non_null(ProgramSetEditorialCategoriesManyToManyConnection), graphql_name='editorialCategories', args=sgqlc.types.ArgDict((('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)), ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)), ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)), ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)), ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)), ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(EditorialCategoriesOrderBy)), graphql_name='orderBy', default=('ORDER_ASC'))), ('condition', sgqlc.types.Arg(EditorialCategoryCondition, graphql_name='condition', default=None)), ('filter', sgqlc.types.Arg(EditorialCategoryFilter, graphql_name='filter', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSet.editorial_categories_list","title":"<code>editorial_categories_list = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(EditorialCategory))), graphql_name='editorialCategoriesList', args=sgqlc.types.ArgDict((('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)), ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)), ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(EditorialCategoriesOrderBy)), graphql_name='orderBy', default=None)), ('condition', sgqlc.types.Arg(EditorialCategoryCondition, graphql_name='condition', default=None)), ('filter', sgqlc.types.Arg(EditorialCategoryFilter, graphql_name='filter', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSet.editorial_category","title":"<code>editorial_category = sgqlc.types.Field(EditorialCategory, graphql_name='editorialCategory')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSet.editorial_category_id","title":"<code>editorial_category_id = sgqlc.types.Field(String, graphql_name='editorialCategoryId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSet.groupings_by_programset_id","title":"<code>groupings_by_programset_id = sgqlc.types.Field(sgqlc.types.non_null(GroupingsConnection), graphql_name='groupingsByProgramsetId', args=sgqlc.types.ArgDict((('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)), ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)), ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)), ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)), ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)), ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(GroupingsOrderBy)), graphql_name='orderBy', default=('PRIMARY_KEY_ASC'))), ('condition', sgqlc.types.Arg(GroupingCondition, graphql_name='condition', default=None)), ('filter', sgqlc.types.Arg(GroupingFilter, graphql_name='filter', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSet.groupings_by_show_id","title":"<code>groupings_by_show_id = sgqlc.types.Field(sgqlc.types.non_null(GroupingsConnection), graphql_name='groupingsByShowId', args=sgqlc.types.ArgDict((('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)), ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)), ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)), ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)), ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)), ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(GroupingsOrderBy)), graphql_name='orderBy', default=('PRIMARY_KEY_ASC'))), ('condition', sgqlc.types.Arg(GroupingCondition, graphql_name='condition', default=None)), ('filter', sgqlc.types.Arg(GroupingFilter, graphql_name='filter', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSet.image_collection_id","title":"<code>image_collection_id = sgqlc.types.Field(String, graphql_name='imageCollectionId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSet.images","title":"<code>images = sgqlc.types.Field(sgqlc.types.non_null(ImagesCollectionsBinariesViewsConnection), graphql_name='images', args=sgqlc.types.ArgDict((('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)), ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)), ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)), ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)), ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSet.images_list","title":"<code>images_list = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null(ImagesCollectionsBinariesView)), graphql_name='imagesList', args=sgqlc.types.ArgDict((('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)), ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSet.items","title":"<code>items = sgqlc.types.Field(sgqlc.types.non_null(ItemsConnection), graphql_name='items', args=sgqlc.types.ArgDict((('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)), ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)), ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)), ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)), ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)), ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(ItemsOrderBy)), graphql_name='orderBy', default=('PRIMARY_KEY_ASC'))), ('condition', sgqlc.types.Arg(ItemCondition, graphql_name='condition', default=None)), ('filter', sgqlc.types.Arg(ItemFilter, graphql_name='filter', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSet.last_item_added","title":"<code>last_item_added = sgqlc.types.Field(Datetime, graphql_name='lastItemAdded')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSet.last_item_modified","title":"<code>last_item_modified = sgqlc.types.Field(Datetime, graphql_name='lastItemModified')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSet.publication_service","title":"<code>publication_service = sgqlc.types.Field('PublicationService', graphql_name='publicationService')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSet.publication_service_id","title":"<code>publication_service_id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='publicationServiceId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSet.row_id","title":"<code>row_id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='rowId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSet.show_type","title":"<code>show_type = sgqlc.types.Field(sgqlc.types.non_null(ShowType), graphql_name='showType')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetCondition","title":"<code>ProgramSetCondition</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class ProgramSetCondition(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('id', 'publication_service_id', 'title', 'synopsis', 'number_of_elements', 'image',\n                       'editorial_category_id', 'core_id', 'core_document', 'image_collection_id', 'last_item_modified', 'last_item_added')\n    id = sgqlc.types.Field(Int, graphql_name='id')\n    publication_service_id = sgqlc.types.Field(\n        Int, graphql_name='publicationServiceId')\n    title = sgqlc.types.Field(String, graphql_name='title')\n    synopsis = sgqlc.types.Field(String, graphql_name='synopsis')\n    number_of_elements = sgqlc.types.Field(\n        Int, graphql_name='numberOfElements')\n    image = sgqlc.types.Field(ImageTypeInput, graphql_name='image')\n    editorial_category_id = sgqlc.types.Field(\n        String, graphql_name='editorialCategoryId')\n    core_id = sgqlc.types.Field(String, graphql_name='coreId')\n    core_document = sgqlc.types.Field(JSON, graphql_name='coreDocument')\n    image_collection_id = sgqlc.types.Field(\n        String, graphql_name='imageCollectionId')\n    last_item_modified = sgqlc.types.Field(\n        Datetime, graphql_name='lastItemModified')\n    last_item_added = sgqlc.types.Field(Datetime, graphql_name='lastItemAdded')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetCondition.__field_names__","title":"<code>__field_names__ = ('id', 'publication_service_id', 'title', 'synopsis', 'number_of_elements', 'image', 'editorial_category_id', 'core_id', 'core_document', 'image_collection_id', 'last_item_modified', 'last_item_added')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetCondition.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetCondition.core_document","title":"<code>core_document = sgqlc.types.Field(JSON, graphql_name='coreDocument')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetCondition.core_id","title":"<code>core_id = sgqlc.types.Field(String, graphql_name='coreId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetCondition.editorial_category_id","title":"<code>editorial_category_id = sgqlc.types.Field(String, graphql_name='editorialCategoryId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetCondition.id","title":"<code>id = sgqlc.types.Field(Int, graphql_name='id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetCondition.image","title":"<code>image = sgqlc.types.Field(ImageTypeInput, graphql_name='image')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetCondition.image_collection_id","title":"<code>image_collection_id = sgqlc.types.Field(String, graphql_name='imageCollectionId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetCondition.last_item_added","title":"<code>last_item_added = sgqlc.types.Field(Datetime, graphql_name='lastItemAdded')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetCondition.last_item_modified","title":"<code>last_item_modified = sgqlc.types.Field(Datetime, graphql_name='lastItemModified')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetCondition.number_of_elements","title":"<code>number_of_elements = sgqlc.types.Field(Int, graphql_name='numberOfElements')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetCondition.publication_service_id","title":"<code>publication_service_id = sgqlc.types.Field(Int, graphql_name='publicationServiceId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetCondition.synopsis","title":"<code>synopsis = sgqlc.types.Field(String, graphql_name='synopsis')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetCondition.title","title":"<code>title = sgqlc.types.Field(String, graphql_name='title')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetConnection","title":"<code>ProgramSetConnection</code>","text":"<p>         Bases: <code>sgqlc.types.relay.Connection</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class ProgramSetConnection(sgqlc.types.relay.Connection):\n    __schema__ = audiothek_schema\n    __field_names__ = ('count', 'edges', 'nodes', 'page_info')\n    count = sgqlc.types.Field(Int, graphql_name='count')\n    edges = sgqlc.types.Field(sgqlc.types.list_of(\n        'ProgramSetEdge'), graphql_name='edges')\n    nodes = sgqlc.types.Field(sgqlc.types.list_of(\n        'ProgramSet'), graphql_name='nodes')\n    page_info = sgqlc.types.Field(\n        sgqlc.types.non_null(PageInfo), graphql_name='pageInfo')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetConnection.__field_names__","title":"<code>__field_names__ = ('count', 'edges', 'nodes', 'page_info')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetConnection.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetConnection.count","title":"<code>count = sgqlc.types.Field(Int, graphql_name='count')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetConnection.edges","title":"<code>edges = sgqlc.types.Field(sgqlc.types.list_of('ProgramSetEdge'), graphql_name='edges')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetConnection.nodes","title":"<code>nodes = sgqlc.types.Field(sgqlc.types.list_of('ProgramSet'), graphql_name='nodes')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetConnection.page_info","title":"<code>page_info = sgqlc.types.Field(sgqlc.types.non_null(PageInfo), graphql_name='pageInfo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetConnectionFilterB","title":"<code>ProgramSetConnectionFilterB</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class ProgramSetConnectionFilterB(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('id', 'empty')\n    id = sgqlc.types.Field(IntFilterB, graphql_name='id')\n    empty = sgqlc.types.Field(BooleanFilterB, graphql_name='empty')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetConnectionFilterB.__field_names__","title":"<code>__field_names__ = ('id', 'empty')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetConnectionFilterB.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetConnectionFilterB.empty","title":"<code>empty = sgqlc.types.Field(BooleanFilterB, graphql_name='empty')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetConnectionFilterB.id","title":"<code>id = sgqlc.types.Field(IntFilterB, graphql_name='id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetCreateInput","title":"<code>ProgramSetCreateInput</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class ProgramSetCreateInput(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('type', 'id')\n    type = sgqlc.types.Field(String, graphql_name='type')\n    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetCreateInput.__field_names__","title":"<code>__field_names__ = ('type', 'id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetCreateInput.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetCreateInput.id","title":"<code>id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetCreateInput.type","title":"<code>type = sgqlc.types.Field(String, graphql_name='type')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetEdge","title":"<code>ProgramSetEdge</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class ProgramSetEdge(sgqlc.types.Type):\n    __schema__ = audiothek_schema\n    __field_names__ = ('cursor', 'node')\n    cursor = sgqlc.types.Field(\n        sgqlc.types.non_null(String), graphql_name='cursor')\n    node = sgqlc.types.Field('ProgramSet', graphql_name='node')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetEdge.__field_names__","title":"<code>__field_names__ = ('cursor', 'node')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetEdge.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetEdge.cursor","title":"<code>cursor = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='cursor')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetEdge.node","title":"<code>node = sgqlc.types.Field('ProgramSet', graphql_name='node')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetEditorialCategoriesManyToManyConnection","title":"<code>ProgramSetEditorialCategoriesManyToManyConnection</code>","text":"<p>         Bases: <code>sgqlc.types.relay.Connection</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class ProgramSetEditorialCategoriesManyToManyConnection(sgqlc.types.relay.Connection):\n    __schema__ = audiothek_schema\n    __field_names__ = ('nodes', 'edges', 'page_info', 'total_count')\n    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(\n        sgqlc.types.non_null('EditorialCategory'))), graphql_name='nodes')\n    edges = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(\n        'ProgramSetEditorialCategoriesManyToManyEdge'))), graphql_name='edges')\n    page_info = sgqlc.types.Field(\n        sgqlc.types.non_null(PageInfo), graphql_name='pageInfo')\n    total_count = sgqlc.types.Field(\n        sgqlc.types.non_null(Int), graphql_name='totalCount')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetEditorialCategoriesManyToManyConnection.__field_names__","title":"<code>__field_names__ = ('nodes', 'edges', 'page_info', 'total_count')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetEditorialCategoriesManyToManyConnection.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetEditorialCategoriesManyToManyConnection.edges","title":"<code>edges = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('ProgramSetEditorialCategoriesManyToManyEdge'))), graphql_name='edges')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetEditorialCategoriesManyToManyConnection.nodes","title":"<code>nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('EditorialCategory'))), graphql_name='nodes')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetEditorialCategoriesManyToManyConnection.page_info","title":"<code>page_info = sgqlc.types.Field(sgqlc.types.non_null(PageInfo), graphql_name='pageInfo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetEditorialCategoriesManyToManyConnection.total_count","title":"<code>total_count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='totalCount')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetEditorialCategoriesManyToManyEdge","title":"<code>ProgramSetEditorialCategoriesManyToManyEdge</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class ProgramSetEditorialCategoriesManyToManyEdge(sgqlc.types.Type):\n    __schema__ = audiothek_schema\n    __field_names__ = ('cursor', 'node')\n    cursor = sgqlc.types.Field(Cursor, graphql_name='cursor')\n    node = sgqlc.types.Field(sgqlc.types.non_null(\n        'EditorialCategory'), graphql_name='node')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetEditorialCategoriesManyToManyEdge.__field_names__","title":"<code>__field_names__ = ('cursor', 'node')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetEditorialCategoriesManyToManyEdge.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetEditorialCategoriesManyToManyEdge.cursor","title":"<code>cursor = sgqlc.types.Field(Cursor, graphql_name='cursor')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetEditorialCategoriesManyToManyEdge.node","title":"<code>node = sgqlc.types.Field(sgqlc.types.non_null('EditorialCategory'), graphql_name='node')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetFilter","title":"<code>ProgramSetFilter</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class ProgramSetFilter(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('id', 'publication_service_id', 'title', 'synopsis', 'number_of_elements', 'editorial_category_id',\n                       'core_id', 'core_document', 'image_collection_id', 'last_item_modified', 'last_item_added', 'image', 'and_', 'or_', 'not_')\n    id = sgqlc.types.Field(IntFilter, graphql_name='id')\n    publication_service_id = sgqlc.types.Field(\n        IntFilter, graphql_name='publicationServiceId')\n    title = sgqlc.types.Field('StringFilter', graphql_name='title')\n    synopsis = sgqlc.types.Field('StringFilter', graphql_name='synopsis')\n    number_of_elements = sgqlc.types.Field(\n        IntFilter, graphql_name='numberOfElements')\n    editorial_category_id = sgqlc.types.Field(\n        'StringFilter', graphql_name='editorialCategoryId')\n    core_id = sgqlc.types.Field('StringFilter', graphql_name='coreId')\n    core_document = sgqlc.types.Field(JSONFilter, graphql_name='coreDocument')\n    image_collection_id = sgqlc.types.Field(\n        'StringFilter', graphql_name='imageCollectionId')\n    last_item_modified = sgqlc.types.Field(\n        DatetimeFilter, graphql_name='lastItemModified')\n    last_item_added = sgqlc.types.Field(\n        DatetimeFilter, graphql_name='lastItemAdded')\n    image = sgqlc.types.Field(ImageTypeFilter, graphql_name='image')\n    and_ = sgqlc.types.Field(sgqlc.types.list_of(\n        sgqlc.types.non_null('ProgramSetFilter')), graphql_name='and')\n    or_ = sgqlc.types.Field(sgqlc.types.list_of(\n        sgqlc.types.non_null('ProgramSetFilter')), graphql_name='or')\n    not_ = sgqlc.types.Field('ProgramSetFilter', graphql_name='not')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetFilter.__field_names__","title":"<code>__field_names__ = ('id', 'publication_service_id', 'title', 'synopsis', 'number_of_elements', 'editorial_category_id', 'core_id', 'core_document', 'image_collection_id', 'last_item_modified', 'last_item_added', 'image', 'and_', 'or_', 'not_')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetFilter.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetFilter.and_","title":"<code>and_ = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('ProgramSetFilter')), graphql_name='and')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetFilter.core_document","title":"<code>core_document = sgqlc.types.Field(JSONFilter, graphql_name='coreDocument')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetFilter.core_id","title":"<code>core_id = sgqlc.types.Field('StringFilter', graphql_name='coreId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetFilter.editorial_category_id","title":"<code>editorial_category_id = sgqlc.types.Field('StringFilter', graphql_name='editorialCategoryId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetFilter.id","title":"<code>id = sgqlc.types.Field(IntFilter, graphql_name='id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetFilter.image","title":"<code>image = sgqlc.types.Field(ImageTypeFilter, graphql_name='image')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetFilter.image_collection_id","title":"<code>image_collection_id = sgqlc.types.Field('StringFilter', graphql_name='imageCollectionId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetFilter.last_item_added","title":"<code>last_item_added = sgqlc.types.Field(DatetimeFilter, graphql_name='lastItemAdded')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetFilter.last_item_modified","title":"<code>last_item_modified = sgqlc.types.Field(DatetimeFilter, graphql_name='lastItemModified')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetFilter.not_","title":"<code>not_ = sgqlc.types.Field('ProgramSetFilter', graphql_name='not')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetFilter.number_of_elements","title":"<code>number_of_elements = sgqlc.types.Field(IntFilter, graphql_name='numberOfElements')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetFilter.or_","title":"<code>or_ = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('ProgramSetFilter')), graphql_name='or')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetFilter.publication_service_id","title":"<code>publication_service_id = sgqlc.types.Field(IntFilter, graphql_name='publicationServiceId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetFilter.synopsis","title":"<code>synopsis = sgqlc.types.Field('StringFilter', graphql_name='synopsis')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetFilter.title","title":"<code>title = sgqlc.types.Field('StringFilter', graphql_name='title')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetFilterB","title":"<code>ProgramSetFilterB</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class ProgramSetFilterB(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('id',)\n    id = sgqlc.types.Field(IntFilterB, graphql_name='id')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetFilterB.__field_names__","title":"<code>__field_names__ = ('id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetFilterB.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetFilterB.id","title":"<code>id = sgqlc.types.Field(IntFilterB, graphql_name='id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetRelationFilterB","title":"<code>ProgramSetRelationFilterB</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class ProgramSetRelationFilterB(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('id',)\n    id = sgqlc.types.Field(IntFilterB, graphql_name='id')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetRelationFilterB.__field_names__","title":"<code>__field_names__ = ('id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetRelationFilterB.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetRelationFilterB.id","title":"<code>id = sgqlc.types.Field(IntFilterB, graphql_name='id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSection","title":"<code>ProgramSetSection</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code>, <code>Section</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class ProgramSetSection(sgqlc.types.Type, Section):\n    __schema__ = audiothek_schema\n    __field_names__ = ('key',)\n    key = sgqlc.types.Field(String, graphql_name='key')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSection.__field_names__","title":"<code>__field_names__ = ('key')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSection.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSection.key","title":"<code>key = sgqlc.types.Field(String, graphql_name='key')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSortOrder","title":"<code>ProgramSetSortOrder</code>","text":"<p>         Bases: <code>sgqlc.types.Enum</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class ProgramSetSortOrder(sgqlc.types.Enum):\n    __schema__ = audiothek_schema\n    __choices__ = ('ID_ASC', 'ID_DESC')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSortOrder.__choices__","title":"<code>__choices__ = ('ID_ASC', 'ID_DESC')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSortOrder.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscription","title":"<code>ProgramSetSubscription</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code>, <code>ProgramSetSubscriptionInterface</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class ProgramSetSubscription(sgqlc.types.Type, ProgramSetSubscriptionInterface):\n    __schema__ = audiothek_schema\n    __field_names__ = ()\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscription.__field_names__","title":"<code>__field_names__ = ()</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscription.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionConnection","title":"<code>ProgramSetSubscriptionConnection</code>","text":"<p>         Bases: <code>sgqlc.types.relay.Connection</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class ProgramSetSubscriptionConnection(sgqlc.types.relay.Connection):\n    __schema__ = audiothek_schema\n    __field_names__ = ('count', 'edges', 'nodes', 'page_info')\n    count = sgqlc.types.Field(Int, graphql_name='count')\n    edges = sgqlc.types.Field(sgqlc.types.list_of(\n        'ProgramSetSubscriptionEdge'), graphql_name='edges')\n    nodes = sgqlc.types.Field(sgqlc.types.list_of(\n        'ProgramSetSubscriptionInterface'), graphql_name='nodes')\n    page_info = sgqlc.types.Field(\n        sgqlc.types.non_null(PageInfo), graphql_name='pageInfo')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionConnection.__field_names__","title":"<code>__field_names__ = ('count', 'edges', 'nodes', 'page_info')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionConnection.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionConnection.count","title":"<code>count = sgqlc.types.Field(Int, graphql_name='count')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionConnection.edges","title":"<code>edges = sgqlc.types.Field(sgqlc.types.list_of('ProgramSetSubscriptionEdge'), graphql_name='edges')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionConnection.nodes","title":"<code>nodes = sgqlc.types.Field(sgqlc.types.list_of('ProgramSetSubscriptionInterface'), graphql_name='nodes')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionConnection.page_info","title":"<code>page_info = sgqlc.types.Field(sgqlc.types.non_null(PageInfo), graphql_name='pageInfo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionConnectionFilterB","title":"<code>ProgramSetSubscriptionConnectionFilterB</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class ProgramSetSubscriptionConnectionFilterB(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('created_at', 'last_visited_at',\n                       'modified_at', 'subscribed_at', 'empty')\n    created_at = sgqlc.types.Field(DateFilterB, graphql_name='createdAt')\n    last_visited_at = sgqlc.types.Field(\n        DateFilterB, graphql_name='lastVisitedAt')\n    modified_at = sgqlc.types.Field(DateFilterB, graphql_name='modifiedAt')\n    subscribed_at = sgqlc.types.Field(DateFilterB, graphql_name='subscribedAt')\n    empty = sgqlc.types.Field(BooleanFilterB, graphql_name='empty')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionConnectionFilterB.__field_names__","title":"<code>__field_names__ = ('created_at', 'last_visited_at', 'modified_at', 'subscribed_at', 'empty')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionConnectionFilterB.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionConnectionFilterB.created_at","title":"<code>created_at = sgqlc.types.Field(DateFilterB, graphql_name='createdAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionConnectionFilterB.empty","title":"<code>empty = sgqlc.types.Field(BooleanFilterB, graphql_name='empty')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionConnectionFilterB.last_visited_at","title":"<code>last_visited_at = sgqlc.types.Field(DateFilterB, graphql_name='lastVisitedAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionConnectionFilterB.modified_at","title":"<code>modified_at = sgqlc.types.Field(DateFilterB, graphql_name='modifiedAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionConnectionFilterB.subscribed_at","title":"<code>subscribed_at = sgqlc.types.Field(DateFilterB, graphql_name='subscribedAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionCreateInput","title":"<code>ProgramSetSubscriptionCreateInput</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class ProgramSetSubscriptionCreateInput(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('type', 'last_visited_at',\n                       'subscribed_at', 'subscribed_program_set')\n    type = sgqlc.types.Field(String, graphql_name='type')\n    last_visited_at = sgqlc.types.Field(DateTime, graphql_name='lastVisitedAt')\n    subscribed_at = sgqlc.types.Field(DateTime, graphql_name='subscribedAt')\n    subscribed_program_set = sgqlc.types.Field(sgqlc.types.non_null(\n        ProgramSetCreateInput), graphql_name='subscribedProgramSet')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionCreateInput.__field_names__","title":"<code>__field_names__ = ('type', 'last_visited_at', 'subscribed_at', 'subscribed_program_set')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionCreateInput.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionCreateInput.last_visited_at","title":"<code>last_visited_at = sgqlc.types.Field(DateTime, graphql_name='lastVisitedAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionCreateInput.subscribed_at","title":"<code>subscribed_at = sgqlc.types.Field(DateTime, graphql_name='subscribedAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionCreateInput.subscribed_program_set","title":"<code>subscribed_program_set = sgqlc.types.Field(sgqlc.types.non_null(ProgramSetCreateInput), graphql_name='subscribedProgramSet')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionCreateInput.type","title":"<code>type = sgqlc.types.Field(String, graphql_name='type')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionEdge","title":"<code>ProgramSetSubscriptionEdge</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class ProgramSetSubscriptionEdge(sgqlc.types.Type):\n    __schema__ = audiothek_schema\n    __field_names__ = ('cursor', 'node')\n    cursor = sgqlc.types.Field(\n        sgqlc.types.non_null(String), graphql_name='cursor')\n    node = sgqlc.types.Field(\n        'ProgramSetSubscriptionInterface', graphql_name='node')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionEdge.__field_names__","title":"<code>__field_names__ = ('cursor', 'node')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionEdge.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionEdge.cursor","title":"<code>cursor = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='cursor')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionEdge.node","title":"<code>node = sgqlc.types.Field('ProgramSetSubscriptionInterface', graphql_name='node')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionFilterB","title":"<code>ProgramSetSubscriptionFilterB</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class ProgramSetSubscriptionFilterB(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('created_at', 'last_visited_at',\n                       'modified_at', 'subscribed_at')\n    created_at = sgqlc.types.Field(DateFilterB, graphql_name='createdAt')\n    last_visited_at = sgqlc.types.Field(\n        DateFilterB, graphql_name='lastVisitedAt')\n    modified_at = sgqlc.types.Field(DateFilterB, graphql_name='modifiedAt')\n    subscribed_at = sgqlc.types.Field(DateFilterB, graphql_name='subscribedAt')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionFilterB.__field_names__","title":"<code>__field_names__ = ('created_at', 'last_visited_at', 'modified_at', 'subscribed_at')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionFilterB.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionFilterB.created_at","title":"<code>created_at = sgqlc.types.Field(DateFilterB, graphql_name='createdAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionFilterB.last_visited_at","title":"<code>last_visited_at = sgqlc.types.Field(DateFilterB, graphql_name='lastVisitedAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionFilterB.modified_at","title":"<code>modified_at = sgqlc.types.Field(DateFilterB, graphql_name='modifiedAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionFilterB.subscribed_at","title":"<code>subscribed_at = sgqlc.types.Field(DateFilterB, graphql_name='subscribedAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionInterface","title":"<code>ProgramSetSubscriptionInterface</code>","text":"<p>         Bases: <code>sgqlc.types.Interface</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class ProgramSetSubscriptionInterface(sgqlc.types.Interface):\n    __schema__ = audiothek_schema\n    __field_names__ = ('id', 'base_id_prefix', 'belongs_to', 'created_at',\n                       'last_visited_at', 'modified_at', 'subscribed_at', 'subscribed_program_set')\n    id = sgqlc.types.Field(sgqlc.types.non_null(ID), graphql_name='id')\n    base_id_prefix = sgqlc.types.Field(\n        sgqlc.types.non_null(String), graphql_name='baseIdPrefix')\n    belongs_to = sgqlc.types.Field(\n        'SubscriptionListInterface', graphql_name='belongsTo')\n    created_at = sgqlc.types.Field(DateTime, graphql_name='createdAt')\n    last_visited_at = sgqlc.types.Field(DateTime, graphql_name='lastVisitedAt')\n    modified_at = sgqlc.types.Field(DateTime, graphql_name='modifiedAt')\n    subscribed_at = sgqlc.types.Field(DateTime, graphql_name='subscribedAt')\n    subscribed_program_set = sgqlc.types.Field(\n        'ProgramSet', graphql_name='subscribedProgramSet')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionInterface.__field_names__","title":"<code>__field_names__ = ('id', 'base_id_prefix', 'belongs_to', 'created_at', 'last_visited_at', 'modified_at', 'subscribed_at', 'subscribed_program_set')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionInterface.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionInterface.base_id_prefix","title":"<code>base_id_prefix = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='baseIdPrefix')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionInterface.belongs_to","title":"<code>belongs_to = sgqlc.types.Field('SubscriptionListInterface', graphql_name='belongsTo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionInterface.created_at","title":"<code>created_at = sgqlc.types.Field(DateTime, graphql_name='createdAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionInterface.id","title":"<code>id = sgqlc.types.Field(sgqlc.types.non_null(ID), graphql_name='id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionInterface.last_visited_at","title":"<code>last_visited_at = sgqlc.types.Field(DateTime, graphql_name='lastVisitedAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionInterface.modified_at","title":"<code>modified_at = sgqlc.types.Field(DateTime, graphql_name='modifiedAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionInterface.subscribed_at","title":"<code>subscribed_at = sgqlc.types.Field(DateTime, graphql_name='subscribedAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionInterface.subscribed_program_set","title":"<code>subscribed_program_set = sgqlc.types.Field('ProgramSet', graphql_name='subscribedProgramSet')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionPayload","title":"<code>ProgramSetSubscriptionPayload</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class ProgramSetSubscriptionPayload(sgqlc.types.Type):\n    __schema__ = audiothek_schema\n    __field_names__ = ('client_mutation_id',\n                       'changed_program_set_subscription')\n    client_mutation_id = sgqlc.types.Field(\n        String, graphql_name='clientMutationId')\n    changed_program_set_subscription = sgqlc.types.Field(\n        'ProgramSetSubscription', graphql_name='changedProgramSetSubscription')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionPayload.__field_names__","title":"<code>__field_names__ = ('client_mutation_id', 'changed_program_set_subscription')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionPayload.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionPayload.changed_program_set_subscription","title":"<code>changed_program_set_subscription = sgqlc.types.Field('ProgramSetSubscription', graphql_name='changedProgramSetSubscription')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionPayload.client_mutation_id","title":"<code>client_mutation_id = sgqlc.types.Field(String, graphql_name='clientMutationId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionRelationFilterB","title":"<code>ProgramSetSubscriptionRelationFilterB</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class ProgramSetSubscriptionRelationFilterB(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('created_at', 'last_visited_at',\n                       'modified_at', 'subscribed_at')\n    created_at = sgqlc.types.Field(DateFilterB, graphql_name='createdAt')\n    last_visited_at = sgqlc.types.Field(\n        DateFilterB, graphql_name='lastVisitedAt')\n    modified_at = sgqlc.types.Field(DateFilterB, graphql_name='modifiedAt')\n    subscribed_at = sgqlc.types.Field(DateFilterB, graphql_name='subscribedAt')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionRelationFilterB.__field_names__","title":"<code>__field_names__ = ('created_at', 'last_visited_at', 'modified_at', 'subscribed_at')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionRelationFilterB.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionRelationFilterB.created_at","title":"<code>created_at = sgqlc.types.Field(DateFilterB, graphql_name='createdAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionRelationFilterB.last_visited_at","title":"<code>last_visited_at = sgqlc.types.Field(DateFilterB, graphql_name='lastVisitedAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionRelationFilterB.modified_at","title":"<code>modified_at = sgqlc.types.Field(DateFilterB, graphql_name='modifiedAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionRelationFilterB.subscribed_at","title":"<code>subscribed_at = sgqlc.types.Field(DateFilterB, graphql_name='subscribedAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionRemoveAllListInput","title":"<code>ProgramSetSubscriptionRemoveAllListInput</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class ProgramSetSubscriptionRemoveAllListInput(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('client_mutation_id', 'program_set_subscription')\n    client_mutation_id = sgqlc.types.Field(\n        String, graphql_name='clientMutationId')\n    program_set_subscription = sgqlc.types.Field(\n        sgqlc.types.non_null(ID), graphql_name='programSetSubscription')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionRemoveAllListInput.__field_names__","title":"<code>__field_names__ = ('client_mutation_id', 'program_set_subscription')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionRemoveAllListInput.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionRemoveAllListInput.client_mutation_id","title":"<code>client_mutation_id = sgqlc.types.Field(String, graphql_name='clientMutationId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionRemoveAllListInput.program_set_subscription","title":"<code>program_set_subscription = sgqlc.types.Field(sgqlc.types.non_null(ID), graphql_name='programSetSubscription')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionSortOrder","title":"<code>ProgramSetSubscriptionSortOrder</code>","text":"<p>         Bases: <code>sgqlc.types.Enum</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class ProgramSetSubscriptionSortOrder(sgqlc.types.Enum):\n    __schema__ = audiothek_schema\n    __choices__ = ('CREATEDAT_ASC', 'CREATEDAT_DESC', 'LASTVISITEDAT_ASC', 'LASTVISITEDAT_DESC', 'MODIFIEDAT_ASC',\n                   'MODIFIEDAT_DESC', 'SUBSCRIBEDAT_ASC', 'SUBSCRIBEDAT_DESC', 'SUBSCRIBEDPROGRAMSET_ID_ASC', 'SUBSCRIBEDPROGRAMSET_ID_DESC')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionSortOrder.__choices__","title":"<code>__choices__ = ('CREATEDAT_ASC', 'CREATEDAT_DESC', 'LASTVISITEDAT_ASC', 'LASTVISITEDAT_DESC', 'MODIFIEDAT_ASC', 'MODIFIEDAT_DESC', 'SUBSCRIBEDAT_ASC', 'SUBSCRIBEDAT_DESC', 'SUBSCRIBEDPROGRAMSET_ID_ASC', 'SUBSCRIBEDPROGRAMSET_ID_DESC')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionSortOrder.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionUpdateByProgramSetIdInput","title":"<code>ProgramSetSubscriptionUpdateByProgramSetIdInput</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class ProgramSetSubscriptionUpdateByProgramSetIdInput(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('client_mutation_id', 'program_set_subscription')\n    client_mutation_id = sgqlc.types.Field(\n        String, graphql_name='clientMutationId')\n    program_set_subscription = sgqlc.types.Field(sgqlc.types.non_null(\n        ProgramSetSubscriptionCreateInput), graphql_name='programSetSubscription')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionUpdateByProgramSetIdInput.__field_names__","title":"<code>__field_names__ = ('client_mutation_id', 'program_set_subscription')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionUpdateByProgramSetIdInput.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionUpdateByProgramSetIdInput.client_mutation_id","title":"<code>client_mutation_id = sgqlc.types.Field(String, graphql_name='clientMutationId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionUpdateByProgramSetIdInput.program_set_subscription","title":"<code>program_set_subscription = sgqlc.types.Field(sgqlc.types.non_null(ProgramSetSubscriptionCreateInput), graphql_name='programSetSubscription')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionUpdateInput","title":"<code>ProgramSetSubscriptionUpdateInput</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class ProgramSetSubscriptionUpdateInput(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('client_mutation_id', 'id', 'last_visited_at',\n                       'subscribed_at', 'subscribed_program_set')\n    client_mutation_id = sgqlc.types.Field(\n        String, graphql_name='clientMutationId')\n    id = sgqlc.types.Field(sgqlc.types.non_null(ID), graphql_name='id')\n    last_visited_at = sgqlc.types.Field(DateTime, graphql_name='lastVisitedAt')\n    subscribed_at = sgqlc.types.Field(DateTime, graphql_name='subscribedAt')\n    subscribed_program_set = sgqlc.types.Field(\n        ProgramSetCreateInput, graphql_name='subscribedProgramSet')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionUpdateInput.__field_names__","title":"<code>__field_names__ = ('client_mutation_id', 'id', 'last_visited_at', 'subscribed_at', 'subscribed_program_set')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionUpdateInput.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionUpdateInput.client_mutation_id","title":"<code>client_mutation_id = sgqlc.types.Field(String, graphql_name='clientMutationId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionUpdateInput.id","title":"<code>id = sgqlc.types.Field(sgqlc.types.non_null(ID), graphql_name='id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionUpdateInput.last_visited_at","title":"<code>last_visited_at = sgqlc.types.Field(DateTime, graphql_name='lastVisitedAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionUpdateInput.subscribed_at","title":"<code>subscribed_at = sgqlc.types.Field(DateTime, graphql_name='subscribedAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetSubscriptionUpdateInput.subscribed_program_set","title":"<code>subscribed_program_set = sgqlc.types.Field(ProgramSetCreateInput, graphql_name='subscribedProgramSet')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetsConnection","title":"<code>ProgramSetsConnection</code>","text":"<p>         Bases: <code>sgqlc.types.relay.Connection</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class ProgramSetsConnection(sgqlc.types.relay.Connection):\n    __schema__ = audiothek_schema\n    __field_names__ = ('nodes', 'edges', 'page_info', 'total_count')\n    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(\n        sgqlc.types.non_null('ProgramSet'))), graphql_name='nodes')\n    edges = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(\n        sgqlc.types.non_null('ProgramSetsEdge'))), graphql_name='edges')\n    page_info = sgqlc.types.Field(\n        sgqlc.types.non_null(PageInfo), graphql_name='pageInfo')\n    total_count = sgqlc.types.Field(\n        sgqlc.types.non_null(Int), graphql_name='totalCount')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetsConnection.__field_names__","title":"<code>__field_names__ = ('nodes', 'edges', 'page_info', 'total_count')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetsConnection.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetsConnection.edges","title":"<code>edges = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('ProgramSetsEdge'))), graphql_name='edges')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetsConnection.nodes","title":"<code>nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('ProgramSet'))), graphql_name='nodes')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetsConnection.page_info","title":"<code>page_info = sgqlc.types.Field(sgqlc.types.non_null(PageInfo), graphql_name='pageInfo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetsConnection.total_count","title":"<code>total_count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='totalCount')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetsEdge","title":"<code>ProgramSetsEdge</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class ProgramSetsEdge(sgqlc.types.Type):\n    __schema__ = audiothek_schema\n    __field_names__ = ('cursor', 'node')\n    cursor = sgqlc.types.Field(Cursor, graphql_name='cursor')\n    node = sgqlc.types.Field(sgqlc.types.non_null(\n        'ProgramSet'), graphql_name='node')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetsEdge.__field_names__","title":"<code>__field_names__ = ('cursor', 'node')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetsEdge.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetsEdge.cursor","title":"<code>cursor = sgqlc.types.Field(Cursor, graphql_name='cursor')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetsEdge.node","title":"<code>node = sgqlc.types.Field(sgqlc.types.non_null('ProgramSet'), graphql_name='node')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetsOrderBy","title":"<code>ProgramSetsOrderBy</code>","text":"<p>         Bases: <code>sgqlc.types.Enum</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class ProgramSetsOrderBy(sgqlc.types.Enum):\n    __schema__ = audiothek_schema\n    __choices__ = ('CORE_DOCUMENT_ASC', 'CORE_DOCUMENT_DESC', 'CORE_ID_ASC', 'CORE_ID_DESC', 'EDITORIAL_CATEGORY_ID_ASC', 'EDITORIAL_CATEGORY_ID_DESC', 'ID_ASC', 'ID_DESC', 'IMAGE_ASC', 'IMAGE_COLLECTION_ID_ASC', 'IMAGE_COLLECTION_ID_DESC', 'IMAGE_DESC', 'LAST_ITEM_ADDED_ASC', 'LAST_ITEM_ADDED_DESC',\n                   'LAST_ITEM_MODIFIED_ASC', 'LAST_ITEM_MODIFIED_DESC', 'NATURAL', 'NUMBER_OF_ELEMENTS_ASC', 'NUMBER_OF_ELEMENTS_DESC', 'PRIMARY_KEY_ASC', 'PRIMARY_KEY_DESC', 'PUBLICATION_SERVICE_ID_ASC', 'PUBLICATION_SERVICE_ID_DESC', 'SYNOPSIS_ASC', 'SYNOPSIS_DESC', 'TITLE_ASC', 'TITLE_DESC')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetsOrderBy.__choices__","title":"<code>__choices__ = ('CORE_DOCUMENT_ASC', 'CORE_DOCUMENT_DESC', 'CORE_ID_ASC', 'CORE_ID_DESC', 'EDITORIAL_CATEGORY_ID_ASC', 'EDITORIAL_CATEGORY_ID_DESC', 'ID_ASC', 'ID_DESC', 'IMAGE_ASC', 'IMAGE_COLLECTION_ID_ASC', 'IMAGE_COLLECTION_ID_DESC', 'IMAGE_DESC', 'LAST_ITEM_ADDED_ASC', 'LAST_ITEM_ADDED_DESC', 'LAST_ITEM_MODIFIED_ASC', 'LAST_ITEM_MODIFIED_DESC', 'NATURAL', 'NUMBER_OF_ELEMENTS_ASC', 'NUMBER_OF_ELEMENTS_DESC', 'PRIMARY_KEY_ASC', 'PRIMARY_KEY_DESC', 'PUBLICATION_SERVICE_ID_ASC', 'PUBLICATION_SERVICE_ID_DESC', 'SYNOPSIS_ASC', 'SYNOPSIS_DESC', 'TITLE_ASC', 'TITLE_DESC')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetsOrderBy.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetsSearchConnection","title":"<code>ProgramSetsSearchConnection</code>","text":"<p>         Bases: <code>sgqlc.types.relay.Connection</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class ProgramSetsSearchConnection(sgqlc.types.relay.Connection):\n    __schema__ = audiothek_schema\n    __field_names__ = ('page_info', 'total_count', 'nodes')\n    page_info = sgqlc.types.Field(PageInfo, graphql_name='pageInfo')\n    total_count = sgqlc.types.Field(\n        sgqlc.types.non_null(Int), graphql_name='totalCount')\n    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(\n        sgqlc.types.non_null('ProgramSet'))), graphql_name='nodes')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetsSearchConnection.__field_names__","title":"<code>__field_names__ = ('page_info', 'total_count', 'nodes')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetsSearchConnection.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetsSearchConnection.nodes","title":"<code>nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('ProgramSet'))), graphql_name='nodes')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetsSearchConnection.page_info","title":"<code>page_info = sgqlc.types.Field(PageInfo, graphql_name='pageInfo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ProgramSetsSearchConnection.total_count","title":"<code>total_count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='totalCount')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Property","title":"<code>Property</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code>, <code>PropertyInterface</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class Property(sgqlc.types.Type, PropertyInterface):\n    __schema__ = audiothek_schema\n    __field_names__ = ()\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Property.__field_names__","title":"<code>__field_names__ = ()</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Property.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PropertyConnection","title":"<code>PropertyConnection</code>","text":"<p>         Bases: <code>sgqlc.types.relay.Connection</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class PropertyConnection(sgqlc.types.relay.Connection):\n    __schema__ = audiothek_schema\n    __field_names__ = ('count', 'edges', 'nodes', 'page_info')\n    count = sgqlc.types.Field(Int, graphql_name='count')\n    edges = sgqlc.types.Field(sgqlc.types.list_of(\n        'PropertyEdge'), graphql_name='edges')\n    nodes = sgqlc.types.Field(sgqlc.types.list_of(\n        'PropertyInterface'), graphql_name='nodes')\n    page_info = sgqlc.types.Field(\n        sgqlc.types.non_null(PageInfo), graphql_name='pageInfo')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PropertyConnection.__field_names__","title":"<code>__field_names__ = ('count', 'edges', 'nodes', 'page_info')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PropertyConnection.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PropertyConnection.count","title":"<code>count = sgqlc.types.Field(Int, graphql_name='count')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PropertyConnection.edges","title":"<code>edges = sgqlc.types.Field(sgqlc.types.list_of('PropertyEdge'), graphql_name='edges')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PropertyConnection.nodes","title":"<code>nodes = sgqlc.types.Field(sgqlc.types.list_of('PropertyInterface'), graphql_name='nodes')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PropertyConnection.page_info","title":"<code>page_info = sgqlc.types.Field(sgqlc.types.non_null(PageInfo), graphql_name='pageInfo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PropertyConnectionFilterB","title":"<code>PropertyConnectionFilterB</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class PropertyConnectionFilterB(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('empty', 'contains')\n    empty = sgqlc.types.Field(BooleanFilterB, graphql_name='empty')\n    contains = sgqlc.types.Field(ID, graphql_name='contains')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PropertyConnectionFilterB.__field_names__","title":"<code>__field_names__ = ('empty', 'contains')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PropertyConnectionFilterB.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PropertyConnectionFilterB.contains","title":"<code>contains = sgqlc.types.Field(ID, graphql_name='contains')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PropertyConnectionFilterB.empty","title":"<code>empty = sgqlc.types.Field(BooleanFilterB, graphql_name='empty')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PropertyCreateInput","title":"<code>PropertyCreateInput</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class PropertyCreateInput(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('client_mutation_id', 'type', 'key', 'value')\n    client_mutation_id = sgqlc.types.Field(\n        String, graphql_name='clientMutationId')\n    type = sgqlc.types.Field(String, graphql_name='type')\n    key = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='key')\n    value = sgqlc.types.Field(\n        sgqlc.types.non_null(String), graphql_name='value')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PropertyCreateInput.__field_names__","title":"<code>__field_names__ = ('client_mutation_id', 'type', 'key', 'value')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PropertyCreateInput.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PropertyCreateInput.client_mutation_id","title":"<code>client_mutation_id = sgqlc.types.Field(String, graphql_name='clientMutationId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PropertyCreateInput.key","title":"<code>key = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='key')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PropertyCreateInput.type","title":"<code>type = sgqlc.types.Field(String, graphql_name='type')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PropertyCreateInput.value","title":"<code>value = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='value')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PropertyEdge","title":"<code>PropertyEdge</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class PropertyEdge(sgqlc.types.Type):\n    __schema__ = audiothek_schema\n    __field_names__ = ('cursor', 'node')\n    cursor = sgqlc.types.Field(\n        sgqlc.types.non_null(String), graphql_name='cursor')\n    node = sgqlc.types.Field('PropertyInterface', graphql_name='node')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PropertyEdge.__field_names__","title":"<code>__field_names__ = ('cursor', 'node')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PropertyEdge.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PropertyEdge.cursor","title":"<code>cursor = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='cursor')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PropertyEdge.node","title":"<code>node = sgqlc.types.Field('PropertyInterface', graphql_name='node')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PropertyFilterB","title":"<code>PropertyFilterB</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class PropertyFilterB(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('created_at', 'key', 'modified_at', 'user', 'value')\n    created_at = sgqlc.types.Field(DateFilterB, graphql_name='createdAt')\n    key = sgqlc.types.Field('StringFilterB', graphql_name='key')\n    modified_at = sgqlc.types.Field(DateFilterB, graphql_name='modifiedAt')\n    user = sgqlc.types.Field(EndUserRelationFilterB, graphql_name='user')\n    value = sgqlc.types.Field('StringFilterB', graphql_name='value')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PropertyFilterB.__field_names__","title":"<code>__field_names__ = ('created_at', 'key', 'modified_at', 'user', 'value')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PropertyFilterB.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PropertyFilterB.created_at","title":"<code>created_at = sgqlc.types.Field(DateFilterB, graphql_name='createdAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PropertyFilterB.key","title":"<code>key = sgqlc.types.Field('StringFilterB', graphql_name='key')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PropertyFilterB.modified_at","title":"<code>modified_at = sgqlc.types.Field(DateFilterB, graphql_name='modifiedAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PropertyFilterB.user","title":"<code>user = sgqlc.types.Field(EndUserRelationFilterB, graphql_name='user')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PropertyFilterB.value","title":"<code>value = sgqlc.types.Field('StringFilterB', graphql_name='value')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PropertyInterface","title":"<code>PropertyInterface</code>","text":"<p>         Bases: <code>sgqlc.types.Interface</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class PropertyInterface(sgqlc.types.Interface):\n    __schema__ = audiothek_schema\n    __field_names__ = ('id', 'base_id_prefix', 'created_at',\n                       'key', 'modified_at', 'user', 'value')\n    id = sgqlc.types.Field(sgqlc.types.non_null(ID), graphql_name='id')\n    base_id_prefix = sgqlc.types.Field(\n        sgqlc.types.non_null(String), graphql_name='baseIdPrefix')\n    created_at = sgqlc.types.Field(DateTime, graphql_name='createdAt')\n    key = sgqlc.types.Field(String, graphql_name='key')\n    modified_at = sgqlc.types.Field(DateTime, graphql_name='modifiedAt')\n    user = sgqlc.types.Field(EndUserInterface, graphql_name='user')\n    value = sgqlc.types.Field(String, graphql_name='value')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PropertyInterface.__field_names__","title":"<code>__field_names__ = ('id', 'base_id_prefix', 'created_at', 'key', 'modified_at', 'user', 'value')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PropertyInterface.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PropertyInterface.base_id_prefix","title":"<code>base_id_prefix = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='baseIdPrefix')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PropertyInterface.created_at","title":"<code>created_at = sgqlc.types.Field(DateTime, graphql_name='createdAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PropertyInterface.id","title":"<code>id = sgqlc.types.Field(sgqlc.types.non_null(ID), graphql_name='id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PropertyInterface.key","title":"<code>key = sgqlc.types.Field(String, graphql_name='key')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PropertyInterface.modified_at","title":"<code>modified_at = sgqlc.types.Field(DateTime, graphql_name='modifiedAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PropertyInterface.user","title":"<code>user = sgqlc.types.Field(EndUserInterface, graphql_name='user')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PropertyInterface.value","title":"<code>value = sgqlc.types.Field(String, graphql_name='value')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PropertyPayload","title":"<code>PropertyPayload</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class PropertyPayload(sgqlc.types.Type):\n    __schema__ = audiothek_schema\n    __field_names__ = ('client_mutation_id', 'changed_property')\n    client_mutation_id = sgqlc.types.Field(\n        String, graphql_name='clientMutationId')\n    changed_property = sgqlc.types.Field(\n        'Property', graphql_name='changedProperty')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PropertyPayload.__field_names__","title":"<code>__field_names__ = ('client_mutation_id', 'changed_property')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PropertyPayload.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PropertyPayload.changed_property","title":"<code>changed_property = sgqlc.types.Field('Property', graphql_name='changedProperty')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PropertyPayload.client_mutation_id","title":"<code>client_mutation_id = sgqlc.types.Field(String, graphql_name='clientMutationId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PropertyRelationFilterB","title":"<code>PropertyRelationFilterB</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class PropertyRelationFilterB(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('id', 'exists')\n    id = sgqlc.types.Field(IDFilterB, graphql_name='id')\n    exists = sgqlc.types.Field(BooleanFilterB, graphql_name='exists')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PropertyRelationFilterB.__field_names__","title":"<code>__field_names__ = ('id', 'exists')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PropertyRelationFilterB.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PropertyRelationFilterB.exists","title":"<code>exists = sgqlc.types.Field(BooleanFilterB, graphql_name='exists')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PropertyRelationFilterB.id","title":"<code>id = sgqlc.types.Field(IDFilterB, graphql_name='id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PropertyRemoveAllListInput","title":"<code>PropertyRemoveAllListInput</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class PropertyRemoveAllListInput(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('client_mutation_id', 'property')\n    client_mutation_id = sgqlc.types.Field(\n        String, graphql_name='clientMutationId')\n    property = sgqlc.types.Field(\n        sgqlc.types.non_null(ID), graphql_name='property')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PropertyRemoveAllListInput.__field_names__","title":"<code>__field_names__ = ('client_mutation_id', 'property')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PropertyRemoveAllListInput.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PropertyRemoveAllListInput.client_mutation_id","title":"<code>client_mutation_id = sgqlc.types.Field(String, graphql_name='clientMutationId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PropertyRemoveAllListInput.property","title":"<code>property = sgqlc.types.Field(sgqlc.types.non_null(ID), graphql_name='property')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PropertySortOrder","title":"<code>PropertySortOrder</code>","text":"<p>         Bases: <code>sgqlc.types.Enum</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class PropertySortOrder(sgqlc.types.Enum):\n    __schema__ = audiothek_schema\n    __choices__ = ('CREATEDAT_ASC', 'CREATEDAT_DESC', 'KEY_ASC', 'KEY_DESC',\n                   'MODIFIEDAT_ASC', 'MODIFIEDAT_DESC', 'VALUE_ASC', 'VALUE_DESC')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PropertySortOrder.__choices__","title":"<code>__choices__ = ('CREATEDAT_ASC', 'CREATEDAT_DESC', 'KEY_ASC', 'KEY_DESC', 'MODIFIEDAT_ASC', 'MODIFIEDAT_DESC', 'VALUE_ASC', 'VALUE_DESC')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PropertySortOrder.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PropertyUpdateInput","title":"<code>PropertyUpdateInput</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class PropertyUpdateInput(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('client_mutation_id', 'id', 'key', 'value')\n    client_mutation_id = sgqlc.types.Field(\n        String, graphql_name='clientMutationId')\n    id = sgqlc.types.Field(sgqlc.types.non_null(ID), graphql_name='id')\n    key = sgqlc.types.Field(String, graphql_name='key')\n    value = sgqlc.types.Field(String, graphql_name='value')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PropertyUpdateInput.__field_names__","title":"<code>__field_names__ = ('client_mutation_id', 'id', 'key', 'value')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PropertyUpdateInput.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PropertyUpdateInput.client_mutation_id","title":"<code>client_mutation_id = sgqlc.types.Field(String, graphql_name='clientMutationId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PropertyUpdateInput.id","title":"<code>id = sgqlc.types.Field(sgqlc.types.non_null(ID), graphql_name='id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PropertyUpdateInput.key","title":"<code>key = sgqlc.types.Field(String, graphql_name='key')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PropertyUpdateInput.value","title":"<code>value = sgqlc.types.Field(String, graphql_name='value')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublicationService","title":"<code>PublicationService</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code>, <code>Node</code>, <code>Teaser</code>, <code>CoreTeaser</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class PublicationService(sgqlc.types.Type, Node, Teaser, CoreTeaser):\n    __schema__ = audiothek_schema\n    __field_names__ = ('row_id', 'organization_name', 'genre', 'branding_color', 'dvb_service_id', 'core_id', 'core_document', 'external_ids',\n                       'homepage_url', 'order', 'parent_service_id', 'organization', 'program_sets', 'permanent_livestreams', 'images', 'images_list', '_links')\n    row_id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='rowId')\n    organization_name = sgqlc.types.Field(\n        sgqlc.types.non_null(String), graphql_name='organizationName')\n    genre = sgqlc.types.Field(String, graphql_name='genre')\n    branding_color = sgqlc.types.Field(String, graphql_name='brandingColor')\n    dvb_service_id = sgqlc.types.Field(Int, graphql_name='dvbServiceId')\n    core_id = sgqlc.types.Field(String, graphql_name='coreId')\n    core_document = sgqlc.types.Field(JSON, graphql_name='coreDocument')\n    external_ids = sgqlc.types.Field(\n        sgqlc.types.list_of(String), graphql_name='externalIds')\n    homepage_url = sgqlc.types.Field(String, graphql_name='homepageUrl')\n    order = sgqlc.types.Field(Int, graphql_name='order')\n    parent_service_id = sgqlc.types.Field(\n        String, graphql_name='parentServiceId')\n    organization = sgqlc.types.Field(Organization, graphql_name='organization')\n    program_sets = sgqlc.types.Field(sgqlc.types.non_null(ProgramSetsConnection), graphql_name='programSets', args=sgqlc.types.ArgDict((\n        ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)),\n        ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)),\n        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),\n        ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)),\n        ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)),\n        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(\n            ProgramSetsOrderBy)), graphql_name='orderBy', default=('PRIMARY_KEY_ASC',))),\n        ('condition', sgqlc.types.Arg(ProgramSetCondition,\n         graphql_name='condition', default=None)),\n        ('filter', sgqlc.types.Arg(ProgramSetFilter,\n         graphql_name='filter', default=None)),\n    ))\n    )\n    permanent_livestreams = sgqlc.types.Field(sgqlc.types.non_null(PermanentLivestreamsConnection), graphql_name='permanentLivestreams', args=sgqlc.types.ArgDict((\n        ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)),\n        ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)),\n        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),\n        ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)),\n        ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)),\n        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(\n            PermanentLivestreamsOrderBy)), graphql_name='orderBy', default=('ORDER_ASC',))),\n        ('condition', sgqlc.types.Arg(PermanentLivestreamCondition,\n         graphql_name='condition', default=None)),\n        ('filter', sgqlc.types.Arg(PermanentLivestreamFilter,\n         graphql_name='filter', default=None)),\n    ))\n    )\n    images = sgqlc.types.Field(sgqlc.types.non_null(ImagesCollectionsBinariesViewsConnection), graphql_name='images', args=sgqlc.types.ArgDict((\n        ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)),\n        ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)),\n        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),\n        ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)),\n        ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)),\n    ))\n    )\n    images_list = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null(ImagesCollectionsBinariesView)), graphql_name='imagesList', args=sgqlc.types.ArgDict((\n        ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)),\n        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),\n    ))\n    )\n    _links = sgqlc.types.Field(JSON, graphql_name='_links')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublicationService.__field_names__","title":"<code>__field_names__ = ('row_id', 'organization_name', 'genre', 'branding_color', 'dvb_service_id', 'core_id', 'core_document', 'external_ids', 'homepage_url', 'order', 'parent_service_id', 'organization', 'program_sets', 'permanent_livestreams', 'images', 'images_list', '_links')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublicationService.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublicationService.branding_color","title":"<code>branding_color = sgqlc.types.Field(String, graphql_name='brandingColor')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublicationService.core_document","title":"<code>core_document = sgqlc.types.Field(JSON, graphql_name='coreDocument')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublicationService.core_id","title":"<code>core_id = sgqlc.types.Field(String, graphql_name='coreId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublicationService.dvb_service_id","title":"<code>dvb_service_id = sgqlc.types.Field(Int, graphql_name='dvbServiceId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublicationService.external_ids","title":"<code>external_ids = sgqlc.types.Field(sgqlc.types.list_of(String), graphql_name='externalIds')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublicationService.genre","title":"<code>genre = sgqlc.types.Field(String, graphql_name='genre')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublicationService.homepage_url","title":"<code>homepage_url = sgqlc.types.Field(String, graphql_name='homepageUrl')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublicationService.images","title":"<code>images = sgqlc.types.Field(sgqlc.types.non_null(ImagesCollectionsBinariesViewsConnection), graphql_name='images', args=sgqlc.types.ArgDict((('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)), ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)), ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)), ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)), ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublicationService.images_list","title":"<code>images_list = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null(ImagesCollectionsBinariesView)), graphql_name='imagesList', args=sgqlc.types.ArgDict((('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)), ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublicationService.order","title":"<code>order = sgqlc.types.Field(Int, graphql_name='order')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublicationService.organization","title":"<code>organization = sgqlc.types.Field(Organization, graphql_name='organization')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublicationService.organization_name","title":"<code>organization_name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='organizationName')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublicationService.parent_service_id","title":"<code>parent_service_id = sgqlc.types.Field(String, graphql_name='parentServiceId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublicationService.permanent_livestreams","title":"<code>permanent_livestreams = sgqlc.types.Field(sgqlc.types.non_null(PermanentLivestreamsConnection), graphql_name='permanentLivestreams', args=sgqlc.types.ArgDict((('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)), ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)), ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)), ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)), ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)), ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(PermanentLivestreamsOrderBy)), graphql_name='orderBy', default=('ORDER_ASC'))), ('condition', sgqlc.types.Arg(PermanentLivestreamCondition, graphql_name='condition', default=None)), ('filter', sgqlc.types.Arg(PermanentLivestreamFilter, graphql_name='filter', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublicationService.program_sets","title":"<code>program_sets = sgqlc.types.Field(sgqlc.types.non_null(ProgramSetsConnection), graphql_name='programSets', args=sgqlc.types.ArgDict((('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)), ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)), ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)), ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)), ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)), ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(ProgramSetsOrderBy)), graphql_name='orderBy', default=('PRIMARY_KEY_ASC'))), ('condition', sgqlc.types.Arg(ProgramSetCondition, graphql_name='condition', default=None)), ('filter', sgqlc.types.Arg(ProgramSetFilter, graphql_name='filter', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublicationService.row_id","title":"<code>row_id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='rowId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublicationServiceCondition","title":"<code>PublicationServiceCondition</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class PublicationServiceCondition(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('id', 'organization_name', 'title', 'synopsis', 'genre', 'branding_color', 'dvb_service_id',\n                       'number_of_elements', 'image', 'core_id', 'core_document', 'external_ids', 'homepage_url', 'order', 'parent_service_id')\n    id = sgqlc.types.Field(Int, graphql_name='id')\n    organization_name = sgqlc.types.Field(\n        String, graphql_name='organizationName')\n    title = sgqlc.types.Field(String, graphql_name='title')\n    synopsis = sgqlc.types.Field(String, graphql_name='synopsis')\n    genre = sgqlc.types.Field(String, graphql_name='genre')\n    branding_color = sgqlc.types.Field(String, graphql_name='brandingColor')\n    dvb_service_id = sgqlc.types.Field(Int, graphql_name='dvbServiceId')\n    number_of_elements = sgqlc.types.Field(\n        Int, graphql_name='numberOfElements')\n    image = sgqlc.types.Field(ImageTypeInput, graphql_name='image')\n    core_id = sgqlc.types.Field(String, graphql_name='coreId')\n    core_document = sgqlc.types.Field(JSON, graphql_name='coreDocument')\n    external_ids = sgqlc.types.Field(\n        sgqlc.types.list_of(String), graphql_name='externalIds')\n    homepage_url = sgqlc.types.Field(String, graphql_name='homepageUrl')\n    order = sgqlc.types.Field(Int, graphql_name='order')\n    parent_service_id = sgqlc.types.Field(\n        String, graphql_name='parentServiceId')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublicationServiceCondition.__field_names__","title":"<code>__field_names__ = ('id', 'organization_name', 'title', 'synopsis', 'genre', 'branding_color', 'dvb_service_id', 'number_of_elements', 'image', 'core_id', 'core_document', 'external_ids', 'homepage_url', 'order', 'parent_service_id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublicationServiceCondition.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublicationServiceCondition.branding_color","title":"<code>branding_color = sgqlc.types.Field(String, graphql_name='brandingColor')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublicationServiceCondition.core_document","title":"<code>core_document = sgqlc.types.Field(JSON, graphql_name='coreDocument')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublicationServiceCondition.core_id","title":"<code>core_id = sgqlc.types.Field(String, graphql_name='coreId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublicationServiceCondition.dvb_service_id","title":"<code>dvb_service_id = sgqlc.types.Field(Int, graphql_name='dvbServiceId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublicationServiceCondition.external_ids","title":"<code>external_ids = sgqlc.types.Field(sgqlc.types.list_of(String), graphql_name='externalIds')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublicationServiceCondition.genre","title":"<code>genre = sgqlc.types.Field(String, graphql_name='genre')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublicationServiceCondition.homepage_url","title":"<code>homepage_url = sgqlc.types.Field(String, graphql_name='homepageUrl')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublicationServiceCondition.id","title":"<code>id = sgqlc.types.Field(Int, graphql_name='id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublicationServiceCondition.image","title":"<code>image = sgqlc.types.Field(ImageTypeInput, graphql_name='image')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublicationServiceCondition.number_of_elements","title":"<code>number_of_elements = sgqlc.types.Field(Int, graphql_name='numberOfElements')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublicationServiceCondition.order","title":"<code>order = sgqlc.types.Field(Int, graphql_name='order')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublicationServiceCondition.organization_name","title":"<code>organization_name = sgqlc.types.Field(String, graphql_name='organizationName')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublicationServiceCondition.parent_service_id","title":"<code>parent_service_id = sgqlc.types.Field(String, graphql_name='parentServiceId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublicationServiceCondition.synopsis","title":"<code>synopsis = sgqlc.types.Field(String, graphql_name='synopsis')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublicationServiceCondition.title","title":"<code>title = sgqlc.types.Field(String, graphql_name='title')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublicationServiceFilter","title":"<code>PublicationServiceFilter</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class PublicationServiceFilter(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('id', 'organization_name', 'title', 'synopsis', 'genre', 'branding_color', 'dvb_service_id', 'number_of_elements',\n                       'core_id', 'core_document', 'external_ids', 'homepage_url', 'order', 'parent_service_id', 'image', 'and_', 'or_', 'not_')\n    id = sgqlc.types.Field(IntFilter, graphql_name='id')\n    organization_name = sgqlc.types.Field(\n        'StringFilter', graphql_name='organizationName')\n    title = sgqlc.types.Field('StringFilter', graphql_name='title')\n    synopsis = sgqlc.types.Field('StringFilter', graphql_name='synopsis')\n    genre = sgqlc.types.Field('StringFilter', graphql_name='genre')\n    branding_color = sgqlc.types.Field(\n        'StringFilter', graphql_name='brandingColor')\n    dvb_service_id = sgqlc.types.Field(IntFilter, graphql_name='dvbServiceId')\n    number_of_elements = sgqlc.types.Field(\n        IntFilter, graphql_name='numberOfElements')\n    core_id = sgqlc.types.Field('StringFilter', graphql_name='coreId')\n    core_document = sgqlc.types.Field(JSONFilter, graphql_name='coreDocument')\n    external_ids = sgqlc.types.Field(\n        'StringListFilter', graphql_name='externalIds')\n    homepage_url = sgqlc.types.Field(\n        'StringFilter', graphql_name='homepageUrl')\n    order = sgqlc.types.Field(IntFilter, graphql_name='order')\n    parent_service_id = sgqlc.types.Field(\n        'StringFilter', graphql_name='parentServiceId')\n    image = sgqlc.types.Field(ImageTypeFilter, graphql_name='image')\n    and_ = sgqlc.types.Field(sgqlc.types.list_of(\n        sgqlc.types.non_null('PublicationServiceFilter')), graphql_name='and')\n    or_ = sgqlc.types.Field(sgqlc.types.list_of(\n        sgqlc.types.non_null('PublicationServiceFilter')), graphql_name='or')\n    not_ = sgqlc.types.Field('PublicationServiceFilter', graphql_name='not')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublicationServiceFilter.__field_names__","title":"<code>__field_names__ = ('id', 'organization_name', 'title', 'synopsis', 'genre', 'branding_color', 'dvb_service_id', 'number_of_elements', 'core_id', 'core_document', 'external_ids', 'homepage_url', 'order', 'parent_service_id', 'image', 'and_', 'or_', 'not_')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublicationServiceFilter.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublicationServiceFilter.and_","title":"<code>and_ = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('PublicationServiceFilter')), graphql_name='and')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublicationServiceFilter.branding_color","title":"<code>branding_color = sgqlc.types.Field('StringFilter', graphql_name='brandingColor')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublicationServiceFilter.core_document","title":"<code>core_document = sgqlc.types.Field(JSONFilter, graphql_name='coreDocument')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublicationServiceFilter.core_id","title":"<code>core_id = sgqlc.types.Field('StringFilter', graphql_name='coreId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublicationServiceFilter.dvb_service_id","title":"<code>dvb_service_id = sgqlc.types.Field(IntFilter, graphql_name='dvbServiceId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublicationServiceFilter.external_ids","title":"<code>external_ids = sgqlc.types.Field('StringListFilter', graphql_name='externalIds')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublicationServiceFilter.genre","title":"<code>genre = sgqlc.types.Field('StringFilter', graphql_name='genre')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublicationServiceFilter.homepage_url","title":"<code>homepage_url = sgqlc.types.Field('StringFilter', graphql_name='homepageUrl')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublicationServiceFilter.id","title":"<code>id = sgqlc.types.Field(IntFilter, graphql_name='id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublicationServiceFilter.image","title":"<code>image = sgqlc.types.Field(ImageTypeFilter, graphql_name='image')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublicationServiceFilter.not_","title":"<code>not_ = sgqlc.types.Field('PublicationServiceFilter', graphql_name='not')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublicationServiceFilter.number_of_elements","title":"<code>number_of_elements = sgqlc.types.Field(IntFilter, graphql_name='numberOfElements')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublicationServiceFilter.or_","title":"<code>or_ = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('PublicationServiceFilter')), graphql_name='or')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublicationServiceFilter.order","title":"<code>order = sgqlc.types.Field(IntFilter, graphql_name='order')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublicationServiceFilter.organization_name","title":"<code>organization_name = sgqlc.types.Field('StringFilter', graphql_name='organizationName')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublicationServiceFilter.parent_service_id","title":"<code>parent_service_id = sgqlc.types.Field('StringFilter', graphql_name='parentServiceId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublicationServiceFilter.synopsis","title":"<code>synopsis = sgqlc.types.Field('StringFilter', graphql_name='synopsis')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublicationServiceFilter.title","title":"<code>title = sgqlc.types.Field('StringFilter', graphql_name='title')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublicationServicesConnection","title":"<code>PublicationServicesConnection</code>","text":"<p>         Bases: <code>sgqlc.types.relay.Connection</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class PublicationServicesConnection(sgqlc.types.relay.Connection):\n    __schema__ = audiothek_schema\n    __field_names__ = ('nodes', 'edges', 'page_info', 'total_count')\n    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(\n        sgqlc.types.non_null('PublicationService'))), graphql_name='nodes')\n    edges = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(\n        sgqlc.types.non_null('PublicationServicesEdge'))), graphql_name='edges')\n    page_info = sgqlc.types.Field(\n        sgqlc.types.non_null(PageInfo), graphql_name='pageInfo')\n    total_count = sgqlc.types.Field(\n        sgqlc.types.non_null(Int), graphql_name='totalCount')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublicationServicesConnection.__field_names__","title":"<code>__field_names__ = ('nodes', 'edges', 'page_info', 'total_count')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublicationServicesConnection.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublicationServicesConnection.edges","title":"<code>edges = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('PublicationServicesEdge'))), graphql_name='edges')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublicationServicesConnection.nodes","title":"<code>nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('PublicationService'))), graphql_name='nodes')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublicationServicesConnection.page_info","title":"<code>page_info = sgqlc.types.Field(sgqlc.types.non_null(PageInfo), graphql_name='pageInfo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublicationServicesConnection.total_count","title":"<code>total_count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='totalCount')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublicationServicesEdge","title":"<code>PublicationServicesEdge</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class PublicationServicesEdge(sgqlc.types.Type):\n    __schema__ = audiothek_schema\n    __field_names__ = ('cursor', 'node')\n    cursor = sgqlc.types.Field(Cursor, graphql_name='cursor')\n    node = sgqlc.types.Field(sgqlc.types.non_null(\n        'PublicationService'), graphql_name='node')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublicationServicesEdge.__field_names__","title":"<code>__field_names__ = ('cursor', 'node')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublicationServicesEdge.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublicationServicesEdge.cursor","title":"<code>cursor = sgqlc.types.Field(Cursor, graphql_name='cursor')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublicationServicesEdge.node","title":"<code>node = sgqlc.types.Field(sgqlc.types.non_null('PublicationService'), graphql_name='node')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublicationServicesOrderBy","title":"<code>PublicationServicesOrderBy</code>","text":"<p>         Bases: <code>sgqlc.types.Enum</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class PublicationServicesOrderBy(sgqlc.types.Enum):\n    __schema__ = audiothek_schema\n    __choices__ = ('BRANDING_COLOR_ASC', 'BRANDING_COLOR_DESC', 'CORE_DOCUMENT_ASC', 'CORE_DOCUMENT_DESC', 'CORE_ID_ASC', 'CORE_ID_DESC', 'DVB_SERVICE_ID_ASC', 'DVB_SERVICE_ID_DESC', 'EXTERNAL_IDS_ASC', 'EXTERNAL_IDS_DESC', 'GENRE_ASC', 'GENRE_DESC', 'HOMEPAGE_URL_ASC', 'HOMEPAGE_URL_DESC', 'ID_ASC', 'ID_DESC', 'IMAGE_ASC',\n                   'IMAGE_DESC', 'NATURAL', 'NUMBER_OF_ELEMENTS_ASC', 'NUMBER_OF_ELEMENTS_DESC', 'ORDER_ASC', 'ORDER_DESC', 'ORGANIZATION_NAME_ASC', 'ORGANIZATION_NAME_DESC', 'PARENT_SERVICE_ID_ASC', 'PARENT_SERVICE_ID_DESC', 'PRIMARY_KEY_ASC', 'PRIMARY_KEY_DESC', 'SYNOPSIS_ASC', 'SYNOPSIS_DESC', 'TITLE_ASC', 'TITLE_DESC')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublicationServicesOrderBy.__choices__","title":"<code>__choices__ = ('BRANDING_COLOR_ASC', 'BRANDING_COLOR_DESC', 'CORE_DOCUMENT_ASC', 'CORE_DOCUMENT_DESC', 'CORE_ID_ASC', 'CORE_ID_DESC', 'DVB_SERVICE_ID_ASC', 'DVB_SERVICE_ID_DESC', 'EXTERNAL_IDS_ASC', 'EXTERNAL_IDS_DESC', 'GENRE_ASC', 'GENRE_DESC', 'HOMEPAGE_URL_ASC', 'HOMEPAGE_URL_DESC', 'ID_ASC', 'ID_DESC', 'IMAGE_ASC', 'IMAGE_DESC', 'NATURAL', 'NUMBER_OF_ELEMENTS_ASC', 'NUMBER_OF_ELEMENTS_DESC', 'ORDER_ASC', 'ORDER_DESC', 'ORGANIZATION_NAME_ASC', 'ORGANIZATION_NAME_DESC', 'PARENT_SERVICE_ID_ASC', 'PARENT_SERVICE_ID_DESC', 'PRIMARY_KEY_ASC', 'PRIMARY_KEY_DESC', 'SYNOPSIS_ASC', 'SYNOPSIS_DESC', 'TITLE_ASC', 'TITLE_DESC')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublicationServicesOrderBy.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublishScheduledItemsInput","title":"<code>PublishScheduledItemsInput</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class PublishScheduledItemsInput(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('client_mutation_id',)\n    client_mutation_id = sgqlc.types.Field(\n        String, graphql_name='clientMutationId')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublishScheduledItemsInput.__field_names__","title":"<code>__field_names__ = ('client_mutation_id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublishScheduledItemsInput.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublishScheduledItemsInput.client_mutation_id","title":"<code>client_mutation_id = sgqlc.types.Field(String, graphql_name='clientMutationId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublishScheduledItemsPayload","title":"<code>PublishScheduledItemsPayload</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class PublishScheduledItemsPayload(sgqlc.types.Type):\n    __schema__ = audiothek_schema\n    __field_names__ = ('client_mutation_id', 'big_int', 'query')\n    client_mutation_id = sgqlc.types.Field(\n        String, graphql_name='clientMutationId')\n    big_int = sgqlc.types.Field(BigInt, graphql_name='bigInt')\n    query = sgqlc.types.Field('Query', graphql_name='query')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublishScheduledItemsPayload.__field_names__","title":"<code>__field_names__ = ('client_mutation_id', 'big_int', 'query')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublishScheduledItemsPayload.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublishScheduledItemsPayload.big_int","title":"<code>big_int = sgqlc.types.Field(BigInt, graphql_name='bigInt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublishScheduledItemsPayload.client_mutation_id","title":"<code>client_mutation_id = sgqlc.types.Field(String, graphql_name='clientMutationId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublishScheduledItemsPayload.query","title":"<code>query = sgqlc.types.Field('Query', graphql_name='query')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublishableThing","title":"<code>PublishableThing</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code>, <code>PublishableThingInterface</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class PublishableThing(sgqlc.types.Type, PublishableThingInterface):\n    __schema__ = audiothek_schema\n    __field_names__ = ()\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublishableThing.__field_names__","title":"<code>__field_names__ = ()</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublishableThing.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublishableThingConnection","title":"<code>PublishableThingConnection</code>","text":"<p>         Bases: <code>sgqlc.types.relay.Connection</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class PublishableThingConnection(sgqlc.types.relay.Connection):\n    __schema__ = audiothek_schema\n    __field_names__ = ('count', 'edges', 'nodes', 'page_info')\n    count = sgqlc.types.Field(Int, graphql_name='count')\n    edges = sgqlc.types.Field(sgqlc.types.list_of(\n        'PublishableThingEdge'), graphql_name='edges')\n    nodes = sgqlc.types.Field(sgqlc.types.list_of(\n        'PublishableThingInterface'), graphql_name='nodes')\n    page_info = sgqlc.types.Field(\n        sgqlc.types.non_null(PageInfo), graphql_name='pageInfo')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublishableThingConnection.__field_names__","title":"<code>__field_names__ = ('count', 'edges', 'nodes', 'page_info')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublishableThingConnection.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublishableThingConnection.count","title":"<code>count = sgqlc.types.Field(Int, graphql_name='count')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublishableThingConnection.edges","title":"<code>edges = sgqlc.types.Field(sgqlc.types.list_of('PublishableThingEdge'), graphql_name='edges')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublishableThingConnection.nodes","title":"<code>nodes = sgqlc.types.Field(sgqlc.types.list_of('PublishableThingInterface'), graphql_name='nodes')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublishableThingConnection.page_info","title":"<code>page_info = sgqlc.types.Field(sgqlc.types.non_null(PageInfo), graphql_name='pageInfo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublishableThingConnectionFilterB","title":"<code>PublishableThingConnectionFilterB</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class PublishableThingConnectionFilterB(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('empty', 'contains')\n    empty = sgqlc.types.Field(BooleanFilterB, graphql_name='empty')\n    contains = sgqlc.types.Field(ID, graphql_name='contains')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublishableThingConnectionFilterB.__field_names__","title":"<code>__field_names__ = ('empty', 'contains')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublishableThingConnectionFilterB.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublishableThingConnectionFilterB.contains","title":"<code>contains = sgqlc.types.Field(ID, graphql_name='contains')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublishableThingConnectionFilterB.empty","title":"<code>empty = sgqlc.types.Field(BooleanFilterB, graphql_name='empty')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublishableThingEdge","title":"<code>PublishableThingEdge</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class PublishableThingEdge(sgqlc.types.Type):\n    __schema__ = audiothek_schema\n    __field_names__ = ('cursor', 'node')\n    cursor = sgqlc.types.Field(\n        sgqlc.types.non_null(String), graphql_name='cursor')\n    node = sgqlc.types.Field('PublishableThingInterface', graphql_name='node')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublishableThingEdge.__field_names__","title":"<code>__field_names__ = ('cursor', 'node')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublishableThingEdge.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublishableThingEdge.cursor","title":"<code>cursor = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='cursor')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublishableThingEdge.node","title":"<code>node = sgqlc.types.Field('PublishableThingInterface', graphql_name='node')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublishableThingFilterB","title":"<code>PublishableThingFilterB</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class PublishableThingFilterB(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('created_at', 'modified_at', 'no_index')\n    created_at = sgqlc.types.Field(DateFilterB, graphql_name='createdAt')\n    modified_at = sgqlc.types.Field(DateFilterB, graphql_name='modifiedAt')\n    no_index = sgqlc.types.Field(BooleanFilterB, graphql_name='noIndex')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublishableThingFilterB.__field_names__","title":"<code>__field_names__ = ('created_at', 'modified_at', 'no_index')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublishableThingFilterB.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublishableThingFilterB.created_at","title":"<code>created_at = sgqlc.types.Field(DateFilterB, graphql_name='createdAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublishableThingFilterB.modified_at","title":"<code>modified_at = sgqlc.types.Field(DateFilterB, graphql_name='modifiedAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublishableThingFilterB.no_index","title":"<code>no_index = sgqlc.types.Field(BooleanFilterB, graphql_name='noIndex')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublishableThingInterface","title":"<code>PublishableThingInterface</code>","text":"<p>         Bases: <code>sgqlc.types.Interface</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class PublishableThingInterface(sgqlc.types.Interface):\n    __schema__ = audiothek_schema\n    __field_names__ = ('id', 'base_id_prefix', 'created_at',\n                       'modified_at', 'no_index')\n    id = sgqlc.types.Field(sgqlc.types.non_null(ID), graphql_name='id')\n    base_id_prefix = sgqlc.types.Field(\n        sgqlc.types.non_null(String), graphql_name='baseIdPrefix')\n    created_at = sgqlc.types.Field(DateTime, graphql_name='createdAt')\n    modified_at = sgqlc.types.Field(DateTime, graphql_name='modifiedAt')\n    no_index = sgqlc.types.Field(Boolean, graphql_name='noIndex')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublishableThingInterface.__field_names__","title":"<code>__field_names__ = ('id', 'base_id_prefix', 'created_at', 'modified_at', 'no_index')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublishableThingInterface.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublishableThingInterface.base_id_prefix","title":"<code>base_id_prefix = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='baseIdPrefix')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublishableThingInterface.created_at","title":"<code>created_at = sgqlc.types.Field(DateTime, graphql_name='createdAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublishableThingInterface.id","title":"<code>id = sgqlc.types.Field(sgqlc.types.non_null(ID), graphql_name='id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublishableThingInterface.modified_at","title":"<code>modified_at = sgqlc.types.Field(DateTime, graphql_name='modifiedAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublishableThingInterface.no_index","title":"<code>no_index = sgqlc.types.Field(Boolean, graphql_name='noIndex')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublishableThingRelationFilterB","title":"<code>PublishableThingRelationFilterB</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class PublishableThingRelationFilterB(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('id', 'exists')\n    id = sgqlc.types.Field(IDFilterB, graphql_name='id')\n    exists = sgqlc.types.Field(BooleanFilterB, graphql_name='exists')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublishableThingRelationFilterB.__field_names__","title":"<code>__field_names__ = ('id', 'exists')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublishableThingRelationFilterB.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublishableThingRelationFilterB.exists","title":"<code>exists = sgqlc.types.Field(BooleanFilterB, graphql_name='exists')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublishableThingRelationFilterB.id","title":"<code>id = sgqlc.types.Field(IDFilterB, graphql_name='id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublishableThingSortOrder","title":"<code>PublishableThingSortOrder</code>","text":"<p>         Bases: <code>sgqlc.types.Enum</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class PublishableThingSortOrder(sgqlc.types.Enum):\n    __schema__ = audiothek_schema\n    __choices__ = ('CREATEDAT_ASC', 'CREATEDAT_DESC', 'MODIFIEDAT_ASC',\n                   'MODIFIEDAT_DESC', 'NOINDEX_ASC', 'NOINDEX_DESC')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublishableThingSortOrder.__choices__","title":"<code>__choices__ = ('CREATEDAT_ASC', 'CREATEDAT_DESC', 'MODIFIEDAT_ASC', 'MODIFIEDAT_DESC', 'NOINDEX_ASC', 'NOINDEX_DESC')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.PublishableThingSortOrder.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query","title":"<code>Query</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class Query(sgqlc.types.Type):\n    __schema__ = audiothek_schema\n    __field_names__ = ('all_end_users', 'all_playlists', 'bookmark', 'bookmark_list', 'end_user', 'history_entry', 'playlist', 'program_set_subscription', 'system', 'configs', 'editorial_categories', 'editorial_collections', 'groupings', 'images_collections_binaries_views', 'items', 'migrations', 'organizations', 'permanent_livestreams', 'program_sets', 'publication_services', 'audio_binary', 'categories_to_program_set', 'concept', 'config', 'editorial_category', 'editorial_category_by_sophora_id', 'editorial_collection', 'editorial_collection_by_coremedia_id', 'grouping', 'grouping_by_core_id', 'image_binary', 'image_collection', 'image', 'item', 'item_by_core_id', 'item_by_external_id', 'migration', 'migration_by_name', 'organization_by_id', 'organization', 'organization_by_core_id', 'permanent_livestream', 'permanent_livestream_by_core_id', 'program_set', 'program_set_by_core_id', 'publication_service', 'publication_service_by_title',\n                       'publication_service_by_core_id', 'transcript', 'debug_show_groups', 'editorial_categories_by_ids', 'editorial_categories_by_ids_list', 'editorial_collections_by_ids', 'editorial_collections_by_ids_list', 'isnumeric', 'items_by_ids', 'items_by_ids_list', 'jsonb_array', 'program_sets_by_ids', 'program_sets_by_ids_list', 'shows_with_mapping', 'shows_with_mapping_list', 'audio_binary_by_node_id', 'categories_to_program_set_by_node_id', 'concept_by_node_id', 'config_by_node_id', 'editorial_category_by_node_id', 'editorial_collection_by_node_id', 'grouping_by_node_id', 'image_binary_by_node_id', 'image_collection_by_node_id', 'image_by_node_id', 'item_by_node_id', 'migration_by_node_id', 'organization_by_node_id', 'permanent_livestream_by_node_id', 'program_set_by_node_id', 'publication_service_by_node_id', 'transcript_by_node_id', 'search', 'homescreen', 'show', 'section', 'widget', 'widgets', 'compilations', 'teasers', 'node')\n    all_end_users = sgqlc.types.Field(EndUserConnection, graphql_name='allEndUsers', args=sgqlc.types.ArgDict((\n        ('after', sgqlc.types.Arg(String, graphql_name='after', default=None)),\n        ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)),\n        ('before', sgqlc.types.Arg(String, graphql_name='before', default=None)),\n        ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)),\n        ('filter', sgqlc.types.Arg(EndUserFilterB,\n         graphql_name='filter', default=None)),\n        ('order_by', sgqlc.types.Arg(EndUserSortOrder,\n         graphql_name='orderBy', default=None)),\n    ))\n    )\n    all_playlists = sgqlc.types.Field(PlaylistConnection, graphql_name='allPlaylists', args=sgqlc.types.ArgDict((\n        ('after', sgqlc.types.Arg(String, graphql_name='after', default=None)),\n        ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)),\n        ('before', sgqlc.types.Arg(String, graphql_name='before', default=None)),\n        ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)),\n        ('filter', sgqlc.types.Arg(PlaylistFilterB,\n         graphql_name='filter', default=None)),\n        ('order_by', sgqlc.types.Arg(PlaylistSortOrder,\n         graphql_name='orderBy', default=None)),\n    ))\n    )\n    bookmark = sgqlc.types.Field(BookmarkInterface, graphql_name='bookmark', args=sgqlc.types.ArgDict((\n        ('id', sgqlc.types.Arg(sgqlc.types.non_null(\n            ID), graphql_name='id', default=None)),\n    ))\n    )\n    bookmark_list = sgqlc.types.Field(BookmarkListInterface, graphql_name='bookmarkList', args=sgqlc.types.ArgDict((\n        ('id', sgqlc.types.Arg(sgqlc.types.non_null(\n            ID), graphql_name='id', default=None)),\n    ))\n    )\n    end_user = sgqlc.types.Field(EndUserInterface, graphql_name='endUser', args=sgqlc.types.ArgDict((\n        ('id', sgqlc.types.Arg(sgqlc.types.non_null(\n            ID), graphql_name='id', default=None)),\n    ))\n    )\n    history_entry = sgqlc.types.Field(HistoryEntryInterface, graphql_name='historyEntry', args=sgqlc.types.ArgDict((\n        ('id', sgqlc.types.Arg(sgqlc.types.non_null(\n            ID), graphql_name='id', default=None)),\n    ))\n    )\n    playlist = sgqlc.types.Field(PlaylistInterface, graphql_name='playlist', args=sgqlc.types.ArgDict((\n        ('id', sgqlc.types.Arg(sgqlc.types.non_null(\n            ID), graphql_name='id', default=None)),\n    ))\n    )\n    program_set_subscription = sgqlc.types.Field(ProgramSetSubscriptionInterface, graphql_name='programSetSubscription', args=sgqlc.types.ArgDict((\n        ('id', sgqlc.types.Arg(sgqlc.types.non_null(\n            ID), graphql_name='id', default=None)),\n    ))\n    )\n    system = sgqlc.types.Field('SystemInterface', graphql_name='system', args=sgqlc.types.ArgDict((\n        ('id', sgqlc.types.Arg(sgqlc.types.non_null(\n            ID), graphql_name='id', default=None)),\n    ))\n    )\n    configs = sgqlc.types.Field(ConfigsConnection, graphql_name='configs', args=sgqlc.types.ArgDict((\n        ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)),\n        ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)),\n        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),\n        ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)),\n        ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)),\n        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(\n            ConfigsOrderBy)), graphql_name='orderBy', default=('PRIMARY_KEY_ASC',))),\n        ('condition', sgqlc.types.Arg(ConfigCondition,\n         graphql_name='condition', default=None)),\n        ('filter', sgqlc.types.Arg(ConfigFilter, graphql_name='filter', default=None)),\n    ))\n    )\n    editorial_categories = sgqlc.types.Field(EditorialCategoriesConnection, graphql_name='editorialCategories', args=sgqlc.types.ArgDict((\n        ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)),\n        ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)),\n        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),\n        ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)),\n        ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)),\n        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(\n            EditorialCategoriesOrderBy)), graphql_name='orderBy', default=('ORDER_ASC',))),\n        ('condition', sgqlc.types.Arg(EditorialCategoryCondition,\n         graphql_name='condition', default=None)),\n        ('filter', sgqlc.types.Arg(EditorialCategoryFilter,\n         graphql_name='filter', default=None)),\n    ))\n    )\n    editorial_collections = sgqlc.types.Field(EditorialCollectionsConnection, graphql_name='editorialCollections', args=sgqlc.types.ArgDict((\n        ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)),\n        ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)),\n        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),\n        ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)),\n        ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)),\n        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(\n            EditorialCollectionsOrderBy)), graphql_name='orderBy', default=('PRIMARY_KEY_ASC',))),\n        ('condition', sgqlc.types.Arg(EditorialCollectionCondition,\n         graphql_name='condition', default=None)),\n        ('filter', sgqlc.types.Arg(EditorialCollectionFilter,\n         graphql_name='filter', default=None)),\n    ))\n    )\n    groupings = sgqlc.types.Field(GroupingsConnection, graphql_name='groupings', args=sgqlc.types.ArgDict((\n        ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)),\n        ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)),\n        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),\n        ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)),\n        ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)),\n        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(\n            GroupingsOrderBy)), graphql_name='orderBy', default=('PRIMARY_KEY_ASC',))),\n        ('condition', sgqlc.types.Arg(GroupingCondition,\n         graphql_name='condition', default=None)),\n        ('filter', sgqlc.types.Arg(GroupingFilter,\n         graphql_name='filter', default=None)),\n    ))\n    )\n    images_collections_binaries_views = sgqlc.types.Field(ImagesCollectionsBinariesViewsConnection, graphql_name='imagesCollectionsBinariesViews', args=sgqlc.types.ArgDict((\n        ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)),\n        ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)),\n        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),\n        ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)),\n        ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)),\n        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(\n            ImagesCollectionsBinariesViewsOrderBy)), graphql_name='orderBy', default=('NATURAL',))),\n        ('condition', sgqlc.types.Arg(ImagesCollectionsBinariesViewCondition,\n         graphql_name='condition', default=None)),\n        ('filter', sgqlc.types.Arg(ImagesCollectionsBinariesViewFilter,\n         graphql_name='filter', default=None)),\n    ))\n    )\n    items = sgqlc.types.Field(ItemsConnection, graphql_name='items', args=sgqlc.types.ArgDict((\n        ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)),\n        ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)),\n        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),\n        ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)),\n        ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)),\n        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(\n            ItemsOrderBy)), graphql_name='orderBy', default=('PRIMARY_KEY_ASC',))),\n        ('condition', sgqlc.types.Arg(ItemCondition,\n         graphql_name='condition', default=None)),\n        ('filter', sgqlc.types.Arg(ItemFilter, graphql_name='filter', default=None)),\n    ))\n    )\n    migrations = sgqlc.types.Field(MigrationsConnection, graphql_name='migrations', args=sgqlc.types.ArgDict((\n        ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)),\n        ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)),\n        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),\n        ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)),\n        ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)),\n        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(\n            MigrationsOrderBy)), graphql_name='orderBy', default=('PRIMARY_KEY_ASC',))),\n        ('condition', sgqlc.types.Arg(MigrationCondition,\n         graphql_name='condition', default=None)),\n        ('filter', sgqlc.types.Arg(MigrationFilter,\n         graphql_name='filter', default=None)),\n    ))\n    )\n    organizations = sgqlc.types.Field(OrganizationsConnection, graphql_name='organizations', args=sgqlc.types.ArgDict((\n        ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)),\n        ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)),\n        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),\n        ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)),\n        ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)),\n        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(\n            OrganizationsOrderBy)), graphql_name='orderBy', default=('ORDER_ASC',))),\n        ('condition', sgqlc.types.Arg(OrganizationCondition,\n         graphql_name='condition', default=None)),\n        ('filter', sgqlc.types.Arg(OrganizationFilter,\n         graphql_name='filter', default=None)),\n    ))\n    )\n    permanent_livestreams = sgqlc.types.Field(PermanentLivestreamsConnection, graphql_name='permanentLivestreams', args=sgqlc.types.ArgDict((\n        ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)),\n        ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)),\n        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),\n        ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)),\n        ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)),\n        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(\n            PermanentLivestreamsOrderBy)), graphql_name='orderBy', default=('ORDER_ASC',))),\n        ('condition', sgqlc.types.Arg(PermanentLivestreamCondition,\n         graphql_name='condition', default=None)),\n        ('filter', sgqlc.types.Arg(PermanentLivestreamFilter,\n         graphql_name='filter', default=None)),\n    ))\n    )\n    program_sets = sgqlc.types.Field(ProgramSetsConnection, graphql_name='programSets', args=sgqlc.types.ArgDict((\n        ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)),\n        ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)),\n        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),\n        ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)),\n        ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)),\n        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(\n            ProgramSetsOrderBy)), graphql_name='orderBy', default=('PRIMARY_KEY_ASC',))),\n        ('condition', sgqlc.types.Arg(ProgramSetCondition,\n         graphql_name='condition', default=None)),\n        ('filter', sgqlc.types.Arg(ProgramSetFilter,\n         graphql_name='filter', default=None)),\n    ))\n    )\n    publication_services = sgqlc.types.Field(PublicationServicesConnection, graphql_name='publicationServices', args=sgqlc.types.ArgDict((\n        ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)),\n        ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)),\n        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),\n        ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)),\n        ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)),\n        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(\n            PublicationServicesOrderBy)), graphql_name='orderBy', default=('ORDER_ASC',))),\n        ('condition', sgqlc.types.Arg(PublicationServiceCondition,\n         graphql_name='condition', default=None)),\n        ('filter', sgqlc.types.Arg(PublicationServiceFilter,\n         graphql_name='filter', default=None)),\n    ))\n    )\n    audio_binary = sgqlc.types.Field('AudioBinary', graphql_name='audioBinary', args=sgqlc.types.ArgDict((\n        ('id', sgqlc.types.Arg(sgqlc.types.non_null(\n            String), graphql_name='id', default=None)),\n    ))\n    )\n    categories_to_program_set = sgqlc.types.Field('CategoriesToProgramSet', graphql_name='categoriesToProgramSet', args=sgqlc.types.ArgDict((\n        ('program_set_core_id', sgqlc.types.Arg(sgqlc.types.non_null(\n            String), graphql_name='programSetCoreId', default=None)),\n        ('category_sophora_id', sgqlc.types.Arg(sgqlc.types.non_null(\n            String), graphql_name='categorySophoraId', default=None)),\n    ))\n    )\n    concept = sgqlc.types.Field('Concept', graphql_name='concept', args=sgqlc.types.ArgDict((\n        ('item_id', sgqlc.types.Arg(sgqlc.types.non_null(\n            Int), graphql_name='itemId', default=None)),\n        ('concept_source', sgqlc.types.Arg(sgqlc.types.non_null(\n            String), graphql_name='conceptSource', default=None)),\n    ))\n    )\n    config = sgqlc.types.Field('Config', graphql_name='config', args=sgqlc.types.ArgDict((\n        ('key', sgqlc.types.Arg(sgqlc.types.non_null(\n            String), graphql_name='key', default=None)),\n    ))\n    )\n    editorial_category = sgqlc.types.Field(Board, graphql_name='editorialCategory', args=sgqlc.types.ArgDict((\n        ('id', sgqlc.types.Arg(sgqlc.types.non_null(\n            ID), graphql_name='id', default=None)),\n        ('source', sgqlc.types.Arg(SourceSystem, graphql_name='source', default=None)),\n        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=0)),\n        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=12)),\n    ))\n    )\n    editorial_category_by_sophora_id = sgqlc.types.Field('EditorialCategory', graphql_name='editorialCategoryBySophoraId', args=sgqlc.types.ArgDict((\n        ('sophora_id', sgqlc.types.Arg(sgqlc.types.non_null(\n            String), graphql_name='sophoraId', default=None)),\n    ))\n    )\n    editorial_collection = sgqlc.types.Field('EditorialCollection', graphql_name='editorialCollection', args=sgqlc.types.ArgDict((\n        ('id', sgqlc.types.Arg(sgqlc.types.non_null(\n            ID), graphql_name='id', default=None)),\n        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=0)),\n        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=12)),\n        ('source', sgqlc.types.Arg(SourceSystem, graphql_name='source', default=None)),\n    ))\n    )\n    editorial_collection_by_coremedia_id = sgqlc.types.Field('EditorialCollection', graphql_name='editorialCollectionByCoremediaId', args=sgqlc.types.ArgDict((\n        ('coremedia_id', sgqlc.types.Arg(sgqlc.types.non_null(\n            String), graphql_name='coremediaId', default=None)),\n    ))\n    )\n    grouping = sgqlc.types.Field('Grouping', graphql_name='grouping', args=sgqlc.types.ArgDict((\n        ('id', sgqlc.types.Arg(sgqlc.types.non_null(\n            String), graphql_name='id', default=None)),\n    ))\n    )\n    grouping_by_core_id = sgqlc.types.Field('Grouping', graphql_name='groupingByCoreId', args=sgqlc.types.ArgDict((\n        ('core_id', sgqlc.types.Arg(sgqlc.types.non_null(\n            String), graphql_name='coreId', default=None)),\n    ))\n    )\n    image_binary = sgqlc.types.Field('ImageBinary', graphql_name='imageBinary', args=sgqlc.types.ArgDict((\n        ('id', sgqlc.types.Arg(sgqlc.types.non_null(\n            String), graphql_name='id', default=None)),\n    ))\n    )\n    image_collection = sgqlc.types.Field('ImageCollection', graphql_name='imageCollection', args=sgqlc.types.ArgDict((\n        ('id', sgqlc.types.Arg(sgqlc.types.non_null(\n            String), graphql_name='id', default=None)),\n    ))\n    )\n    image = sgqlc.types.Field('Image', graphql_name='image', args=sgqlc.types.ArgDict((\n        ('id', sgqlc.types.Arg(sgqlc.types.non_null(\n            String), graphql_name='id', default=None)),\n    ))\n    )\n    item = sgqlc.types.Field('Item', graphql_name='item', args=sgqlc.types.ArgDict((\n        ('id', sgqlc.types.Arg(sgqlc.types.non_null(\n            ID), graphql_name='id', default=None)),\n    ))\n    )\n    item_by_core_id = sgqlc.types.Field('Item', graphql_name='itemByCoreId', args=sgqlc.types.ArgDict((\n        ('core_id', sgqlc.types.Arg(sgqlc.types.non_null(\n            String), graphql_name='coreId', default=None)),\n    ))\n    )\n    item_by_external_id = sgqlc.types.Field('Item', graphql_name='itemByExternalId', args=sgqlc.types.ArgDict((\n        ('external_id', sgqlc.types.Arg(sgqlc.types.non_null(\n            String), graphql_name='externalId', default=None)),\n    ))\n    )\n    migration = sgqlc.types.Field('Migration', graphql_name='migration', args=sgqlc.types.ArgDict((\n        ('id', sgqlc.types.Arg(sgqlc.types.non_null(\n            Int), graphql_name='id', default=None)),\n    ))\n    )\n    migration_by_name = sgqlc.types.Field('Migration', graphql_name='migrationByName', args=sgqlc.types.ArgDict((\n        ('name', sgqlc.types.Arg(sgqlc.types.non_null(\n            String), graphql_name='name', default=None)),\n    ))\n    )\n    organization_by_id = sgqlc.types.Field('Organization', graphql_name='organizationById', args=sgqlc.types.ArgDict((\n        ('id', sgqlc.types.Arg(sgqlc.types.non_null(\n            Int), graphql_name='id', default=None)),\n    ))\n    )\n    organization = sgqlc.types.Field('Organization', graphql_name='organization', args=sgqlc.types.ArgDict((\n        ('id', sgqlc.types.Arg(ID, graphql_name='id', default=None)),\n        ('name', sgqlc.types.Arg(String, graphql_name='name', default=None)),\n    ))\n    )\n    organization_by_core_id = sgqlc.types.Field('Organization', graphql_name='organizationByCoreId', args=sgqlc.types.ArgDict((\n        ('core_id', sgqlc.types.Arg(sgqlc.types.non_null(\n            String), graphql_name='coreId', default=None)),\n    ))\n    )\n    permanent_livestream = sgqlc.types.Field('PermanentLivestream', graphql_name='permanentLivestream', args=sgqlc.types.ArgDict((\n        ('id', sgqlc.types.Arg(sgqlc.types.non_null(\n            String), graphql_name='id', default=None)),\n    ))\n    )\n    permanent_livestream_by_core_id = sgqlc.types.Field('PermanentLivestream', graphql_name='permanentLivestreamByCoreId', args=sgqlc.types.ArgDict((\n        ('core_id', sgqlc.types.Arg(sgqlc.types.non_null(\n            String), graphql_name='coreId', default=None)),\n    ))\n    )\n    program_set = sgqlc.types.Field('ProgramSet', graphql_name='programSet', args=sgqlc.types.ArgDict((\n        ('id', sgqlc.types.Arg(sgqlc.types.non_null(\n            ID), graphql_name='id', default=None)),\n    ))\n    )\n    program_set_by_core_id = sgqlc.types.Field('ProgramSet', graphql_name='programSetByCoreId', args=sgqlc.types.ArgDict((\n        ('core_id', sgqlc.types.Arg(sgqlc.types.non_null(\n            String), graphql_name='coreId', default=None)),\n    ))\n    )\n    publication_service = sgqlc.types.Field('PublicationService', graphql_name='publicationService', args=sgqlc.types.ArgDict((\n        ('id', sgqlc.types.Arg(sgqlc.types.non_null(\n            ID), graphql_name='id', default=None)),\n        ('source', sgqlc.types.Arg(SourceSystem, graphql_name='source', default=None)),\n    ))\n    )\n    publication_service_by_title = sgqlc.types.Field('PublicationService', graphql_name='publicationServiceByTitle', args=sgqlc.types.ArgDict((\n        ('title', sgqlc.types.Arg(sgqlc.types.non_null(\n            String), graphql_name='title', default=None)),\n    ))\n    )\n    publication_service_by_core_id = sgqlc.types.Field('PublicationService', graphql_name='publicationServiceByCoreId', args=sgqlc.types.ArgDict((\n        ('core_id', sgqlc.types.Arg(sgqlc.types.non_null(\n            String), graphql_name='coreId', default=None)),\n    ))\n    )\n    transcript = sgqlc.types.Field('Transcript', graphql_name='transcript', args=sgqlc.types.ArgDict((\n        ('item_id', sgqlc.types.Arg(sgqlc.types.non_null(\n            Int), graphql_name='itemId', default=None)),\n    ))\n    )\n    debug_show_groups = sgqlc.types.Field(DebugShowGroupsConnection, graphql_name='debugShowGroups', args=sgqlc.types.ArgDict((\n        ('show_id', sgqlc.types.Arg(Int, graphql_name='showId', default=None)),\n        ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)),\n        ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)),\n        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),\n        ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)),\n        ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)),\n    ))\n    )\n    editorial_categories_by_ids = sgqlc.types.Field(EditorialCategoriesConnection, graphql_name='editorialCategoriesByIds', args=sgqlc.types.ArgDict((\n        ('ids', sgqlc.types.Arg(sgqlc.types.list_of(\n            String), graphql_name='ids', default=None)),\n        ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)),\n        ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)),\n        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),\n        ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)),\n        ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)),\n    ))\n    )\n    editorial_categories_by_ids_list = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('EditorialCategory')), graphql_name='editorialCategoriesByIdsList', args=sgqlc.types.ArgDict((\n        ('ids', sgqlc.types.Arg(sgqlc.types.list_of(\n            String), graphql_name='ids', default=None)),\n        ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)),\n        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),\n    ))\n    )\n    editorial_collections_by_ids = sgqlc.types.Field(EditorialCollectionsConnection, graphql_name='editorialCollectionsByIds', args=sgqlc.types.ArgDict((\n        ('ids', sgqlc.types.Arg(sgqlc.types.list_of(\n            String), graphql_name='ids', default=None)),\n        ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)),\n        ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)),\n        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),\n        ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)),\n        ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)),\n    ))\n    )\n    editorial_collections_by_ids_list = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('EditorialCollection')), graphql_name='editorialCollectionsByIdsList', args=sgqlc.types.ArgDict((\n        ('ids', sgqlc.types.Arg(sgqlc.types.list_of(\n            String), graphql_name='ids', default=None)),\n        ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)),\n        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),\n    ))\n    )\n    isnumeric = sgqlc.types.Field(Boolean, graphql_name='isnumeric', args=sgqlc.types.ArgDict((\n        ('arg0', sgqlc.types.Arg(sgqlc.types.non_null(\n            String), graphql_name='arg0', default=None)),\n    ))\n    )\n    items_by_ids = sgqlc.types.Field(ItemsConnection, graphql_name='itemsByIds', args=sgqlc.types.ArgDict((\n        ('ids', sgqlc.types.Arg(sgqlc.types.list_of(\n            String), graphql_name='ids', default=None)),\n        ('is_published', sgqlc.types.Arg(\n            Boolean, graphql_name='isPublished', default=None)),\n        ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)),\n        ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)),\n        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),\n        ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)),\n        ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)),\n    ))\n    )\n    items_by_ids_list = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('Item')), graphql_name='itemsByIdsList', args=sgqlc.types.ArgDict((\n        ('ids', sgqlc.types.Arg(sgqlc.types.list_of(\n            String), graphql_name='ids', default=None)),\n        ('is_published', sgqlc.types.Arg(\n            Boolean, graphql_name='isPublished', default=None)),\n        ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)),\n        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),\n    ))\n    )\n    jsonb_array = sgqlc.types.Field(sgqlc.types.list_of(String), graphql_name='jsonbArray', args=sgqlc.types.ArgDict((\n        ('arg0', sgqlc.types.Arg(JSON, graphql_name='arg0', default=None)),\n    ))\n    )\n    program_sets_by_ids = sgqlc.types.Field(ProgramSetsConnection, graphql_name='programSetsByIds', args=sgqlc.types.ArgDict((\n        ('ids', sgqlc.types.Arg(sgqlc.types.list_of(\n            String), graphql_name='ids', default=None)),\n        ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)),\n        ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)),\n        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),\n        ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)),\n        ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)),\n    ))\n    )\n    program_sets_by_ids_list = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('ProgramSet')), graphql_name='programSetsByIdsList', args=sgqlc.types.ArgDict((\n        ('ids', sgqlc.types.Arg(sgqlc.types.list_of(\n            String), graphql_name='ids', default=None)),\n        ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)),\n        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),\n    ))\n    )\n    shows_with_mapping = sgqlc.types.Field(ProgramSetsConnection, graphql_name='showsWithMapping', args=sgqlc.types.ArgDict((\n        ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)),\n        ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)),\n        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),\n        ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)),\n        ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)),\n    ))\n    )\n    shows_with_mapping_list = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('ProgramSet')), graphql_name='showsWithMappingList', args=sgqlc.types.ArgDict((\n        ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)),\n        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),\n    ))\n    )\n    audio_binary_by_node_id = sgqlc.types.Field('AudioBinary', graphql_name='audioBinaryByNodeId', args=sgqlc.types.ArgDict((\n        ('node_id', sgqlc.types.Arg(sgqlc.types.non_null(\n            ID), graphql_name='nodeId', default=None)),\n    ))\n    )\n    categories_to_program_set_by_node_id = sgqlc.types.Field('CategoriesToProgramSet', graphql_name='categoriesToProgramSetByNodeId', args=sgqlc.types.ArgDict((\n        ('node_id', sgqlc.types.Arg(sgqlc.types.non_null(\n            ID), graphql_name='nodeId', default=None)),\n    ))\n    )\n    concept_by_node_id = sgqlc.types.Field('Concept', graphql_name='conceptByNodeId', args=sgqlc.types.ArgDict((\n        ('node_id', sgqlc.types.Arg(sgqlc.types.non_null(\n            ID), graphql_name='nodeId', default=None)),\n    ))\n    )\n    config_by_node_id = sgqlc.types.Field('Config', graphql_name='configByNodeId', args=sgqlc.types.ArgDict((\n        ('node_id', sgqlc.types.Arg(sgqlc.types.non_null(\n            ID), graphql_name='nodeId', default=None)),\n    ))\n    )\n    editorial_category_by_node_id = sgqlc.types.Field('EditorialCategory', graphql_name='editorialCategoryByNodeId', args=sgqlc.types.ArgDict((\n        ('node_id', sgqlc.types.Arg(sgqlc.types.non_null(\n            ID), graphql_name='nodeId', default=None)),\n    ))\n    )\n    editorial_collection_by_node_id = sgqlc.types.Field('EditorialCollection', graphql_name='editorialCollectionByNodeId', args=sgqlc.types.ArgDict((\n        ('node_id', sgqlc.types.Arg(sgqlc.types.non_null(\n            ID), graphql_name='nodeId', default=None)),\n    ))\n    )\n    grouping_by_node_id = sgqlc.types.Field('Grouping', graphql_name='groupingByNodeId', args=sgqlc.types.ArgDict((\n        ('node_id', sgqlc.types.Arg(sgqlc.types.non_null(\n            ID), graphql_name='nodeId', default=None)),\n    ))\n    )\n    image_binary_by_node_id = sgqlc.types.Field('ImageBinary', graphql_name='imageBinaryByNodeId', args=sgqlc.types.ArgDict((\n        ('node_id', sgqlc.types.Arg(sgqlc.types.non_null(\n            ID), graphql_name='nodeId', default=None)),\n    ))\n    )\n    image_collection_by_node_id = sgqlc.types.Field('ImageCollection', graphql_name='imageCollectionByNodeId', args=sgqlc.types.ArgDict((\n        ('node_id', sgqlc.types.Arg(sgqlc.types.non_null(\n            ID), graphql_name='nodeId', default=None)),\n    ))\n    )\n    image_by_node_id = sgqlc.types.Field('Image', graphql_name='imageByNodeId', args=sgqlc.types.ArgDict((\n        ('node_id', sgqlc.types.Arg(sgqlc.types.non_null(\n            ID), graphql_name='nodeId', default=None)),\n    ))\n    )\n    item_by_node_id = sgqlc.types.Field('Item', graphql_name='itemByNodeId', args=sgqlc.types.ArgDict((\n        ('node_id', sgqlc.types.Arg(sgqlc.types.non_null(\n            ID), graphql_name='nodeId', default=None)),\n    ))\n    )\n    migration_by_node_id = sgqlc.types.Field('Migration', graphql_name='migrationByNodeId', args=sgqlc.types.ArgDict((\n        ('node_id', sgqlc.types.Arg(sgqlc.types.non_null(\n            ID), graphql_name='nodeId', default=None)),\n    ))\n    )\n    organization_by_node_id = sgqlc.types.Field('Organization', graphql_name='organizationByNodeId', args=sgqlc.types.ArgDict((\n        ('node_id', sgqlc.types.Arg(sgqlc.types.non_null(\n            ID), graphql_name='nodeId', default=None)),\n    ))\n    )\n    permanent_livestream_by_node_id = sgqlc.types.Field('PermanentLivestream', graphql_name='permanentLivestreamByNodeId', args=sgqlc.types.ArgDict((\n        ('node_id', sgqlc.types.Arg(sgqlc.types.non_null(\n            ID), graphql_name='nodeId', default=None)),\n    ))\n    )\n    program_set_by_node_id = sgqlc.types.Field('ProgramSet', graphql_name='programSetByNodeId', args=sgqlc.types.ArgDict((\n        ('node_id', sgqlc.types.Arg(sgqlc.types.non_null(\n            ID), graphql_name='nodeId', default=None)),\n    ))\n    )\n    publication_service_by_node_id = sgqlc.types.Field('PublicationService', graphql_name='publicationServiceByNodeId', args=sgqlc.types.ArgDict((\n        ('node_id', sgqlc.types.Arg(sgqlc.types.non_null(\n            ID), graphql_name='nodeId', default=None)),\n    ))\n    )\n    transcript_by_node_id = sgqlc.types.Field('Transcript', graphql_name='transcriptByNodeId', args=sgqlc.types.ArgDict((\n        ('node_id', sgqlc.types.Arg(sgqlc.types.non_null(\n            ID), graphql_name='nodeId', default=None)),\n    ))\n    )\n    search = sgqlc.types.Field('SearchResult', graphql_name='search', args=sgqlc.types.ArgDict((\n        ('query', sgqlc.types.Arg(String, graphql_name='query', default=None)),\n        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=0)),\n        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=24)),\n        ('type', sgqlc.types.Arg(SearchType, graphql_name='type', default='All')),\n        ('source', sgqlc.types.Arg(SourceSystem, graphql_name='source', default=None)),\n    ))\n    )\n    homescreen = sgqlc.types.Field(Board, graphql_name='homescreen', args=sgqlc.types.ArgDict((\n        ('id', sgqlc.types.Arg(ID, graphql_name='id', default=None)),\n        ('source', sgqlc.types.Arg(SourceSystem, graphql_name='source', default=None)),\n        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),\n    ))\n    )\n    show = sgqlc.types.Field('ProgramSet', graphql_name='show', args=sgqlc.types.ArgDict((\n        ('id', sgqlc.types.Arg(sgqlc.types.non_null(\n            ID), graphql_name='id', default=None)),\n    ))\n    )\n    section = sgqlc.types.Field('Section', graphql_name='section', args=sgqlc.types.ArgDict((\n        ('id', sgqlc.types.Arg(sgqlc.types.non_null(\n            ID), graphql_name='id', default=None)),\n    ))\n    )\n    widget = sgqlc.types.Field('SophoraWidget', graphql_name='widget', args=sgqlc.types.ArgDict((\n        ('id', sgqlc.types.Arg(sgqlc.types.non_null(\n            ID), graphql_name='id', default=None)),\n    ))\n    )\n    widgets = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('SophoraWidget')), graphql_name='widgets', args=sgqlc.types.ArgDict((\n        ('ids', sgqlc.types.Arg(sgqlc.types.non_null(sgqlc.types.list_of(\n            sgqlc.types.non_null(ID))), graphql_name='ids', default=None)),\n    ))\n    )\n    compilations = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('SophoraCompilation')), graphql_name='compilations', args=sgqlc.types.ArgDict((\n        ('ids', sgqlc.types.Arg(sgqlc.types.non_null(sgqlc.types.list_of(\n            sgqlc.types.non_null(ID))), graphql_name='ids', default=None)),\n    ))\n    )\n    teasers = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('SophoraTeaser')), graphql_name='teasers', args=sgqlc.types.ArgDict((\n        ('ids', sgqlc.types.Arg(sgqlc.types.non_null(sgqlc.types.list_of(\n            sgqlc.types.non_null(ID))), graphql_name='ids', default=None)),\n    ))\n    )\n    node = sgqlc.types.Field(Node, graphql_name='node', args=sgqlc.types.ArgDict((\n        ('id', sgqlc.types.Arg(sgqlc.types.non_null(\n            ID), graphql_name='id', default=None)),\n    ))\n    )\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.__field_names__","title":"<code>__field_names__ = ('all_end_users', 'all_playlists', 'bookmark', 'bookmark_list', 'end_user', 'history_entry', 'playlist', 'program_set_subscription', 'system', 'configs', 'editorial_categories', 'editorial_collections', 'groupings', 'images_collections_binaries_views', 'items', 'migrations', 'organizations', 'permanent_livestreams', 'program_sets', 'publication_services', 'audio_binary', 'categories_to_program_set', 'concept', 'config', 'editorial_category', 'editorial_category_by_sophora_id', 'editorial_collection', 'editorial_collection_by_coremedia_id', 'grouping', 'grouping_by_core_id', 'image_binary', 'image_collection', 'image', 'item', 'item_by_core_id', 'item_by_external_id', 'migration', 'migration_by_name', 'organization_by_id', 'organization', 'organization_by_core_id', 'permanent_livestream', 'permanent_livestream_by_core_id', 'program_set', 'program_set_by_core_id', 'publication_service', 'publication_service_by_title', 'publication_service_by_core_id', 'transcript', 'debug_show_groups', 'editorial_categories_by_ids', 'editorial_categories_by_ids_list', 'editorial_collections_by_ids', 'editorial_collections_by_ids_list', 'isnumeric', 'items_by_ids', 'items_by_ids_list', 'jsonb_array', 'program_sets_by_ids', 'program_sets_by_ids_list', 'shows_with_mapping', 'shows_with_mapping_list', 'audio_binary_by_node_id', 'categories_to_program_set_by_node_id', 'concept_by_node_id', 'config_by_node_id', 'editorial_category_by_node_id', 'editorial_collection_by_node_id', 'grouping_by_node_id', 'image_binary_by_node_id', 'image_collection_by_node_id', 'image_by_node_id', 'item_by_node_id', 'migration_by_node_id', 'organization_by_node_id', 'permanent_livestream_by_node_id', 'program_set_by_node_id', 'publication_service_by_node_id', 'transcript_by_node_id', 'search', 'homescreen', 'show', 'section', 'widget', 'widgets', 'compilations', 'teasers', 'node')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.all_end_users","title":"<code>all_end_users = sgqlc.types.Field(EndUserConnection, graphql_name='allEndUsers', args=sgqlc.types.ArgDict((('after', sgqlc.types.Arg(String, graphql_name='after', default=None)), ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)), ('before', sgqlc.types.Arg(String, graphql_name='before', default=None)), ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)), ('filter', sgqlc.types.Arg(EndUserFilterB, graphql_name='filter', default=None)), ('order_by', sgqlc.types.Arg(EndUserSortOrder, graphql_name='orderBy', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.all_playlists","title":"<code>all_playlists = sgqlc.types.Field(PlaylistConnection, graphql_name='allPlaylists', args=sgqlc.types.ArgDict((('after', sgqlc.types.Arg(String, graphql_name='after', default=None)), ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)), ('before', sgqlc.types.Arg(String, graphql_name='before', default=None)), ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)), ('filter', sgqlc.types.Arg(PlaylistFilterB, graphql_name='filter', default=None)), ('order_by', sgqlc.types.Arg(PlaylistSortOrder, graphql_name='orderBy', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.audio_binary","title":"<code>audio_binary = sgqlc.types.Field('AudioBinary', graphql_name='audioBinary', args=sgqlc.types.ArgDict((('id', sgqlc.types.Arg(sgqlc.types.non_null(String), graphql_name='id', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.audio_binary_by_node_id","title":"<code>audio_binary_by_node_id = sgqlc.types.Field('AudioBinary', graphql_name='audioBinaryByNodeId', args=sgqlc.types.ArgDict((('node_id', sgqlc.types.Arg(sgqlc.types.non_null(ID), graphql_name='nodeId', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.bookmark","title":"<code>bookmark = sgqlc.types.Field(BookmarkInterface, graphql_name='bookmark', args=sgqlc.types.ArgDict((('id', sgqlc.types.Arg(sgqlc.types.non_null(ID), graphql_name='id', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.bookmark_list","title":"<code>bookmark_list = sgqlc.types.Field(BookmarkListInterface, graphql_name='bookmarkList', args=sgqlc.types.ArgDict((('id', sgqlc.types.Arg(sgqlc.types.non_null(ID), graphql_name='id', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.categories_to_program_set","title":"<code>categories_to_program_set = sgqlc.types.Field('CategoriesToProgramSet', graphql_name='categoriesToProgramSet', args=sgqlc.types.ArgDict((('program_set_core_id', sgqlc.types.Arg(sgqlc.types.non_null(String), graphql_name='programSetCoreId', default=None)), ('category_sophora_id', sgqlc.types.Arg(sgqlc.types.non_null(String), graphql_name='categorySophoraId', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.categories_to_program_set_by_node_id","title":"<code>categories_to_program_set_by_node_id = sgqlc.types.Field('CategoriesToProgramSet', graphql_name='categoriesToProgramSetByNodeId', args=sgqlc.types.ArgDict((('node_id', sgqlc.types.Arg(sgqlc.types.non_null(ID), graphql_name='nodeId', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.compilations","title":"<code>compilations = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('SophoraCompilation')), graphql_name='compilations', args=sgqlc.types.ArgDict((('ids', sgqlc.types.Arg(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(ID))), graphql_name='ids', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.concept","title":"<code>concept = sgqlc.types.Field('Concept', graphql_name='concept', args=sgqlc.types.ArgDict((('item_id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='itemId', default=None)), ('concept_source', sgqlc.types.Arg(sgqlc.types.non_null(String), graphql_name='conceptSource', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.concept_by_node_id","title":"<code>concept_by_node_id = sgqlc.types.Field('Concept', graphql_name='conceptByNodeId', args=sgqlc.types.ArgDict((('node_id', sgqlc.types.Arg(sgqlc.types.non_null(ID), graphql_name='nodeId', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.config","title":"<code>config = sgqlc.types.Field('Config', graphql_name='config', args=sgqlc.types.ArgDict((('key', sgqlc.types.Arg(sgqlc.types.non_null(String), graphql_name='key', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.config_by_node_id","title":"<code>config_by_node_id = sgqlc.types.Field('Config', graphql_name='configByNodeId', args=sgqlc.types.ArgDict((('node_id', sgqlc.types.Arg(sgqlc.types.non_null(ID), graphql_name='nodeId', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.configs","title":"<code>configs = sgqlc.types.Field(ConfigsConnection, graphql_name='configs', args=sgqlc.types.ArgDict((('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)), ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)), ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)), ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)), ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)), ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(ConfigsOrderBy)), graphql_name='orderBy', default=('PRIMARY_KEY_ASC'))), ('condition', sgqlc.types.Arg(ConfigCondition, graphql_name='condition', default=None)), ('filter', sgqlc.types.Arg(ConfigFilter, graphql_name='filter', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.debug_show_groups","title":"<code>debug_show_groups = sgqlc.types.Field(DebugShowGroupsConnection, graphql_name='debugShowGroups', args=sgqlc.types.ArgDict((('show_id', sgqlc.types.Arg(Int, graphql_name='showId', default=None)), ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)), ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)), ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)), ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)), ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.editorial_categories","title":"<code>editorial_categories = sgqlc.types.Field(EditorialCategoriesConnection, graphql_name='editorialCategories', args=sgqlc.types.ArgDict((('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)), ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)), ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)), ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)), ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)), ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(EditorialCategoriesOrderBy)), graphql_name='orderBy', default=('ORDER_ASC'))), ('condition', sgqlc.types.Arg(EditorialCategoryCondition, graphql_name='condition', default=None)), ('filter', sgqlc.types.Arg(EditorialCategoryFilter, graphql_name='filter', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.editorial_categories_by_ids","title":"<code>editorial_categories_by_ids = sgqlc.types.Field(EditorialCategoriesConnection, graphql_name='editorialCategoriesByIds', args=sgqlc.types.ArgDict((('ids', sgqlc.types.Arg(sgqlc.types.list_of(String), graphql_name='ids', default=None)), ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)), ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)), ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)), ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)), ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.editorial_categories_by_ids_list","title":"<code>editorial_categories_by_ids_list = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('EditorialCategory')), graphql_name='editorialCategoriesByIdsList', args=sgqlc.types.ArgDict((('ids', sgqlc.types.Arg(sgqlc.types.list_of(String), graphql_name='ids', default=None)), ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)), ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.editorial_category","title":"<code>editorial_category = sgqlc.types.Field(Board, graphql_name='editorialCategory', args=sgqlc.types.ArgDict((('id', sgqlc.types.Arg(sgqlc.types.non_null(ID), graphql_name='id', default=None)), ('source', sgqlc.types.Arg(SourceSystem, graphql_name='source', default=None)), ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=0)), ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=12)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.editorial_category_by_node_id","title":"<code>editorial_category_by_node_id = sgqlc.types.Field('EditorialCategory', graphql_name='editorialCategoryByNodeId', args=sgqlc.types.ArgDict((('node_id', sgqlc.types.Arg(sgqlc.types.non_null(ID), graphql_name='nodeId', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.editorial_category_by_sophora_id","title":"<code>editorial_category_by_sophora_id = sgqlc.types.Field('EditorialCategory', graphql_name='editorialCategoryBySophoraId', args=sgqlc.types.ArgDict((('sophora_id', sgqlc.types.Arg(sgqlc.types.non_null(String), graphql_name='sophoraId', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.editorial_collection","title":"<code>editorial_collection = sgqlc.types.Field('EditorialCollection', graphql_name='editorialCollection', args=sgqlc.types.ArgDict((('id', sgqlc.types.Arg(sgqlc.types.non_null(ID), graphql_name='id', default=None)), ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=0)), ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=12)), ('source', sgqlc.types.Arg(SourceSystem, graphql_name='source', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.editorial_collection_by_coremedia_id","title":"<code>editorial_collection_by_coremedia_id = sgqlc.types.Field('EditorialCollection', graphql_name='editorialCollectionByCoremediaId', args=sgqlc.types.ArgDict((('coremedia_id', sgqlc.types.Arg(sgqlc.types.non_null(String), graphql_name='coremediaId', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.editorial_collection_by_node_id","title":"<code>editorial_collection_by_node_id = sgqlc.types.Field('EditorialCollection', graphql_name='editorialCollectionByNodeId', args=sgqlc.types.ArgDict((('node_id', sgqlc.types.Arg(sgqlc.types.non_null(ID), graphql_name='nodeId', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.editorial_collections","title":"<code>editorial_collections = sgqlc.types.Field(EditorialCollectionsConnection, graphql_name='editorialCollections', args=sgqlc.types.ArgDict((('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)), ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)), ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)), ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)), ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)), ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(EditorialCollectionsOrderBy)), graphql_name='orderBy', default=('PRIMARY_KEY_ASC'))), ('condition', sgqlc.types.Arg(EditorialCollectionCondition, graphql_name='condition', default=None)), ('filter', sgqlc.types.Arg(EditorialCollectionFilter, graphql_name='filter', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.editorial_collections_by_ids","title":"<code>editorial_collections_by_ids = sgqlc.types.Field(EditorialCollectionsConnection, graphql_name='editorialCollectionsByIds', args=sgqlc.types.ArgDict((('ids', sgqlc.types.Arg(sgqlc.types.list_of(String), graphql_name='ids', default=None)), ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)), ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)), ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)), ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)), ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.editorial_collections_by_ids_list","title":"<code>editorial_collections_by_ids_list = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('EditorialCollection')), graphql_name='editorialCollectionsByIdsList', args=sgqlc.types.ArgDict((('ids', sgqlc.types.Arg(sgqlc.types.list_of(String), graphql_name='ids', default=None)), ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)), ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.end_user","title":"<code>end_user = sgqlc.types.Field(EndUserInterface, graphql_name='endUser', args=sgqlc.types.ArgDict((('id', sgqlc.types.Arg(sgqlc.types.non_null(ID), graphql_name='id', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.grouping","title":"<code>grouping = sgqlc.types.Field('Grouping', graphql_name='grouping', args=sgqlc.types.ArgDict((('id', sgqlc.types.Arg(sgqlc.types.non_null(String), graphql_name='id', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.grouping_by_core_id","title":"<code>grouping_by_core_id = sgqlc.types.Field('Grouping', graphql_name='groupingByCoreId', args=sgqlc.types.ArgDict((('core_id', sgqlc.types.Arg(sgqlc.types.non_null(String), graphql_name='coreId', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.grouping_by_node_id","title":"<code>grouping_by_node_id = sgqlc.types.Field('Grouping', graphql_name='groupingByNodeId', args=sgqlc.types.ArgDict((('node_id', sgqlc.types.Arg(sgqlc.types.non_null(ID), graphql_name='nodeId', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.groupings","title":"<code>groupings = sgqlc.types.Field(GroupingsConnection, graphql_name='groupings', args=sgqlc.types.ArgDict((('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)), ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)), ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)), ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)), ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)), ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(GroupingsOrderBy)), graphql_name='orderBy', default=('PRIMARY_KEY_ASC'))), ('condition', sgqlc.types.Arg(GroupingCondition, graphql_name='condition', default=None)), ('filter', sgqlc.types.Arg(GroupingFilter, graphql_name='filter', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.history_entry","title":"<code>history_entry = sgqlc.types.Field(HistoryEntryInterface, graphql_name='historyEntry', args=sgqlc.types.ArgDict((('id', sgqlc.types.Arg(sgqlc.types.non_null(ID), graphql_name='id', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.homescreen","title":"<code>homescreen = sgqlc.types.Field(Board, graphql_name='homescreen', args=sgqlc.types.ArgDict((('id', sgqlc.types.Arg(ID, graphql_name='id', default=None)), ('source', sgqlc.types.Arg(SourceSystem, graphql_name='source', default=None)), ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.image","title":"<code>image = sgqlc.types.Field('Image', graphql_name='image', args=sgqlc.types.ArgDict((('id', sgqlc.types.Arg(sgqlc.types.non_null(String), graphql_name='id', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.image_binary","title":"<code>image_binary = sgqlc.types.Field('ImageBinary', graphql_name='imageBinary', args=sgqlc.types.ArgDict((('id', sgqlc.types.Arg(sgqlc.types.non_null(String), graphql_name='id', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.image_binary_by_node_id","title":"<code>image_binary_by_node_id = sgqlc.types.Field('ImageBinary', graphql_name='imageBinaryByNodeId', args=sgqlc.types.ArgDict((('node_id', sgqlc.types.Arg(sgqlc.types.non_null(ID), graphql_name='nodeId', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.image_by_node_id","title":"<code>image_by_node_id = sgqlc.types.Field('Image', graphql_name='imageByNodeId', args=sgqlc.types.ArgDict((('node_id', sgqlc.types.Arg(sgqlc.types.non_null(ID), graphql_name='nodeId', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.image_collection","title":"<code>image_collection = sgqlc.types.Field('ImageCollection', graphql_name='imageCollection', args=sgqlc.types.ArgDict((('id', sgqlc.types.Arg(sgqlc.types.non_null(String), graphql_name='id', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.image_collection_by_node_id","title":"<code>image_collection_by_node_id = sgqlc.types.Field('ImageCollection', graphql_name='imageCollectionByNodeId', args=sgqlc.types.ArgDict((('node_id', sgqlc.types.Arg(sgqlc.types.non_null(ID), graphql_name='nodeId', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.images_collections_binaries_views","title":"<code>images_collections_binaries_views = sgqlc.types.Field(ImagesCollectionsBinariesViewsConnection, graphql_name='imagesCollectionsBinariesViews', args=sgqlc.types.ArgDict((('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)), ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)), ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)), ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)), ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)), ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(ImagesCollectionsBinariesViewsOrderBy)), graphql_name='orderBy', default=('NATURAL'))), ('condition', sgqlc.types.Arg(ImagesCollectionsBinariesViewCondition, graphql_name='condition', default=None)), ('filter', sgqlc.types.Arg(ImagesCollectionsBinariesViewFilter, graphql_name='filter', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.isnumeric","title":"<code>isnumeric = sgqlc.types.Field(Boolean, graphql_name='isnumeric', args=sgqlc.types.ArgDict((('arg0', sgqlc.types.Arg(sgqlc.types.non_null(String), graphql_name='arg0', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.item","title":"<code>item = sgqlc.types.Field('Item', graphql_name='item', args=sgqlc.types.ArgDict((('id', sgqlc.types.Arg(sgqlc.types.non_null(ID), graphql_name='id', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.item_by_core_id","title":"<code>item_by_core_id = sgqlc.types.Field('Item', graphql_name='itemByCoreId', args=sgqlc.types.ArgDict((('core_id', sgqlc.types.Arg(sgqlc.types.non_null(String), graphql_name='coreId', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.item_by_external_id","title":"<code>item_by_external_id = sgqlc.types.Field('Item', graphql_name='itemByExternalId', args=sgqlc.types.ArgDict((('external_id', sgqlc.types.Arg(sgqlc.types.non_null(String), graphql_name='externalId', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.item_by_node_id","title":"<code>item_by_node_id = sgqlc.types.Field('Item', graphql_name='itemByNodeId', args=sgqlc.types.ArgDict((('node_id', sgqlc.types.Arg(sgqlc.types.non_null(ID), graphql_name='nodeId', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.items","title":"<code>items = sgqlc.types.Field(ItemsConnection, graphql_name='items', args=sgqlc.types.ArgDict((('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)), ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)), ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)), ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)), ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)), ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(ItemsOrderBy)), graphql_name='orderBy', default=('PRIMARY_KEY_ASC'))), ('condition', sgqlc.types.Arg(ItemCondition, graphql_name='condition', default=None)), ('filter', sgqlc.types.Arg(ItemFilter, graphql_name='filter', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.items_by_ids","title":"<code>items_by_ids = sgqlc.types.Field(ItemsConnection, graphql_name='itemsByIds', args=sgqlc.types.ArgDict((('ids', sgqlc.types.Arg(sgqlc.types.list_of(String), graphql_name='ids', default=None)), ('is_published', sgqlc.types.Arg(Boolean, graphql_name='isPublished', default=None)), ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)), ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)), ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)), ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)), ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.items_by_ids_list","title":"<code>items_by_ids_list = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('Item')), graphql_name='itemsByIdsList', args=sgqlc.types.ArgDict((('ids', sgqlc.types.Arg(sgqlc.types.list_of(String), graphql_name='ids', default=None)), ('is_published', sgqlc.types.Arg(Boolean, graphql_name='isPublished', default=None)), ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)), ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.jsonb_array","title":"<code>jsonb_array = sgqlc.types.Field(sgqlc.types.list_of(String), graphql_name='jsonbArray', args=sgqlc.types.ArgDict((('arg0', sgqlc.types.Arg(JSON, graphql_name='arg0', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.migration","title":"<code>migration = sgqlc.types.Field('Migration', graphql_name='migration', args=sgqlc.types.ArgDict((('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.migration_by_name","title":"<code>migration_by_name = sgqlc.types.Field('Migration', graphql_name='migrationByName', args=sgqlc.types.ArgDict((('name', sgqlc.types.Arg(sgqlc.types.non_null(String), graphql_name='name', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.migration_by_node_id","title":"<code>migration_by_node_id = sgqlc.types.Field('Migration', graphql_name='migrationByNodeId', args=sgqlc.types.ArgDict((('node_id', sgqlc.types.Arg(sgqlc.types.non_null(ID), graphql_name='nodeId', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.migrations","title":"<code>migrations = sgqlc.types.Field(MigrationsConnection, graphql_name='migrations', args=sgqlc.types.ArgDict((('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)), ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)), ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)), ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)), ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)), ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(MigrationsOrderBy)), graphql_name='orderBy', default=('PRIMARY_KEY_ASC'))), ('condition', sgqlc.types.Arg(MigrationCondition, graphql_name='condition', default=None)), ('filter', sgqlc.types.Arg(MigrationFilter, graphql_name='filter', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.node","title":"<code>node = sgqlc.types.Field(Node, graphql_name='node', args=sgqlc.types.ArgDict((('id', sgqlc.types.Arg(sgqlc.types.non_null(ID), graphql_name='id', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.organization","title":"<code>organization = sgqlc.types.Field('Organization', graphql_name='organization', args=sgqlc.types.ArgDict((('id', sgqlc.types.Arg(ID, graphql_name='id', default=None)), ('name', sgqlc.types.Arg(String, graphql_name='name', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.organization_by_core_id","title":"<code>organization_by_core_id = sgqlc.types.Field('Organization', graphql_name='organizationByCoreId', args=sgqlc.types.ArgDict((('core_id', sgqlc.types.Arg(sgqlc.types.non_null(String), graphql_name='coreId', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.organization_by_id","title":"<code>organization_by_id = sgqlc.types.Field('Organization', graphql_name='organizationById', args=sgqlc.types.ArgDict((('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.organization_by_node_id","title":"<code>organization_by_node_id = sgqlc.types.Field('Organization', graphql_name='organizationByNodeId', args=sgqlc.types.ArgDict((('node_id', sgqlc.types.Arg(sgqlc.types.non_null(ID), graphql_name='nodeId', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.organizations","title":"<code>organizations = sgqlc.types.Field(OrganizationsConnection, graphql_name='organizations', args=sgqlc.types.ArgDict((('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)), ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)), ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)), ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)), ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)), ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(OrganizationsOrderBy)), graphql_name='orderBy', default=('ORDER_ASC'))), ('condition', sgqlc.types.Arg(OrganizationCondition, graphql_name='condition', default=None)), ('filter', sgqlc.types.Arg(OrganizationFilter, graphql_name='filter', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.permanent_livestream","title":"<code>permanent_livestream = sgqlc.types.Field('PermanentLivestream', graphql_name='permanentLivestream', args=sgqlc.types.ArgDict((('id', sgqlc.types.Arg(sgqlc.types.non_null(String), graphql_name='id', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.permanent_livestream_by_core_id","title":"<code>permanent_livestream_by_core_id = sgqlc.types.Field('PermanentLivestream', graphql_name='permanentLivestreamByCoreId', args=sgqlc.types.ArgDict((('core_id', sgqlc.types.Arg(sgqlc.types.non_null(String), graphql_name='coreId', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.permanent_livestream_by_node_id","title":"<code>permanent_livestream_by_node_id = sgqlc.types.Field('PermanentLivestream', graphql_name='permanentLivestreamByNodeId', args=sgqlc.types.ArgDict((('node_id', sgqlc.types.Arg(sgqlc.types.non_null(ID), graphql_name='nodeId', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.permanent_livestreams","title":"<code>permanent_livestreams = sgqlc.types.Field(PermanentLivestreamsConnection, graphql_name='permanentLivestreams', args=sgqlc.types.ArgDict((('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)), ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)), ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)), ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)), ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)), ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(PermanentLivestreamsOrderBy)), graphql_name='orderBy', default=('ORDER_ASC'))), ('condition', sgqlc.types.Arg(PermanentLivestreamCondition, graphql_name='condition', default=None)), ('filter', sgqlc.types.Arg(PermanentLivestreamFilter, graphql_name='filter', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.playlist","title":"<code>playlist = sgqlc.types.Field(PlaylistInterface, graphql_name='playlist', args=sgqlc.types.ArgDict((('id', sgqlc.types.Arg(sgqlc.types.non_null(ID), graphql_name='id', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.program_set","title":"<code>program_set = sgqlc.types.Field('ProgramSet', graphql_name='programSet', args=sgqlc.types.ArgDict((('id', sgqlc.types.Arg(sgqlc.types.non_null(ID), graphql_name='id', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.program_set_by_core_id","title":"<code>program_set_by_core_id = sgqlc.types.Field('ProgramSet', graphql_name='programSetByCoreId', args=sgqlc.types.ArgDict((('core_id', sgqlc.types.Arg(sgqlc.types.non_null(String), graphql_name='coreId', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.program_set_by_node_id","title":"<code>program_set_by_node_id = sgqlc.types.Field('ProgramSet', graphql_name='programSetByNodeId', args=sgqlc.types.ArgDict((('node_id', sgqlc.types.Arg(sgqlc.types.non_null(ID), graphql_name='nodeId', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.program_set_subscription","title":"<code>program_set_subscription = sgqlc.types.Field(ProgramSetSubscriptionInterface, graphql_name='programSetSubscription', args=sgqlc.types.ArgDict((('id', sgqlc.types.Arg(sgqlc.types.non_null(ID), graphql_name='id', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.program_sets","title":"<code>program_sets = sgqlc.types.Field(ProgramSetsConnection, graphql_name='programSets', args=sgqlc.types.ArgDict((('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)), ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)), ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)), ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)), ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)), ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(ProgramSetsOrderBy)), graphql_name='orderBy', default=('PRIMARY_KEY_ASC'))), ('condition', sgqlc.types.Arg(ProgramSetCondition, graphql_name='condition', default=None)), ('filter', sgqlc.types.Arg(ProgramSetFilter, graphql_name='filter', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.program_sets_by_ids","title":"<code>program_sets_by_ids = sgqlc.types.Field(ProgramSetsConnection, graphql_name='programSetsByIds', args=sgqlc.types.ArgDict((('ids', sgqlc.types.Arg(sgqlc.types.list_of(String), graphql_name='ids', default=None)), ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)), ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)), ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)), ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)), ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.program_sets_by_ids_list","title":"<code>program_sets_by_ids_list = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('ProgramSet')), graphql_name='programSetsByIdsList', args=sgqlc.types.ArgDict((('ids', sgqlc.types.Arg(sgqlc.types.list_of(String), graphql_name='ids', default=None)), ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)), ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.publication_service","title":"<code>publication_service = sgqlc.types.Field('PublicationService', graphql_name='publicationService', args=sgqlc.types.ArgDict((('id', sgqlc.types.Arg(sgqlc.types.non_null(ID), graphql_name='id', default=None)), ('source', sgqlc.types.Arg(SourceSystem, graphql_name='source', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.publication_service_by_core_id","title":"<code>publication_service_by_core_id = sgqlc.types.Field('PublicationService', graphql_name='publicationServiceByCoreId', args=sgqlc.types.ArgDict((('core_id', sgqlc.types.Arg(sgqlc.types.non_null(String), graphql_name='coreId', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.publication_service_by_node_id","title":"<code>publication_service_by_node_id = sgqlc.types.Field('PublicationService', graphql_name='publicationServiceByNodeId', args=sgqlc.types.ArgDict((('node_id', sgqlc.types.Arg(sgqlc.types.non_null(ID), graphql_name='nodeId', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.publication_service_by_title","title":"<code>publication_service_by_title = sgqlc.types.Field('PublicationService', graphql_name='publicationServiceByTitle', args=sgqlc.types.ArgDict((('title', sgqlc.types.Arg(sgqlc.types.non_null(String), graphql_name='title', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.publication_services","title":"<code>publication_services = sgqlc.types.Field(PublicationServicesConnection, graphql_name='publicationServices', args=sgqlc.types.ArgDict((('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)), ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)), ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)), ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)), ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)), ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(PublicationServicesOrderBy)), graphql_name='orderBy', default=('ORDER_ASC'))), ('condition', sgqlc.types.Arg(PublicationServiceCondition, graphql_name='condition', default=None)), ('filter', sgqlc.types.Arg(PublicationServiceFilter, graphql_name='filter', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.search","title":"<code>search = sgqlc.types.Field('SearchResult', graphql_name='search', args=sgqlc.types.ArgDict((('query', sgqlc.types.Arg(String, graphql_name='query', default=None)), ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=0)), ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=24)), ('type', sgqlc.types.Arg(SearchType, graphql_name='type', default='All')), ('source', sgqlc.types.Arg(SourceSystem, graphql_name='source', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.section","title":"<code>section = sgqlc.types.Field('Section', graphql_name='section', args=sgqlc.types.ArgDict((('id', sgqlc.types.Arg(sgqlc.types.non_null(ID), graphql_name='id', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.show","title":"<code>show = sgqlc.types.Field('ProgramSet', graphql_name='show', args=sgqlc.types.ArgDict((('id', sgqlc.types.Arg(sgqlc.types.non_null(ID), graphql_name='id', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.shows_with_mapping","title":"<code>shows_with_mapping = sgqlc.types.Field(ProgramSetsConnection, graphql_name='showsWithMapping', args=sgqlc.types.ArgDict((('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)), ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)), ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)), ('before', sgqlc.types.Arg(Cursor, graphql_name='before', default=None)), ('after', sgqlc.types.Arg(Cursor, graphql_name='after', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.shows_with_mapping_list","title":"<code>shows_with_mapping_list = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('ProgramSet')), graphql_name='showsWithMappingList', args=sgqlc.types.ArgDict((('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)), ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.system","title":"<code>system = sgqlc.types.Field('SystemInterface', graphql_name='system', args=sgqlc.types.ArgDict((('id', sgqlc.types.Arg(sgqlc.types.non_null(ID), graphql_name='id', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.teasers","title":"<code>teasers = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('SophoraTeaser')), graphql_name='teasers', args=sgqlc.types.ArgDict((('ids', sgqlc.types.Arg(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(ID))), graphql_name='ids', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.transcript","title":"<code>transcript = sgqlc.types.Field('Transcript', graphql_name='transcript', args=sgqlc.types.ArgDict((('item_id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='itemId', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.transcript_by_node_id","title":"<code>transcript_by_node_id = sgqlc.types.Field('Transcript', graphql_name='transcriptByNodeId', args=sgqlc.types.ArgDict((('node_id', sgqlc.types.Arg(sgqlc.types.non_null(ID), graphql_name='nodeId', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.widget","title":"<code>widget = sgqlc.types.Field('SophoraWidget', graphql_name='widget', args=sgqlc.types.ArgDict((('id', sgqlc.types.Arg(sgqlc.types.non_null(ID), graphql_name='id', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Query.widgets","title":"<code>widgets = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('SophoraWidget')), graphql_name='widgets', args=sgqlc.types.ArgDict((('ids', sgqlc.types.Arg(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(ID))), graphql_name='ids', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Queue","title":"<code>Queue</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code>, <code>QueueInterface</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class Queue(sgqlc.types.Type, QueueInterface):\n    __schema__ = audiothek_schema\n    __field_names__ = ()\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Queue.__field_names__","title":"<code>__field_names__ = ()</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Queue.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.QueueConnection","title":"<code>QueueConnection</code>","text":"<p>         Bases: <code>sgqlc.types.relay.Connection</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class QueueConnection(sgqlc.types.relay.Connection):\n    __schema__ = audiothek_schema\n    __field_names__ = ('count', 'edges', 'nodes', 'page_info')\n    count = sgqlc.types.Field(Int, graphql_name='count')\n    edges = sgqlc.types.Field(sgqlc.types.list_of(\n        'QueueEdge'), graphql_name='edges')\n    nodes = sgqlc.types.Field(sgqlc.types.list_of(\n        'QueueInterface'), graphql_name='nodes')\n    page_info = sgqlc.types.Field(\n        sgqlc.types.non_null(PageInfo), graphql_name='pageInfo')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.QueueConnection.__field_names__","title":"<code>__field_names__ = ('count', 'edges', 'nodes', 'page_info')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.QueueConnection.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.QueueConnection.count","title":"<code>count = sgqlc.types.Field(Int, graphql_name='count')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.QueueConnection.edges","title":"<code>edges = sgqlc.types.Field(sgqlc.types.list_of('QueueEdge'), graphql_name='edges')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.QueueConnection.nodes","title":"<code>nodes = sgqlc.types.Field(sgqlc.types.list_of('QueueInterface'), graphql_name='nodes')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.QueueConnection.page_info","title":"<code>page_info = sgqlc.types.Field(sgqlc.types.non_null(PageInfo), graphql_name='pageInfo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.QueueConnectionFilterB","title":"<code>QueueConnectionFilterB</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class QueueConnectionFilterB(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('empty', 'contains')\n    empty = sgqlc.types.Field(BooleanFilterB, graphql_name='empty')\n    contains = sgqlc.types.Field(ID, graphql_name='contains')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.QueueConnectionFilterB.__field_names__","title":"<code>__field_names__ = ('empty', 'contains')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.QueueConnectionFilterB.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.QueueConnectionFilterB.contains","title":"<code>contains = sgqlc.types.Field(ID, graphql_name='contains')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.QueueConnectionFilterB.empty","title":"<code>empty = sgqlc.types.Field(BooleanFilterB, graphql_name='empty')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.QueueCreateInput","title":"<code>QueueCreateInput</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class QueueCreateInput(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('client_mutation_id', 'type', 'entries')\n    client_mutation_id = sgqlc.types.Field(\n        String, graphql_name='clientMutationId')\n    type = sgqlc.types.Field(String, graphql_name='type')\n    entries = sgqlc.types.Field(sgqlc.types.list_of(\n        ItemCreateInput), graphql_name='entries')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.QueueCreateInput.__field_names__","title":"<code>__field_names__ = ('client_mutation_id', 'type', 'entries')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.QueueCreateInput.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.QueueCreateInput.client_mutation_id","title":"<code>client_mutation_id = sgqlc.types.Field(String, graphql_name='clientMutationId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.QueueCreateInput.entries","title":"<code>entries = sgqlc.types.Field(sgqlc.types.list_of(ItemCreateInput), graphql_name='entries')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.QueueCreateInput.type","title":"<code>type = sgqlc.types.Field(String, graphql_name='type')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.QueueEdge","title":"<code>QueueEdge</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class QueueEdge(sgqlc.types.Type):\n    __schema__ = audiothek_schema\n    __field_names__ = ('cursor', 'node')\n    cursor = sgqlc.types.Field(\n        sgqlc.types.non_null(String), graphql_name='cursor')\n    node = sgqlc.types.Field('QueueInterface', graphql_name='node')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.QueueEdge.__field_names__","title":"<code>__field_names__ = ('cursor', 'node')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.QueueEdge.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.QueueEdge.cursor","title":"<code>cursor = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='cursor')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.QueueEdge.node","title":"<code>node = sgqlc.types.Field('QueueInterface', graphql_name='node')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.QueueEntryListInput","title":"<code>QueueEntryListInput</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class QueueEntryListInput(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('client_mutation_id', 'entry', 'queue')\n    client_mutation_id = sgqlc.types.Field(\n        String, graphql_name='clientMutationId')\n    entry = sgqlc.types.Field(sgqlc.types.non_null(\n        ItemCreateInput), graphql_name='entry')\n    queue = sgqlc.types.Field(sgqlc.types.non_null(ID), graphql_name='queue')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.QueueEntryListInput.__field_names__","title":"<code>__field_names__ = ('client_mutation_id', 'entry', 'queue')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.QueueEntryListInput.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.QueueEntryListInput.client_mutation_id","title":"<code>client_mutation_id = sgqlc.types.Field(String, graphql_name='clientMutationId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.QueueEntryListInput.entry","title":"<code>entry = sgqlc.types.Field(sgqlc.types.non_null(ItemCreateInput), graphql_name='entry')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.QueueEntryListInput.queue","title":"<code>queue = sgqlc.types.Field(sgqlc.types.non_null(ID), graphql_name='queue')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.QueueFilterB","title":"<code>QueueFilterB</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class QueueFilterB(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('created_at', 'modified_at', 'user')\n    created_at = sgqlc.types.Field(DateFilterB, graphql_name='createdAt')\n    modified_at = sgqlc.types.Field(DateFilterB, graphql_name='modifiedAt')\n    user = sgqlc.types.Field(EndUserRelationFilterB, graphql_name='user')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.QueueFilterB.__field_names__","title":"<code>__field_names__ = ('created_at', 'modified_at', 'user')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.QueueFilterB.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.QueueFilterB.created_at","title":"<code>created_at = sgqlc.types.Field(DateFilterB, graphql_name='createdAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.QueueFilterB.modified_at","title":"<code>modified_at = sgqlc.types.Field(DateFilterB, graphql_name='modifiedAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.QueueFilterB.user","title":"<code>user = sgqlc.types.Field(EndUserRelationFilterB, graphql_name='user')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.QueueInterface","title":"<code>QueueInterface</code>","text":"<p>         Bases: <code>sgqlc.types.Interface</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class QueueInterface(sgqlc.types.Interface):\n    __schema__ = audiothek_schema\n    __field_names__ = ('id', 'base_id_prefix', 'created_at',\n                       'entries', 'modified_at', 'user')\n    id = sgqlc.types.Field(sgqlc.types.non_null(ID), graphql_name='id')\n    base_id_prefix = sgqlc.types.Field(\n        sgqlc.types.non_null(String), graphql_name='baseIdPrefix')\n    created_at = sgqlc.types.Field(DateTime, graphql_name='createdAt')\n    entries = sgqlc.types.Field(ItemConnection, graphql_name='entries', args=sgqlc.types.ArgDict((\n        ('after', sgqlc.types.Arg(String, graphql_name='after', default=None)),\n        ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)),\n        ('before', sgqlc.types.Arg(String, graphql_name='before', default=None)),\n        ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)),\n        ('filter', sgqlc.types.Arg(ItemFilterB, graphql_name='filter', default=None)),\n        ('order_by', sgqlc.types.Arg(ItemSortOrder,\n         graphql_name='orderBy', default=None)),\n    ))\n    )\n    modified_at = sgqlc.types.Field(DateTime, graphql_name='modifiedAt')\n    user = sgqlc.types.Field(EndUserInterface, graphql_name='user')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.QueueInterface.__field_names__","title":"<code>__field_names__ = ('id', 'base_id_prefix', 'created_at', 'entries', 'modified_at', 'user')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.QueueInterface.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.QueueInterface.base_id_prefix","title":"<code>base_id_prefix = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='baseIdPrefix')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.QueueInterface.created_at","title":"<code>created_at = sgqlc.types.Field(DateTime, graphql_name='createdAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.QueueInterface.entries","title":"<code>entries = sgqlc.types.Field(ItemConnection, graphql_name='entries', args=sgqlc.types.ArgDict((('after', sgqlc.types.Arg(String, graphql_name='after', default=None)), ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)), ('before', sgqlc.types.Arg(String, graphql_name='before', default=None)), ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)), ('filter', sgqlc.types.Arg(ItemFilterB, graphql_name='filter', default=None)), ('order_by', sgqlc.types.Arg(ItemSortOrder, graphql_name='orderBy', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.QueueInterface.id","title":"<code>id = sgqlc.types.Field(sgqlc.types.non_null(ID), graphql_name='id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.QueueInterface.modified_at","title":"<code>modified_at = sgqlc.types.Field(DateTime, graphql_name='modifiedAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.QueueInterface.user","title":"<code>user = sgqlc.types.Field(EndUserInterface, graphql_name='user')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.QueuePayload","title":"<code>QueuePayload</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class QueuePayload(sgqlc.types.Type):\n    __schema__ = audiothek_schema\n    __field_names__ = ('client_mutation_id', 'changed_queue')\n    client_mutation_id = sgqlc.types.Field(\n        String, graphql_name='clientMutationId')\n    changed_queue = sgqlc.types.Field('Queue', graphql_name='changedQueue')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.QueuePayload.__field_names__","title":"<code>__field_names__ = ('client_mutation_id', 'changed_queue')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.QueuePayload.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.QueuePayload.changed_queue","title":"<code>changed_queue = sgqlc.types.Field('Queue', graphql_name='changedQueue')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.QueuePayload.client_mutation_id","title":"<code>client_mutation_id = sgqlc.types.Field(String, graphql_name='clientMutationId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.QueueRelationFilterB","title":"<code>QueueRelationFilterB</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class QueueRelationFilterB(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('id', 'exists')\n    id = sgqlc.types.Field(IDFilterB, graphql_name='id')\n    exists = sgqlc.types.Field(BooleanFilterB, graphql_name='exists')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.QueueRelationFilterB.__field_names__","title":"<code>__field_names__ = ('id', 'exists')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.QueueRelationFilterB.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.QueueRelationFilterB.exists","title":"<code>exists = sgqlc.types.Field(BooleanFilterB, graphql_name='exists')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.QueueRelationFilterB.id","title":"<code>id = sgqlc.types.Field(IDFilterB, graphql_name='id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.QueueRemoveAllListInput","title":"<code>QueueRemoveAllListInput</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class QueueRemoveAllListInput(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('client_mutation_id', 'queue')\n    client_mutation_id = sgqlc.types.Field(\n        String, graphql_name='clientMutationId')\n    queue = sgqlc.types.Field(sgqlc.types.non_null(ID), graphql_name='queue')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.QueueRemoveAllListInput.__field_names__","title":"<code>__field_names__ = ('client_mutation_id', 'queue')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.QueueRemoveAllListInput.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.QueueRemoveAllListInput.client_mutation_id","title":"<code>client_mutation_id = sgqlc.types.Field(String, graphql_name='clientMutationId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.QueueRemoveAllListInput.queue","title":"<code>queue = sgqlc.types.Field(sgqlc.types.non_null(ID), graphql_name='queue')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.QueueSortOrder","title":"<code>QueueSortOrder</code>","text":"<p>         Bases: <code>sgqlc.types.Enum</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class QueueSortOrder(sgqlc.types.Enum):\n    __schema__ = audiothek_schema\n    __choices__ = ('CREATEDAT_ASC', 'CREATEDAT_DESC', 'ENTRIES_ID_ASC',\n                   'ENTRIES_ID_DESC', 'MODIFIEDAT_ASC', 'MODIFIEDAT_DESC')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.QueueSortOrder.__choices__","title":"<code>__choices__ = ('CREATEDAT_ASC', 'CREATEDAT_DESC', 'ENTRIES_ID_ASC', 'ENTRIES_ID_DESC', 'MODIFIEDAT_ASC', 'MODIFIEDAT_DESC')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.QueueSortOrder.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.QueueUpdateInput","title":"<code>QueueUpdateInput</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class QueueUpdateInput(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('client_mutation_id', 'id', 'entries')\n    client_mutation_id = sgqlc.types.Field(\n        String, graphql_name='clientMutationId')\n    id = sgqlc.types.Field(sgqlc.types.non_null(ID), graphql_name='id')\n    entries = sgqlc.types.Field(sgqlc.types.list_of(\n        ItemCreateInput), graphql_name='entries')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.QueueUpdateInput.__field_names__","title":"<code>__field_names__ = ('client_mutation_id', 'id', 'entries')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.QueueUpdateInput.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.QueueUpdateInput.client_mutation_id","title":"<code>client_mutation_id = sgqlc.types.Field(String, graphql_name='clientMutationId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.QueueUpdateInput.entries","title":"<code>entries = sgqlc.types.Field(sgqlc.types.list_of(ItemCreateInput), graphql_name='entries')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.QueueUpdateInput.id","title":"<code>id = sgqlc.types.Field(sgqlc.types.non_null(ID), graphql_name='id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.RecommendationData","title":"<code>RecommendationData</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class RecommendationData(sgqlc.types.Type):\n    __schema__ = audiothek_schema\n    __field_names__ = ('score', 'item')\n    score = sgqlc.types.Field(\n        sgqlc.types.non_null(Float), graphql_name='score')\n    item = sgqlc.types.Field('Item', graphql_name='item')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.RecommendationData.__field_names__","title":"<code>__field_names__ = ('score', 'item')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.RecommendationData.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.RecommendationData.item","title":"<code>item = sgqlc.types.Field('Item', graphql_name='item')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.RecommendationData.score","title":"<code>score = sgqlc.types.Field(sgqlc.types.non_null(Float), graphql_name='score')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.RecommendationMeta","title":"<code>RecommendationMeta</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class RecommendationMeta(sgqlc.types.Type):\n    __schema__ = audiothek_schema\n    __field_names__ = ('recommendation_id', 'algorithm',\n                       'presentation_title', 'fallback_used', 'endpoint_url')\n    recommendation_id = sgqlc.types.Field(\n        sgqlc.types.non_null(String), graphql_name='recommendationId')\n    algorithm = sgqlc.types.Field(\n        sgqlc.types.non_null(String), graphql_name='algorithm')\n    presentation_title = sgqlc.types.Field(\n        String, graphql_name='presentationTitle')\n    fallback_used = sgqlc.types.Field(\n        sgqlc.types.non_null(Boolean), graphql_name='fallbackUsed')\n    endpoint_url = sgqlc.types.Field(\n        sgqlc.types.non_null(String), graphql_name='endpointUrl')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.RecommendationMeta.__field_names__","title":"<code>__field_names__ = ('recommendation_id', 'algorithm', 'presentation_title', 'fallback_used', 'endpoint_url')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.RecommendationMeta.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.RecommendationMeta.algorithm","title":"<code>algorithm = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='algorithm')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.RecommendationMeta.endpoint_url","title":"<code>endpoint_url = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='endpointUrl')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.RecommendationMeta.fallback_used","title":"<code>fallback_used = sgqlc.types.Field(sgqlc.types.non_null(Boolean), graphql_name='fallbackUsed')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.RecommendationMeta.presentation_title","title":"<code>presentation_title = sgqlc.types.Field(String, graphql_name='presentationTitle')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.RecommendationMeta.recommendation_id","title":"<code>recommendation_id = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='recommendationId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.RecommendationSection","title":"<code>RecommendationSection</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code>, <code>Section</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class RecommendationSection(sgqlc.types.Type, Section):\n    __schema__ = audiothek_schema\n    __field_names__ = ('meta',)\n    meta = sgqlc.types.Field(RecommendationMeta, graphql_name='meta')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.RecommendationSection.__field_names__","title":"<code>__field_names__ = ('meta')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.RecommendationSection.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.RecommendationSection.meta","title":"<code>meta = sgqlc.types.Field(RecommendationMeta, graphql_name='meta')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.RecommendationsConnection","title":"<code>RecommendationsConnection</code>","text":"<p>         Bases: <code>sgqlc.types.relay.Connection</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class RecommendationsConnection(sgqlc.types.relay.Connection):\n    __schema__ = audiothek_schema\n    __field_names__ = ('recommendation_id', 'algorithm', 'presentation_title',\n                       'presentation_title_en', 'fallback_used', 'recommendations')\n    recommendation_id = sgqlc.types.Field(\n        sgqlc.types.non_null(String), graphql_name='recommendationId')\n    algorithm = sgqlc.types.Field(String, graphql_name='algorithm')\n    presentation_title = sgqlc.types.Field(\n        String, graphql_name='presentationTitle')\n    presentation_title_en = sgqlc.types.Field(\n        String, graphql_name='presentationTitleEn')\n    fallback_used = sgqlc.types.Field(Boolean, graphql_name='fallbackUsed')\n    recommendations = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null(RecommendationData)), graphql_name='recommendations', args=sgqlc.types.ArgDict((\n        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),\n        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=0)),\n    ))\n    )\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.RecommendationsConnection.__field_names__","title":"<code>__field_names__ = ('recommendation_id', 'algorithm', 'presentation_title', 'presentation_title_en', 'fallback_used', 'recommendations')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.RecommendationsConnection.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.RecommendationsConnection.algorithm","title":"<code>algorithm = sgqlc.types.Field(String, graphql_name='algorithm')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.RecommendationsConnection.fallback_used","title":"<code>fallback_used = sgqlc.types.Field(Boolean, graphql_name='fallbackUsed')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.RecommendationsConnection.presentation_title","title":"<code>presentation_title = sgqlc.types.Field(String, graphql_name='presentationTitle')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.RecommendationsConnection.presentation_title_en","title":"<code>presentation_title_en = sgqlc.types.Field(String, graphql_name='presentationTitleEn')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.RecommendationsConnection.recommendation_id","title":"<code>recommendation_id = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='recommendationId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.RecommendationsConnection.recommendations","title":"<code>recommendations = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null(RecommendationData)), graphql_name='recommendations', args=sgqlc.types.ArgDict((('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)), ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=0)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.RemoteIDFilterB","title":"<code>RemoteIDFilterB</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class RemoteIDFilterB(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('eq', 'ne', 'in_')\n    eq = sgqlc.types.Field(ID, graphql_name='eq')\n    ne = sgqlc.types.Field(ID, graphql_name='ne')\n    in_ = sgqlc.types.Field(sgqlc.types.list_of(ID), graphql_name='in')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.RemoteIDFilterB.__field_names__","title":"<code>__field_names__ = ('eq', 'ne', 'in_')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.RemoteIDFilterB.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.RemoteIDFilterB.eq","title":"<code>eq = sgqlc.types.Field(ID, graphql_name='eq')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.RemoteIDFilterB.in_","title":"<code>in_ = sgqlc.types.Field(sgqlc.types.list_of(ID), graphql_name='in')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.RemoteIDFilterB.ne","title":"<code>ne = sgqlc.types.Field(ID, graphql_name='ne')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SearchResult","title":"<code>SearchResult</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class SearchResult(sgqlc.types.Type):\n    __schema__ = audiothek_schema\n    __field_names__ = ('items', 'program_sets',\n                       'editorial_categories', 'editorial_collections', 'tracking')\n    items = sgqlc.types.Field(ItemsSearchConnection, graphql_name='items')\n    program_sets = sgqlc.types.Field(\n        ProgramSetsSearchConnection, graphql_name='programSets')\n    editorial_categories = sgqlc.types.Field(\n        EditorialCategoriesConnection, graphql_name='editorialCategories')\n    editorial_collections = sgqlc.types.Field(\n        EditorialCollectionsConnection, graphql_name='editorialCollections')\n    tracking = sgqlc.types.Field(JSON, graphql_name='tracking')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SearchResult.__field_names__","title":"<code>__field_names__ = ('items', 'program_sets', 'editorial_categories', 'editorial_collections', 'tracking')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SearchResult.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SearchResult.editorial_categories","title":"<code>editorial_categories = sgqlc.types.Field(EditorialCategoriesConnection, graphql_name='editorialCategories')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SearchResult.editorial_collections","title":"<code>editorial_collections = sgqlc.types.Field(EditorialCollectionsConnection, graphql_name='editorialCollections')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SearchResult.items","title":"<code>items = sgqlc.types.Field(ItemsSearchConnection, graphql_name='items')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SearchResult.program_sets","title":"<code>program_sets = sgqlc.types.Field(ProgramSetsSearchConnection, graphql_name='programSets')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SearchResult.tracking","title":"<code>tracking = sgqlc.types.Field(JSON, graphql_name='tracking')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SearchType","title":"<code>SearchType</code>","text":"<p>         Bases: <code>sgqlc.types.Enum</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class SearchType(sgqlc.types.Enum):\n    __schema__ = audiothek_schema\n    __choices__ = ('All', 'EditorialCategories',\n                   'EditorialCollections', 'Items', 'ProgramSets')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SearchType.__choices__","title":"<code>__choices__ = ('All', 'EditorialCategories', 'EditorialCollections', 'Items', 'ProgramSets')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SearchType.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Section","title":"<code>Section</code>","text":"<p>         Bases: <code>sgqlc.types.Interface</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class Section(sgqlc.types.Interface):\n    __schema__ = audiothek_schema\n    __field_names__ = ('id', 'title', 'layout', 'tracking',\n                       'type', 'node_types', 'nodes')\n    id = sgqlc.types.Field(ID, graphql_name='id')\n    title = sgqlc.types.Field(String, graphql_name='title')\n    layout = sgqlc.types.Field(JSON, graphql_name='layout')\n    tracking = sgqlc.types.Field(JSON, graphql_name='tracking')\n    type = sgqlc.types.Field(String, graphql_name='type')\n    node_types = sgqlc.types.Field(sgqlc.types.list_of(\n        sgqlc.types.non_null(TeaserTypeATG)), graphql_name='nodeTypes')\n    nodes = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('Teaser')), graphql_name='nodes', args=sgqlc.types.ArgDict((\n        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),\n        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=0)),\n    ))\n    )\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Section.__field_names__","title":"<code>__field_names__ = ('id', 'title', 'layout', 'tracking', 'type', 'node_types', 'nodes')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Section.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Section.id","title":"<code>id = sgqlc.types.Field(ID, graphql_name='id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Section.layout","title":"<code>layout = sgqlc.types.Field(JSON, graphql_name='layout')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Section.node_types","title":"<code>node_types = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null(TeaserTypeATG)), graphql_name='nodeTypes')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Section.nodes","title":"<code>nodes = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('Teaser')), graphql_name='nodes', args=sgqlc.types.ArgDict((('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)), ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=0)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Section.title","title":"<code>title = sgqlc.types.Field(String, graphql_name='title')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Section.tracking","title":"<code>tracking = sgqlc.types.Field(JSON, graphql_name='tracking')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Section.type","title":"<code>type = sgqlc.types.Field(String, graphql_name='type')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ShowType","title":"<code>ShowType</code>","text":"<p>         Bases: <code>sgqlc.types.Enum</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class ShowType(sgqlc.types.Enum):\n    __schema__ = audiothek_schema\n    __choices__ = ('FINITE_SERIES', 'INFINITE_SERIES',\n                   'SEASON_SERIES', 'SINGLE')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ShowType.__choices__","title":"<code>__choices__ = ('FINITE_SERIES', 'INFINITE_SERIES', 'SEASON_SERIES', 'SINGLE')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.ShowType.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SophoraCompilation","title":"<code>SophoraCompilation</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class SophoraCompilation(sgqlc.types.Type):\n    __schema__ = audiothek_schema\n    __field_names__ = ('id', 'title', 'teaser_type', 'teasers')\n    id = sgqlc.types.Field(ID, graphql_name='id')\n    title = sgqlc.types.Field(String, graphql_name='title')\n    teaser_type = sgqlc.types.Field(String, graphql_name='teaserType')\n    teasers = sgqlc.types.Field(sgqlc.types.list_of(\n        sgqlc.types.non_null('SophoraTeaser')), graphql_name='teasers')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SophoraCompilation.__field_names__","title":"<code>__field_names__ = ('id', 'title', 'teaser_type', 'teasers')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SophoraCompilation.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SophoraCompilation.id","title":"<code>id = sgqlc.types.Field(ID, graphql_name='id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SophoraCompilation.teaser_type","title":"<code>teaser_type = sgqlc.types.Field(String, graphql_name='teaserType')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SophoraCompilation.teasers","title":"<code>teasers = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('SophoraTeaser')), graphql_name='teasers')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SophoraCompilation.title","title":"<code>title = sgqlc.types.Field(String, graphql_name='title')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SophoraTeaser","title":"<code>SophoraTeaser</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code>, <code>Teaser</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class SophoraTeaser(sgqlc.types.Type, Teaser):\n    __schema__ = audiothek_schema\n    __field_names__ = ('sophora_type', 'sophora_title',\n                       'type', 'content_id', 'node')\n    sophora_type = sgqlc.types.Field(String, graphql_name='sophoraType')\n    sophora_title = sgqlc.types.Field(String, graphql_name='sophoraTitle')\n    type = sgqlc.types.Field(String, graphql_name='type')\n    content_id = sgqlc.types.Field(ID, graphql_name='contentId')\n    node = sgqlc.types.Field(Teaser, graphql_name='node')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SophoraTeaser.__field_names__","title":"<code>__field_names__ = ('sophora_type', 'sophora_title', 'type', 'content_id', 'node')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SophoraTeaser.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SophoraTeaser.content_id","title":"<code>content_id = sgqlc.types.Field(ID, graphql_name='contentId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SophoraTeaser.node","title":"<code>node = sgqlc.types.Field(Teaser, graphql_name='node')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SophoraTeaser.sophora_title","title":"<code>sophora_title = sgqlc.types.Field(String, graphql_name='sophoraTitle')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SophoraTeaser.sophora_type","title":"<code>sophora_type = sgqlc.types.Field(String, graphql_name='sophoraType')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SophoraTeaser.type","title":"<code>type = sgqlc.types.Field(String, graphql_name='type')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SophoraWidget","title":"<code>SophoraWidget</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code>, <code>Section</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class SophoraWidget(sgqlc.types.Type, Section):\n    __schema__ = audiothek_schema\n    __field_names__ = ('key', 'display_variant', 'size',\n                       'title_visible', 'compilation')\n    key = sgqlc.types.Field(String, graphql_name='key')\n    display_variant = sgqlc.types.Field(\n        WidgetDisplayVariant, graphql_name='displayVariant')\n    size = sgqlc.types.Field(String, graphql_name='size')\n    title_visible = sgqlc.types.Field(Boolean, graphql_name='titleVisible')\n    compilation = sgqlc.types.Field(\n        SophoraCompilation, graphql_name='compilation')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SophoraWidget.__field_names__","title":"<code>__field_names__ = ('key', 'display_variant', 'size', 'title_visible', 'compilation')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SophoraWidget.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SophoraWidget.compilation","title":"<code>compilation = sgqlc.types.Field(SophoraCompilation, graphql_name='compilation')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SophoraWidget.display_variant","title":"<code>display_variant = sgqlc.types.Field(WidgetDisplayVariant, graphql_name='displayVariant')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SophoraWidget.key","title":"<code>key = sgqlc.types.Field(String, graphql_name='key')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SophoraWidget.size","title":"<code>size = sgqlc.types.Field(String, graphql_name='size')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SophoraWidget.title_visible","title":"<code>title_visible = sgqlc.types.Field(Boolean, graphql_name='titleVisible')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SourceSystem","title":"<code>SourceSystem</code>","text":"<p>         Bases: <code>sgqlc.types.Enum</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class SourceSystem(sgqlc.types.Enum):\n    __schema__ = audiothek_schema\n    __choices__ = ('Core', 'Hybrid', 'Postgres')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SourceSystem.__choices__","title":"<code>__choices__ = ('Core', 'Hybrid', 'Postgres')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SourceSystem.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Status","title":"<code>Status</code>","text":"<p>         Bases: <code>sgqlc.types.Enum</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class Status(sgqlc.types.Enum):\n    __schema__ = audiothek_schema\n    __choices__ = ('DELETED', 'DEPUBLISHED', 'INCOMPLETE', 'OBSOLETE',\n                   'PUBLISHED', 'SCHEDULED', 'SPECIAL', 'SUPERSEDED')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Status.__choices__","title":"<code>__choices__ = ('DELETED', 'DEPUBLISHED', 'INCOMPLETE', 'OBSOLETE', 'PUBLISHED', 'SCHEDULED', 'SPECIAL', 'SUPERSEDED')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Status.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StatusFilter","title":"<code>StatusFilter</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class StatusFilter(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('is_null', 'equal_to', 'not_equal_to', 'distinct_from', 'not_distinct_from',\n                       'in_', 'not_in', 'less_than', 'less_than_or_equal_to', 'greater_than', 'greater_than_or_equal_to')\n    is_null = sgqlc.types.Field(Boolean, graphql_name='isNull')\n    equal_to = sgqlc.types.Field(Status, graphql_name='equalTo')\n    not_equal_to = sgqlc.types.Field(Status, graphql_name='notEqualTo')\n    distinct_from = sgqlc.types.Field(Status, graphql_name='distinctFrom')\n    not_distinct_from = sgqlc.types.Field(\n        Status, graphql_name='notDistinctFrom')\n    in_ = sgqlc.types.Field(sgqlc.types.list_of(\n        sgqlc.types.non_null(Status)), graphql_name='in')\n    not_in = sgqlc.types.Field(sgqlc.types.list_of(\n        sgqlc.types.non_null(Status)), graphql_name='notIn')\n    less_than = sgqlc.types.Field(Status, graphql_name='lessThan')\n    less_than_or_equal_to = sgqlc.types.Field(\n        Status, graphql_name='lessThanOrEqualTo')\n    greater_than = sgqlc.types.Field(Status, graphql_name='greaterThan')\n    greater_than_or_equal_to = sgqlc.types.Field(\n        Status, graphql_name='greaterThanOrEqualTo')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StatusFilter.__field_names__","title":"<code>__field_names__ = ('is_null', 'equal_to', 'not_equal_to', 'distinct_from', 'not_distinct_from', 'in_', 'not_in', 'less_than', 'less_than_or_equal_to', 'greater_than', 'greater_than_or_equal_to')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StatusFilter.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StatusFilter.distinct_from","title":"<code>distinct_from = sgqlc.types.Field(Status, graphql_name='distinctFrom')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StatusFilter.equal_to","title":"<code>equal_to = sgqlc.types.Field(Status, graphql_name='equalTo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StatusFilter.greater_than","title":"<code>greater_than = sgqlc.types.Field(Status, graphql_name='greaterThan')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StatusFilter.greater_than_or_equal_to","title":"<code>greater_than_or_equal_to = sgqlc.types.Field(Status, graphql_name='greaterThanOrEqualTo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StatusFilter.in_","title":"<code>in_ = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null(Status)), graphql_name='in')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StatusFilter.is_null","title":"<code>is_null = sgqlc.types.Field(Boolean, graphql_name='isNull')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StatusFilter.less_than","title":"<code>less_than = sgqlc.types.Field(Status, graphql_name='lessThan')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StatusFilter.less_than_or_equal_to","title":"<code>less_than_or_equal_to = sgqlc.types.Field(Status, graphql_name='lessThanOrEqualTo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StatusFilter.not_distinct_from","title":"<code>not_distinct_from = sgqlc.types.Field(Status, graphql_name='notDistinctFrom')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StatusFilter.not_equal_to","title":"<code>not_equal_to = sgqlc.types.Field(Status, graphql_name='notEqualTo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StatusFilter.not_in","title":"<code>not_in = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null(Status)), graphql_name='notIn')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StreamType","title":"<code>StreamType</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class StreamType(sgqlc.types.Type):\n    __schema__ = audiothek_schema\n    __field_names__ = ('url', 'title', 'mimetype', 'row_id')\n    url = sgqlc.types.Field(String, graphql_name='url')\n    title = sgqlc.types.Field(String, graphql_name='title')\n    mimetype = sgqlc.types.Field(String, graphql_name='mimetype')\n    row_id = sgqlc.types.Field(String, graphql_name='rowId')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StreamType.__field_names__","title":"<code>__field_names__ = ('url', 'title', 'mimetype', 'row_id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StreamType.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StreamType.mimetype","title":"<code>mimetype = sgqlc.types.Field(String, graphql_name='mimetype')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StreamType.row_id","title":"<code>row_id = sgqlc.types.Field(String, graphql_name='rowId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StreamType.title","title":"<code>title = sgqlc.types.Field(String, graphql_name='title')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StreamType.url","title":"<code>url = sgqlc.types.Field(String, graphql_name='url')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StreamTypeInput","title":"<code>StreamTypeInput</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class StreamTypeInput(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('url', 'title', 'mimetype', 'id')\n    url = sgqlc.types.Field(String, graphql_name='url')\n    title = sgqlc.types.Field(String, graphql_name='title')\n    mimetype = sgqlc.types.Field(String, graphql_name='mimetype')\n    id = sgqlc.types.Field(String, graphql_name='id')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StreamTypeInput.__field_names__","title":"<code>__field_names__ = ('url', 'title', 'mimetype', 'id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StreamTypeInput.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StreamTypeInput.id","title":"<code>id = sgqlc.types.Field(String, graphql_name='id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StreamTypeInput.mimetype","title":"<code>mimetype = sgqlc.types.Field(String, graphql_name='mimetype')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StreamTypeInput.title","title":"<code>title = sgqlc.types.Field(String, graphql_name='title')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StreamTypeInput.url","title":"<code>url = sgqlc.types.Field(String, graphql_name='url')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StringFilter","title":"<code>StringFilter</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class StringFilter(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('is_null', 'equal_to', 'not_equal_to', 'distinct_from', 'not_distinct_from', 'in_', 'not_in', 'less_than', 'less_than_or_equal_to', 'greater_than', 'greater_than_or_equal_to', 'includes', 'not_includes', 'includes_insensitive', 'not_includes_insensitive', 'starts_with', 'not_starts_with', 'starts_with_insensitive', 'not_starts_with_insensitive', 'ends_with', 'not_ends_with',\n                       'ends_with_insensitive', 'not_ends_with_insensitive', 'like', 'not_like', 'like_insensitive', 'not_like_insensitive', 'equal_to_insensitive', 'not_equal_to_insensitive', 'distinct_from_insensitive', 'not_distinct_from_insensitive', 'in_insensitive', 'not_in_insensitive', 'less_than_insensitive', 'less_than_or_equal_to_insensitive', 'greater_than_insensitive', 'greater_than_or_equal_to_insensitive')\n    is_null = sgqlc.types.Field(Boolean, graphql_name='isNull')\n    equal_to = sgqlc.types.Field(String, graphql_name='equalTo')\n    not_equal_to = sgqlc.types.Field(String, graphql_name='notEqualTo')\n    distinct_from = sgqlc.types.Field(String, graphql_name='distinctFrom')\n    not_distinct_from = sgqlc.types.Field(\n        String, graphql_name='notDistinctFrom')\n    in_ = sgqlc.types.Field(sgqlc.types.list_of(\n        sgqlc.types.non_null(String)), graphql_name='in')\n    not_in = sgqlc.types.Field(sgqlc.types.list_of(\n        sgqlc.types.non_null(String)), graphql_name='notIn')\n    less_than = sgqlc.types.Field(String, graphql_name='lessThan')\n    less_than_or_equal_to = sgqlc.types.Field(\n        String, graphql_name='lessThanOrEqualTo')\n    greater_than = sgqlc.types.Field(String, graphql_name='greaterThan')\n    greater_than_or_equal_to = sgqlc.types.Field(\n        String, graphql_name='greaterThanOrEqualTo')\n    includes = sgqlc.types.Field(String, graphql_name='includes')\n    not_includes = sgqlc.types.Field(String, graphql_name='notIncludes')\n    includes_insensitive = sgqlc.types.Field(\n        String, graphql_name='includesInsensitive')\n    not_includes_insensitive = sgqlc.types.Field(\n        String, graphql_name='notIncludesInsensitive')\n    starts_with = sgqlc.types.Field(String, graphql_name='startsWith')\n    not_starts_with = sgqlc.types.Field(String, graphql_name='notStartsWith')\n    starts_with_insensitive = sgqlc.types.Field(\n        String, graphql_name='startsWithInsensitive')\n    not_starts_with_insensitive = sgqlc.types.Field(\n        String, graphql_name='notStartsWithInsensitive')\n    ends_with = sgqlc.types.Field(String, graphql_name='endsWith')\n    not_ends_with = sgqlc.types.Field(String, graphql_name='notEndsWith')\n    ends_with_insensitive = sgqlc.types.Field(\n        String, graphql_name='endsWithInsensitive')\n    not_ends_with_insensitive = sgqlc.types.Field(\n        String, graphql_name='notEndsWithInsensitive')\n    like = sgqlc.types.Field(String, graphql_name='like')\n    not_like = sgqlc.types.Field(String, graphql_name='notLike')\n    like_insensitive = sgqlc.types.Field(\n        String, graphql_name='likeInsensitive')\n    not_like_insensitive = sgqlc.types.Field(\n        String, graphql_name='notLikeInsensitive')\n    equal_to_insensitive = sgqlc.types.Field(\n        String, graphql_name='equalToInsensitive')\n    not_equal_to_insensitive = sgqlc.types.Field(\n        String, graphql_name='notEqualToInsensitive')\n    distinct_from_insensitive = sgqlc.types.Field(\n        String, graphql_name='distinctFromInsensitive')\n    not_distinct_from_insensitive = sgqlc.types.Field(\n        String, graphql_name='notDistinctFromInsensitive')\n    in_insensitive = sgqlc.types.Field(sgqlc.types.list_of(\n        sgqlc.types.non_null(String)), graphql_name='inInsensitive')\n    not_in_insensitive = sgqlc.types.Field(sgqlc.types.list_of(\n        sgqlc.types.non_null(String)), graphql_name='notInInsensitive')\n    less_than_insensitive = sgqlc.types.Field(\n        String, graphql_name='lessThanInsensitive')\n    less_than_or_equal_to_insensitive = sgqlc.types.Field(\n        String, graphql_name='lessThanOrEqualToInsensitive')\n    greater_than_insensitive = sgqlc.types.Field(\n        String, graphql_name='greaterThanInsensitive')\n    greater_than_or_equal_to_insensitive = sgqlc.types.Field(\n        String, graphql_name='greaterThanOrEqualToInsensitive')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StringFilter.__field_names__","title":"<code>__field_names__ = ('is_null', 'equal_to', 'not_equal_to', 'distinct_from', 'not_distinct_from', 'in_', 'not_in', 'less_than', 'less_than_or_equal_to', 'greater_than', 'greater_than_or_equal_to', 'includes', 'not_includes', 'includes_insensitive', 'not_includes_insensitive', 'starts_with', 'not_starts_with', 'starts_with_insensitive', 'not_starts_with_insensitive', 'ends_with', 'not_ends_with', 'ends_with_insensitive', 'not_ends_with_insensitive', 'like', 'not_like', 'like_insensitive', 'not_like_insensitive', 'equal_to_insensitive', 'not_equal_to_insensitive', 'distinct_from_insensitive', 'not_distinct_from_insensitive', 'in_insensitive', 'not_in_insensitive', 'less_than_insensitive', 'less_than_or_equal_to_insensitive', 'greater_than_insensitive', 'greater_than_or_equal_to_insensitive')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StringFilter.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StringFilter.distinct_from","title":"<code>distinct_from = sgqlc.types.Field(String, graphql_name='distinctFrom')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StringFilter.distinct_from_insensitive","title":"<code>distinct_from_insensitive = sgqlc.types.Field(String, graphql_name='distinctFromInsensitive')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StringFilter.ends_with","title":"<code>ends_with = sgqlc.types.Field(String, graphql_name='endsWith')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StringFilter.ends_with_insensitive","title":"<code>ends_with_insensitive = sgqlc.types.Field(String, graphql_name='endsWithInsensitive')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StringFilter.equal_to","title":"<code>equal_to = sgqlc.types.Field(String, graphql_name='equalTo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StringFilter.equal_to_insensitive","title":"<code>equal_to_insensitive = sgqlc.types.Field(String, graphql_name='equalToInsensitive')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StringFilter.greater_than","title":"<code>greater_than = sgqlc.types.Field(String, graphql_name='greaterThan')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StringFilter.greater_than_insensitive","title":"<code>greater_than_insensitive = sgqlc.types.Field(String, graphql_name='greaterThanInsensitive')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StringFilter.greater_than_or_equal_to","title":"<code>greater_than_or_equal_to = sgqlc.types.Field(String, graphql_name='greaterThanOrEqualTo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StringFilter.greater_than_or_equal_to_insensitive","title":"<code>greater_than_or_equal_to_insensitive = sgqlc.types.Field(String, graphql_name='greaterThanOrEqualToInsensitive')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StringFilter.in_","title":"<code>in_ = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null(String)), graphql_name='in')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StringFilter.in_insensitive","title":"<code>in_insensitive = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null(String)), graphql_name='inInsensitive')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StringFilter.includes","title":"<code>includes = sgqlc.types.Field(String, graphql_name='includes')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StringFilter.includes_insensitive","title":"<code>includes_insensitive = sgqlc.types.Field(String, graphql_name='includesInsensitive')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StringFilter.is_null","title":"<code>is_null = sgqlc.types.Field(Boolean, graphql_name='isNull')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StringFilter.less_than","title":"<code>less_than = sgqlc.types.Field(String, graphql_name='lessThan')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StringFilter.less_than_insensitive","title":"<code>less_than_insensitive = sgqlc.types.Field(String, graphql_name='lessThanInsensitive')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StringFilter.less_than_or_equal_to","title":"<code>less_than_or_equal_to = sgqlc.types.Field(String, graphql_name='lessThanOrEqualTo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StringFilter.less_than_or_equal_to_insensitive","title":"<code>less_than_or_equal_to_insensitive = sgqlc.types.Field(String, graphql_name='lessThanOrEqualToInsensitive')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StringFilter.like","title":"<code>like = sgqlc.types.Field(String, graphql_name='like')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StringFilter.like_insensitive","title":"<code>like_insensitive = sgqlc.types.Field(String, graphql_name='likeInsensitive')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StringFilter.not_distinct_from","title":"<code>not_distinct_from = sgqlc.types.Field(String, graphql_name='notDistinctFrom')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StringFilter.not_distinct_from_insensitive","title":"<code>not_distinct_from_insensitive = sgqlc.types.Field(String, graphql_name='notDistinctFromInsensitive')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StringFilter.not_ends_with","title":"<code>not_ends_with = sgqlc.types.Field(String, graphql_name='notEndsWith')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StringFilter.not_ends_with_insensitive","title":"<code>not_ends_with_insensitive = sgqlc.types.Field(String, graphql_name='notEndsWithInsensitive')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StringFilter.not_equal_to","title":"<code>not_equal_to = sgqlc.types.Field(String, graphql_name='notEqualTo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StringFilter.not_equal_to_insensitive","title":"<code>not_equal_to_insensitive = sgqlc.types.Field(String, graphql_name='notEqualToInsensitive')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StringFilter.not_in","title":"<code>not_in = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null(String)), graphql_name='notIn')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StringFilter.not_in_insensitive","title":"<code>not_in_insensitive = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null(String)), graphql_name='notInInsensitive')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StringFilter.not_includes","title":"<code>not_includes = sgqlc.types.Field(String, graphql_name='notIncludes')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StringFilter.not_includes_insensitive","title":"<code>not_includes_insensitive = sgqlc.types.Field(String, graphql_name='notIncludesInsensitive')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StringFilter.not_like","title":"<code>not_like = sgqlc.types.Field(String, graphql_name='notLike')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StringFilter.not_like_insensitive","title":"<code>not_like_insensitive = sgqlc.types.Field(String, graphql_name='notLikeInsensitive')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StringFilter.not_starts_with","title":"<code>not_starts_with = sgqlc.types.Field(String, graphql_name='notStartsWith')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StringFilter.not_starts_with_insensitive","title":"<code>not_starts_with_insensitive = sgqlc.types.Field(String, graphql_name='notStartsWithInsensitive')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StringFilter.starts_with","title":"<code>starts_with = sgqlc.types.Field(String, graphql_name='startsWith')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StringFilter.starts_with_insensitive","title":"<code>starts_with_insensitive = sgqlc.types.Field(String, graphql_name='startsWithInsensitive')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StringFilterB","title":"<code>StringFilterB</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class StringFilterB(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('eq', 'ne', 'in_', 'gt', 'gte', 'lt',\n                       'lte', 'starts_with', 'ends_with', 'matches')\n    eq = sgqlc.types.Field(String, graphql_name='eq')\n    ne = sgqlc.types.Field(String, graphql_name='ne')\n    in_ = sgqlc.types.Field(sgqlc.types.list_of(String), graphql_name='in')\n    gt = sgqlc.types.Field(String, graphql_name='gt')\n    gte = sgqlc.types.Field(String, graphql_name='gte')\n    lt = sgqlc.types.Field(String, graphql_name='lt')\n    lte = sgqlc.types.Field(String, graphql_name='lte')\n    starts_with = sgqlc.types.Field(String, graphql_name='startsWith')\n    ends_with = sgqlc.types.Field(String, graphql_name='endsWith')\n    matches = sgqlc.types.Field(String, graphql_name='matches')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StringFilterB.__field_names__","title":"<code>__field_names__ = ('eq', 'ne', 'in_', 'gt', 'gte', 'lt', 'lte', 'starts_with', 'ends_with', 'matches')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StringFilterB.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StringFilterB.ends_with","title":"<code>ends_with = sgqlc.types.Field(String, graphql_name='endsWith')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StringFilterB.eq","title":"<code>eq = sgqlc.types.Field(String, graphql_name='eq')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StringFilterB.gt","title":"<code>gt = sgqlc.types.Field(String, graphql_name='gt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StringFilterB.gte","title":"<code>gte = sgqlc.types.Field(String, graphql_name='gte')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StringFilterB.in_","title":"<code>in_ = sgqlc.types.Field(sgqlc.types.list_of(String), graphql_name='in')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StringFilterB.lt","title":"<code>lt = sgqlc.types.Field(String, graphql_name='lt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StringFilterB.lte","title":"<code>lte = sgqlc.types.Field(String, graphql_name='lte')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StringFilterB.matches","title":"<code>matches = sgqlc.types.Field(String, graphql_name='matches')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StringFilterB.ne","title":"<code>ne = sgqlc.types.Field(String, graphql_name='ne')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StringFilterB.starts_with","title":"<code>starts_with = sgqlc.types.Field(String, graphql_name='startsWith')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StringListFilter","title":"<code>StringListFilter</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class StringListFilter(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('is_null', 'equal_to', 'not_equal_to', 'distinct_from', 'not_distinct_from', 'less_than', 'less_than_or_equal_to', 'greater_than', 'greater_than_or_equal_to',\n                       'contains', 'contained_by', 'overlaps', 'any_equal_to', 'any_not_equal_to', 'any_less_than', 'any_less_than_or_equal_to', 'any_greater_than', 'any_greater_than_or_equal_to')\n    is_null = sgqlc.types.Field(Boolean, graphql_name='isNull')\n    equal_to = sgqlc.types.Field(\n        sgqlc.types.list_of(String), graphql_name='equalTo')\n    not_equal_to = sgqlc.types.Field(\n        sgqlc.types.list_of(String), graphql_name='notEqualTo')\n    distinct_from = sgqlc.types.Field(\n        sgqlc.types.list_of(String), graphql_name='distinctFrom')\n    not_distinct_from = sgqlc.types.Field(\n        sgqlc.types.list_of(String), graphql_name='notDistinctFrom')\n    less_than = sgqlc.types.Field(\n        sgqlc.types.list_of(String), graphql_name='lessThan')\n    less_than_or_equal_to = sgqlc.types.Field(\n        sgqlc.types.list_of(String), graphql_name='lessThanOrEqualTo')\n    greater_than = sgqlc.types.Field(\n        sgqlc.types.list_of(String), graphql_name='greaterThan')\n    greater_than_or_equal_to = sgqlc.types.Field(\n        sgqlc.types.list_of(String), graphql_name='greaterThanOrEqualTo')\n    contains = sgqlc.types.Field(\n        sgqlc.types.list_of(String), graphql_name='contains')\n    contained_by = sgqlc.types.Field(\n        sgqlc.types.list_of(String), graphql_name='containedBy')\n    overlaps = sgqlc.types.Field(\n        sgqlc.types.list_of(String), graphql_name='overlaps')\n    any_equal_to = sgqlc.types.Field(String, graphql_name='anyEqualTo')\n    any_not_equal_to = sgqlc.types.Field(String, graphql_name='anyNotEqualTo')\n    any_less_than = sgqlc.types.Field(String, graphql_name='anyLessThan')\n    any_less_than_or_equal_to = sgqlc.types.Field(\n        String, graphql_name='anyLessThanOrEqualTo')\n    any_greater_than = sgqlc.types.Field(String, graphql_name='anyGreaterThan')\n    any_greater_than_or_equal_to = sgqlc.types.Field(\n        String, graphql_name='anyGreaterThanOrEqualTo')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StringListFilter.__field_names__","title":"<code>__field_names__ = ('is_null', 'equal_to', 'not_equal_to', 'distinct_from', 'not_distinct_from', 'less_than', 'less_than_or_equal_to', 'greater_than', 'greater_than_or_equal_to', 'contains', 'contained_by', 'overlaps', 'any_equal_to', 'any_not_equal_to', 'any_less_than', 'any_less_than_or_equal_to', 'any_greater_than', 'any_greater_than_or_equal_to')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StringListFilter.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StringListFilter.any_equal_to","title":"<code>any_equal_to = sgqlc.types.Field(String, graphql_name='anyEqualTo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StringListFilter.any_greater_than","title":"<code>any_greater_than = sgqlc.types.Field(String, graphql_name='anyGreaterThan')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StringListFilter.any_greater_than_or_equal_to","title":"<code>any_greater_than_or_equal_to = sgqlc.types.Field(String, graphql_name='anyGreaterThanOrEqualTo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StringListFilter.any_less_than","title":"<code>any_less_than = sgqlc.types.Field(String, graphql_name='anyLessThan')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StringListFilter.any_less_than_or_equal_to","title":"<code>any_less_than_or_equal_to = sgqlc.types.Field(String, graphql_name='anyLessThanOrEqualTo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StringListFilter.any_not_equal_to","title":"<code>any_not_equal_to = sgqlc.types.Field(String, graphql_name='anyNotEqualTo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StringListFilter.contained_by","title":"<code>contained_by = sgqlc.types.Field(sgqlc.types.list_of(String), graphql_name='containedBy')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StringListFilter.contains","title":"<code>contains = sgqlc.types.Field(sgqlc.types.list_of(String), graphql_name='contains')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StringListFilter.distinct_from","title":"<code>distinct_from = sgqlc.types.Field(sgqlc.types.list_of(String), graphql_name='distinctFrom')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StringListFilter.equal_to","title":"<code>equal_to = sgqlc.types.Field(sgqlc.types.list_of(String), graphql_name='equalTo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StringListFilter.greater_than","title":"<code>greater_than = sgqlc.types.Field(sgqlc.types.list_of(String), graphql_name='greaterThan')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StringListFilter.greater_than_or_equal_to","title":"<code>greater_than_or_equal_to = sgqlc.types.Field(sgqlc.types.list_of(String), graphql_name='greaterThanOrEqualTo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StringListFilter.is_null","title":"<code>is_null = sgqlc.types.Field(Boolean, graphql_name='isNull')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StringListFilter.less_than","title":"<code>less_than = sgqlc.types.Field(sgqlc.types.list_of(String), graphql_name='lessThan')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StringListFilter.less_than_or_equal_to","title":"<code>less_than_or_equal_to = sgqlc.types.Field(sgqlc.types.list_of(String), graphql_name='lessThanOrEqualTo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StringListFilter.not_distinct_from","title":"<code>not_distinct_from = sgqlc.types.Field(sgqlc.types.list_of(String), graphql_name='notDistinctFrom')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StringListFilter.not_equal_to","title":"<code>not_equal_to = sgqlc.types.Field(sgqlc.types.list_of(String), graphql_name='notEqualTo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.StringListFilter.overlaps","title":"<code>overlaps = sgqlc.types.Field(sgqlc.types.list_of(String), graphql_name='overlaps')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SubscriptionList","title":"<code>SubscriptionList</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code>, <code>SubscriptionListInterface</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class SubscriptionList(sgqlc.types.Type, SubscriptionListInterface):\n    __schema__ = audiothek_schema\n    __field_names__ = ()\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SubscriptionList.__field_names__","title":"<code>__field_names__ = ()</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SubscriptionList.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SubscriptionListConnection","title":"<code>SubscriptionListConnection</code>","text":"<p>         Bases: <code>sgqlc.types.relay.Connection</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class SubscriptionListConnection(sgqlc.types.relay.Connection):\n    __schema__ = audiothek_schema\n    __field_names__ = ('count', 'edges', 'nodes', 'page_info')\n    count = sgqlc.types.Field(Int, graphql_name='count')\n    edges = sgqlc.types.Field(sgqlc.types.list_of(\n        'SubscriptionListEdge'), graphql_name='edges')\n    nodes = sgqlc.types.Field(sgqlc.types.list_of(\n        'SubscriptionListInterface'), graphql_name='nodes')\n    page_info = sgqlc.types.Field(\n        sgqlc.types.non_null(PageInfo), graphql_name='pageInfo')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SubscriptionListConnection.__field_names__","title":"<code>__field_names__ = ('count', 'edges', 'nodes', 'page_info')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SubscriptionListConnection.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SubscriptionListConnection.count","title":"<code>count = sgqlc.types.Field(Int, graphql_name='count')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SubscriptionListConnection.edges","title":"<code>edges = sgqlc.types.Field(sgqlc.types.list_of('SubscriptionListEdge'), graphql_name='edges')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SubscriptionListConnection.nodes","title":"<code>nodes = sgqlc.types.Field(sgqlc.types.list_of('SubscriptionListInterface'), graphql_name='nodes')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SubscriptionListConnection.page_info","title":"<code>page_info = sgqlc.types.Field(sgqlc.types.non_null(PageInfo), graphql_name='pageInfo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SubscriptionListConnectionFilterB","title":"<code>SubscriptionListConnectionFilterB</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class SubscriptionListConnectionFilterB(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('empty', 'contains')\n    empty = sgqlc.types.Field(BooleanFilterB, graphql_name='empty')\n    contains = sgqlc.types.Field(ID, graphql_name='contains')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SubscriptionListConnectionFilterB.__field_names__","title":"<code>__field_names__ = ('empty', 'contains')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SubscriptionListConnectionFilterB.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SubscriptionListConnectionFilterB.contains","title":"<code>contains = sgqlc.types.Field(ID, graphql_name='contains')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SubscriptionListConnectionFilterB.empty","title":"<code>empty = sgqlc.types.Field(BooleanFilterB, graphql_name='empty')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SubscriptionListCreateInput","title":"<code>SubscriptionListCreateInput</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class SubscriptionListCreateInput(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('client_mutation_id', 'type', 'program_sets')\n    client_mutation_id = sgqlc.types.Field(\n        String, graphql_name='clientMutationId')\n    type = sgqlc.types.Field(String, graphql_name='type')\n    program_sets = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(\n        ProgramSetSubscriptionCreateInput)), graphql_name='programSets')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SubscriptionListCreateInput.__field_names__","title":"<code>__field_names__ = ('client_mutation_id', 'type', 'program_sets')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SubscriptionListCreateInput.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SubscriptionListCreateInput.client_mutation_id","title":"<code>client_mutation_id = sgqlc.types.Field(String, graphql_name='clientMutationId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SubscriptionListCreateInput.program_sets","title":"<code>program_sets = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(ProgramSetSubscriptionCreateInput)), graphql_name='programSets')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SubscriptionListCreateInput.type","title":"<code>type = sgqlc.types.Field(String, graphql_name='type')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SubscriptionListEdge","title":"<code>SubscriptionListEdge</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class SubscriptionListEdge(sgqlc.types.Type):\n    __schema__ = audiothek_schema\n    __field_names__ = ('cursor', 'node')\n    cursor = sgqlc.types.Field(\n        sgqlc.types.non_null(String), graphql_name='cursor')\n    node = sgqlc.types.Field('SubscriptionListInterface', graphql_name='node')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SubscriptionListEdge.__field_names__","title":"<code>__field_names__ = ('cursor', 'node')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SubscriptionListEdge.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SubscriptionListEdge.cursor","title":"<code>cursor = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='cursor')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SubscriptionListEdge.node","title":"<code>node = sgqlc.types.Field('SubscriptionListInterface', graphql_name='node')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SubscriptionListFilterB","title":"<code>SubscriptionListFilterB</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class SubscriptionListFilterB(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('created_at', 'modified_at', 'program_sets', 'user')\n    created_at = sgqlc.types.Field(DateFilterB, graphql_name='createdAt')\n    modified_at = sgqlc.types.Field(DateFilterB, graphql_name='modifiedAt')\n    program_sets = sgqlc.types.Field(\n        ProgramSetSubscriptionConnectionFilterB, graphql_name='programSets')\n    user = sgqlc.types.Field(EndUserRelationFilterB, graphql_name='user')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SubscriptionListFilterB.__field_names__","title":"<code>__field_names__ = ('created_at', 'modified_at', 'program_sets', 'user')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SubscriptionListFilterB.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SubscriptionListFilterB.created_at","title":"<code>created_at = sgqlc.types.Field(DateFilterB, graphql_name='createdAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SubscriptionListFilterB.modified_at","title":"<code>modified_at = sgqlc.types.Field(DateFilterB, graphql_name='modifiedAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SubscriptionListFilterB.program_sets","title":"<code>program_sets = sgqlc.types.Field(ProgramSetSubscriptionConnectionFilterB, graphql_name='programSets')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SubscriptionListFilterB.user","title":"<code>user = sgqlc.types.Field(EndUserRelationFilterB, graphql_name='user')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SubscriptionListInterface","title":"<code>SubscriptionListInterface</code>","text":"<p>         Bases: <code>sgqlc.types.Interface</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class SubscriptionListInterface(sgqlc.types.Interface):\n    __schema__ = audiothek_schema\n    __field_names__ = ('id', 'base_id_prefix', 'created_at',\n                       'modified_at', 'program_sets', 'user')\n    id = sgqlc.types.Field(sgqlc.types.non_null(ID), graphql_name='id')\n    base_id_prefix = sgqlc.types.Field(\n        sgqlc.types.non_null(String), graphql_name='baseIdPrefix')\n    created_at = sgqlc.types.Field(DateTime, graphql_name='createdAt')\n    modified_at = sgqlc.types.Field(DateTime, graphql_name='modifiedAt')\n    program_sets = sgqlc.types.Field(ProgramSetSubscriptionConnection, graphql_name='programSets', args=sgqlc.types.ArgDict((\n        ('after', sgqlc.types.Arg(String, graphql_name='after', default=None)),\n        ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)),\n        ('before', sgqlc.types.Arg(String, graphql_name='before', default=None)),\n        ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)),\n        ('filter', sgqlc.types.Arg(ProgramSetSubscriptionFilterB,\n         graphql_name='filter', default=None)),\n        ('order_by', sgqlc.types.Arg(ProgramSetSubscriptionSortOrder,\n         graphql_name='orderBy', default=None)),\n    ))\n    )\n    user = sgqlc.types.Field(EndUserInterface, graphql_name='user')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SubscriptionListInterface.__field_names__","title":"<code>__field_names__ = ('id', 'base_id_prefix', 'created_at', 'modified_at', 'program_sets', 'user')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SubscriptionListInterface.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SubscriptionListInterface.base_id_prefix","title":"<code>base_id_prefix = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='baseIdPrefix')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SubscriptionListInterface.created_at","title":"<code>created_at = sgqlc.types.Field(DateTime, graphql_name='createdAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SubscriptionListInterface.id","title":"<code>id = sgqlc.types.Field(sgqlc.types.non_null(ID), graphql_name='id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SubscriptionListInterface.modified_at","title":"<code>modified_at = sgqlc.types.Field(DateTime, graphql_name='modifiedAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SubscriptionListInterface.program_sets","title":"<code>program_sets = sgqlc.types.Field(ProgramSetSubscriptionConnection, graphql_name='programSets', args=sgqlc.types.ArgDict((('after', sgqlc.types.Arg(String, graphql_name='after', default=None)), ('first', sgqlc.types.Arg(Int, graphql_name='first', default=None)), ('before', sgqlc.types.Arg(String, graphql_name='before', default=None)), ('last', sgqlc.types.Arg(Int, graphql_name='last', default=None)), ('filter', sgqlc.types.Arg(ProgramSetSubscriptionFilterB, graphql_name='filter', default=None)), ('order_by', sgqlc.types.Arg(ProgramSetSubscriptionSortOrder, graphql_name='orderBy', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SubscriptionListInterface.user","title":"<code>user = sgqlc.types.Field(EndUserInterface, graphql_name='user')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SubscriptionListPayload","title":"<code>SubscriptionListPayload</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class SubscriptionListPayload(sgqlc.types.Type):\n    __schema__ = audiothek_schema\n    __field_names__ = ('client_mutation_id', 'changed_subscription_list')\n    client_mutation_id = sgqlc.types.Field(\n        String, graphql_name='clientMutationId')\n    changed_subscription_list = sgqlc.types.Field(\n        'SubscriptionList', graphql_name='changedSubscriptionList')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SubscriptionListPayload.__field_names__","title":"<code>__field_names__ = ('client_mutation_id', 'changed_subscription_list')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SubscriptionListPayload.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SubscriptionListPayload.changed_subscription_list","title":"<code>changed_subscription_list = sgqlc.types.Field('SubscriptionList', graphql_name='changedSubscriptionList')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SubscriptionListPayload.client_mutation_id","title":"<code>client_mutation_id = sgqlc.types.Field(String, graphql_name='clientMutationId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SubscriptionListProgramSetListInput","title":"<code>SubscriptionListProgramSetListInput</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class SubscriptionListProgramSetListInput(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('client_mutation_id',\n                       'program_set', 'subscription_list')\n    client_mutation_id = sgqlc.types.Field(\n        String, graphql_name='clientMutationId')\n    program_set = sgqlc.types.Field(sgqlc.types.non_null(\n        ProgramSetSubscriptionCreateInput), graphql_name='programSet')\n    subscription_list = sgqlc.types.Field(\n        sgqlc.types.non_null(ID), graphql_name='subscriptionList')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SubscriptionListProgramSetListInput.__field_names__","title":"<code>__field_names__ = ('client_mutation_id', 'program_set', 'subscription_list')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SubscriptionListProgramSetListInput.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SubscriptionListProgramSetListInput.client_mutation_id","title":"<code>client_mutation_id = sgqlc.types.Field(String, graphql_name='clientMutationId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SubscriptionListProgramSetListInput.program_set","title":"<code>program_set = sgqlc.types.Field(sgqlc.types.non_null(ProgramSetSubscriptionCreateInput), graphql_name='programSet')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SubscriptionListProgramSetListInput.subscription_list","title":"<code>subscription_list = sgqlc.types.Field(sgqlc.types.non_null(ID), graphql_name='subscriptionList')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SubscriptionListRelationFilterB","title":"<code>SubscriptionListRelationFilterB</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class SubscriptionListRelationFilterB(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('id', 'exists')\n    id = sgqlc.types.Field(IDFilterB, graphql_name='id')\n    exists = sgqlc.types.Field(BooleanFilterB, graphql_name='exists')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SubscriptionListRelationFilterB.__field_names__","title":"<code>__field_names__ = ('id', 'exists')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SubscriptionListRelationFilterB.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SubscriptionListRelationFilterB.exists","title":"<code>exists = sgqlc.types.Field(BooleanFilterB, graphql_name='exists')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SubscriptionListRelationFilterB.id","title":"<code>id = sgqlc.types.Field(IDFilterB, graphql_name='id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SubscriptionListRemoveAllListInput","title":"<code>SubscriptionListRemoveAllListInput</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class SubscriptionListRemoveAllListInput(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('client_mutation_id', 'subscription_list')\n    client_mutation_id = sgqlc.types.Field(\n        String, graphql_name='clientMutationId')\n    subscription_list = sgqlc.types.Field(\n        sgqlc.types.non_null(ID), graphql_name='subscriptionList')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SubscriptionListRemoveAllListInput.__field_names__","title":"<code>__field_names__ = ('client_mutation_id', 'subscription_list')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SubscriptionListRemoveAllListInput.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SubscriptionListRemoveAllListInput.client_mutation_id","title":"<code>client_mutation_id = sgqlc.types.Field(String, graphql_name='clientMutationId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SubscriptionListRemoveAllListInput.subscription_list","title":"<code>subscription_list = sgqlc.types.Field(sgqlc.types.non_null(ID), graphql_name='subscriptionList')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SubscriptionListSortOrder","title":"<code>SubscriptionListSortOrder</code>","text":"<p>         Bases: <code>sgqlc.types.Enum</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class SubscriptionListSortOrder(sgqlc.types.Enum):\n    __schema__ = audiothek_schema\n    __choices__ = ('CREATEDAT_ASC', 'CREATEDAT_DESC', 'MODIFIEDAT_ASC', 'MODIFIEDAT_DESC', 'PROGRAMSETS_CREATEDAT_ASC', 'PROGRAMSETS_CREATEDAT_DESC', 'PROGRAMSETS_LASTVISITEDAT_ASC', 'PROGRAMSETS_LASTVISITEDAT_DESC',\n                   'PROGRAMSETS_MODIFIEDAT_ASC', 'PROGRAMSETS_MODIFIEDAT_DESC', 'PROGRAMSETS_SUBSCRIBEDAT_ASC', 'PROGRAMSETS_SUBSCRIBEDAT_DESC', 'PROGRAMSETS_SUBSCRIBEDPROGRAMSET_ID_ASC', 'PROGRAMSETS_SUBSCRIBEDPROGRAMSET_ID_DESC')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SubscriptionListSortOrder.__choices__","title":"<code>__choices__ = ('CREATEDAT_ASC', 'CREATEDAT_DESC', 'MODIFIEDAT_ASC', 'MODIFIEDAT_DESC', 'PROGRAMSETS_CREATEDAT_ASC', 'PROGRAMSETS_CREATEDAT_DESC', 'PROGRAMSETS_LASTVISITEDAT_ASC', 'PROGRAMSETS_LASTVISITEDAT_DESC', 'PROGRAMSETS_MODIFIEDAT_ASC', 'PROGRAMSETS_MODIFIEDAT_DESC', 'PROGRAMSETS_SUBSCRIBEDAT_ASC', 'PROGRAMSETS_SUBSCRIBEDAT_DESC', 'PROGRAMSETS_SUBSCRIBEDPROGRAMSET_ID_ASC', 'PROGRAMSETS_SUBSCRIBEDPROGRAMSET_ID_DESC')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SubscriptionListSortOrder.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SubscriptionListUpdateInput","title":"<code>SubscriptionListUpdateInput</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class SubscriptionListUpdateInput(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('client_mutation_id', 'id', 'program_sets')\n    client_mutation_id = sgqlc.types.Field(\n        String, graphql_name='clientMutationId')\n    id = sgqlc.types.Field(sgqlc.types.non_null(ID), graphql_name='id')\n    program_sets = sgqlc.types.Field(sgqlc.types.list_of(\n        ProgramSetSubscriptionCreateInput), graphql_name='programSets')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SubscriptionListUpdateInput.__field_names__","title":"<code>__field_names__ = ('client_mutation_id', 'id', 'program_sets')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SubscriptionListUpdateInput.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SubscriptionListUpdateInput.client_mutation_id","title":"<code>client_mutation_id = sgqlc.types.Field(String, graphql_name='clientMutationId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SubscriptionListUpdateInput.id","title":"<code>id = sgqlc.types.Field(sgqlc.types.non_null(ID), graphql_name='id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SubscriptionListUpdateInput.program_sets","title":"<code>program_sets = sgqlc.types.Field(sgqlc.types.list_of(ProgramSetSubscriptionCreateInput), graphql_name='programSets')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.System","title":"<code>System</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code>, <code>SystemInterface</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class System(sgqlc.types.Type, SystemInterface):\n    __schema__ = audiothek_schema\n    __field_names__ = ()\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.System.__field_names__","title":"<code>__field_names__ = ()</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.System.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SystemConnection","title":"<code>SystemConnection</code>","text":"<p>         Bases: <code>sgqlc.types.relay.Connection</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class SystemConnection(sgqlc.types.relay.Connection):\n    __schema__ = audiothek_schema\n    __field_names__ = ('count', 'edges', 'nodes', 'page_info')\n    count = sgqlc.types.Field(Int, graphql_name='count')\n    edges = sgqlc.types.Field(sgqlc.types.list_of(\n        'SystemEdge'), graphql_name='edges')\n    nodes = sgqlc.types.Field(sgqlc.types.list_of(\n        'SystemInterface'), graphql_name='nodes')\n    page_info = sgqlc.types.Field(\n        sgqlc.types.non_null(PageInfo), graphql_name='pageInfo')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SystemConnection.__field_names__","title":"<code>__field_names__ = ('count', 'edges', 'nodes', 'page_info')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SystemConnection.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SystemConnection.count","title":"<code>count = sgqlc.types.Field(Int, graphql_name='count')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SystemConnection.edges","title":"<code>edges = sgqlc.types.Field(sgqlc.types.list_of('SystemEdge'), graphql_name='edges')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SystemConnection.nodes","title":"<code>nodes = sgqlc.types.Field(sgqlc.types.list_of('SystemInterface'), graphql_name='nodes')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SystemConnection.page_info","title":"<code>page_info = sgqlc.types.Field(sgqlc.types.non_null(PageInfo), graphql_name='pageInfo')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SystemConnectionFilterB","title":"<code>SystemConnectionFilterB</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class SystemConnectionFilterB(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('empty', 'contains')\n    empty = sgqlc.types.Field(BooleanFilterB, graphql_name='empty')\n    contains = sgqlc.types.Field(ID, graphql_name='contains')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SystemConnectionFilterB.__field_names__","title":"<code>__field_names__ = ('empty', 'contains')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SystemConnectionFilterB.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SystemConnectionFilterB.contains","title":"<code>contains = sgqlc.types.Field(ID, graphql_name='contains')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SystemConnectionFilterB.empty","title":"<code>empty = sgqlc.types.Field(BooleanFilterB, graphql_name='empty')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SystemEdge","title":"<code>SystemEdge</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class SystemEdge(sgqlc.types.Type):\n    __schema__ = audiothek_schema\n    __field_names__ = ('cursor', 'node')\n    cursor = sgqlc.types.Field(\n        sgqlc.types.non_null(String), graphql_name='cursor')\n    node = sgqlc.types.Field('SystemInterface', graphql_name='node')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SystemEdge.__field_names__","title":"<code>__field_names__ = ('cursor', 'node')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SystemEdge.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SystemEdge.cursor","title":"<code>cursor = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='cursor')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SystemEdge.node","title":"<code>node = sgqlc.types.Field('SystemInterface', graphql_name='node')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SystemInterface","title":"<code>SystemInterface</code>","text":"<p>         Bases: <code>sgqlc.types.Interface</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class SystemInterface(sgqlc.types.Interface):\n    __schema__ = audiothek_schema\n    __field_names__ = ('id', 'base_id_prefix')\n    id = sgqlc.types.Field(sgqlc.types.non_null(ID), graphql_name='id')\n    base_id_prefix = sgqlc.types.Field(\n        sgqlc.types.non_null(String), graphql_name='baseIdPrefix')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SystemInterface.__field_names__","title":"<code>__field_names__ = ('id', 'base_id_prefix')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SystemInterface.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SystemInterface.base_id_prefix","title":"<code>base_id_prefix = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='baseIdPrefix')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SystemInterface.id","title":"<code>id = sgqlc.types.Field(sgqlc.types.non_null(ID), graphql_name='id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SystemRelationFilterB","title":"<code>SystemRelationFilterB</code>","text":"<p>         Bases: <code>sgqlc.types.Input</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class SystemRelationFilterB(sgqlc.types.Input):\n    __schema__ = audiothek_schema\n    __field_names__ = ('id', 'exists')\n    id = sgqlc.types.Field(IDFilterB, graphql_name='id')\n    exists = sgqlc.types.Field(BooleanFilterB, graphql_name='exists')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SystemRelationFilterB.__field_names__","title":"<code>__field_names__ = ('id', 'exists')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SystemRelationFilterB.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SystemRelationFilterB.exists","title":"<code>exists = sgqlc.types.Field(BooleanFilterB, graphql_name='exists')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.SystemRelationFilterB.id","title":"<code>id = sgqlc.types.Field(IDFilterB, graphql_name='id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Teaser","title":"<code>Teaser</code>","text":"<p>         Bases: <code>sgqlc.types.Interface</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class Teaser(sgqlc.types.Interface):\n    __schema__ = audiothek_schema\n    __field_names__ = ('id', 'title', 'synopsis', 'image', 'url',\n                       'sharing_url', 'path', 'number_of_elements', 'tracking')\n    id = sgqlc.types.Field(sgqlc.types.non_null(ID), graphql_name='id')\n    title = sgqlc.types.Field(\n        sgqlc.types.non_null(String), graphql_name='title')\n    synopsis = sgqlc.types.Field(String, graphql_name='synopsis')\n    image = sgqlc.types.Field(ImageType, graphql_name='image')\n    url = sgqlc.types.Field(String, graphql_name='url', args=sgqlc.types.ArgDict((\n        ('variant', sgqlc.types.Arg(UrlVariant, graphql_name='variant', default=None)),\n    ))\n    )\n    sharing_url = sgqlc.types.Field(URL, graphql_name='sharingUrl')\n    path = sgqlc.types.Field(String, graphql_name='path')\n    number_of_elements = sgqlc.types.Field(\n        Int, graphql_name='numberOfElements')\n    tracking = sgqlc.types.Field(JSON, graphql_name='tracking')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Teaser.__field_names__","title":"<code>__field_names__ = ('id', 'title', 'synopsis', 'image', 'url', 'sharing_url', 'path', 'number_of_elements', 'tracking')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Teaser.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Teaser.id","title":"<code>id = sgqlc.types.Field(sgqlc.types.non_null(ID), graphql_name='id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Teaser.image","title":"<code>image = sgqlc.types.Field(ImageType, graphql_name='image')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Teaser.number_of_elements","title":"<code>number_of_elements = sgqlc.types.Field(Int, graphql_name='numberOfElements')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Teaser.path","title":"<code>path = sgqlc.types.Field(String, graphql_name='path')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Teaser.sharing_url","title":"<code>sharing_url = sgqlc.types.Field(URL, graphql_name='sharingUrl')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Teaser.synopsis","title":"<code>synopsis = sgqlc.types.Field(String, graphql_name='synopsis')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Teaser.title","title":"<code>title = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='title')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Teaser.tracking","title":"<code>tracking = sgqlc.types.Field(JSON, graphql_name='tracking')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Teaser.url","title":"<code>url = sgqlc.types.Field(String, graphql_name='url', args=sgqlc.types.ArgDict((('variant', sgqlc.types.Arg(UrlVariant, graphql_name='variant', default=None)))))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.TeaserTypeATG","title":"<code>TeaserTypeATG</code>","text":"<p>         Bases: <code>sgqlc.types.Enum</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class TeaserTypeATG(sgqlc.types.Enum):\n    __schema__ = audiothek_schema\n    __choices__ = ('EditorialCategory', 'EditorialCollection',\n                   'EventLivestream', 'Item', 'ProgramSet', 'SophoraTeaser')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.TeaserTypeATG.__choices__","title":"<code>__choices__ = ('EditorialCategory', 'EditorialCollection', 'EventLivestream', 'Item', 'ProgramSet', 'SophoraTeaser')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.TeaserTypeATG.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Transcript","title":"<code>Transcript</code>","text":"<p>         Bases: <code>sgqlc.types.Type</code>, <code>Node</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class Transcript(sgqlc.types.Type, Node):\n    __schema__ = audiothek_schema\n    __field_names__ = ('item_id', 'xml', 'data',\n                       'last_updated_at', 'item', 'start', 'end', 'text')\n    item_id = sgqlc.types.Field(\n        sgqlc.types.non_null(Int), graphql_name='itemId')\n    xml = sgqlc.types.Field(String, graphql_name='xml')\n    data = sgqlc.types.Field(JSON, graphql_name='data')\n    last_updated_at = sgqlc.types.Field(\n        sgqlc.types.non_null(Datetime), graphql_name='lastUpdatedAt')\n    item = sgqlc.types.Field(Item, graphql_name='item')\n    start = sgqlc.types.Field(String, graphql_name='start')\n    end = sgqlc.types.Field(String, graphql_name='end')\n    text = sgqlc.types.Field(String, graphql_name='text')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Transcript.__field_names__","title":"<code>__field_names__ = ('item_id', 'xml', 'data', 'last_updated_at', 'item', 'start', 'end', 'text')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Transcript.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Transcript.data","title":"<code>data = sgqlc.types.Field(JSON, graphql_name='data')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Transcript.end","title":"<code>end = sgqlc.types.Field(String, graphql_name='end')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Transcript.item","title":"<code>item = sgqlc.types.Field(Item, graphql_name='item')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Transcript.item_id","title":"<code>item_id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='itemId')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Transcript.last_updated_at","title":"<code>last_updated_at = sgqlc.types.Field(sgqlc.types.non_null(Datetime), graphql_name='lastUpdatedAt')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Transcript.start","title":"<code>start = sgqlc.types.Field(String, graphql_name='start')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Transcript.text","title":"<code>text = sgqlc.types.Field(String, graphql_name='text')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.Transcript.xml","title":"<code>xml = sgqlc.types.Field(String, graphql_name='xml')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.URI","title":"<code>URI</code>","text":"<p>         Bases: <code>sgqlc.types.Scalar</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class URI(sgqlc.types.Scalar):\n    __schema__ = audiothek_schema\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.URI.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.URL","title":"<code>URL</code>","text":"<p>         Bases: <code>sgqlc.types.Scalar</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class URL(sgqlc.types.Scalar):\n    __schema__ = audiothek_schema\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.URL.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.UrlVariant","title":"<code>UrlVariant</code>","text":"<p>         Bases: <code>sgqlc.types.Enum</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class UrlVariant(sgqlc.types.Enum):\n    __schema__ = audiothek_schema\n    __choices__ = ('API', 'SHARING', 'WEB')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.UrlVariant.__choices__","title":"<code>__choices__ = ('API', 'SHARING', 'WEB')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.UrlVariant.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.WidgetDisplayVariant","title":"<code>WidgetDisplayVariant</code>","text":"<p>         Bases: <code>sgqlc.types.Enum</code></p> Source code in <code>src/libaudiothek/audiothek_schema.py</code> <pre><code>class WidgetDisplayVariant(sgqlc.types.Enum):\n    __schema__ = audiothek_schema\n    __choices__ = ('COLLAPSIBLE_GRID', 'DEFAULT', 'GRID', 'SLIDER')\n</code></pre>"},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.WidgetDisplayVariant.__choices__","title":"<code>__choices__ = ('COLLAPSIBLE_GRID', 'DEFAULT', 'GRID', 'SLIDER')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"audiothek_schema/#libaudiothek.audiothek_schema.WidgetDisplayVariant.__schema__","title":"<code>__schema__ = audiothek_schema</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"libaudiothek/","title":"The libaudiothek classes","text":"<p>libaudiothek \u2014 A Python library to access the audiothek.de API This library provides a Python interface to the ARD Audiothek API.</p>"},{"location":"libaudiothek/#libaudiothek.libaudiothek.Audiothek","title":"<code>Audiothek</code>","text":"<p>A class used to request data from the ARD Audiothek API</p> Source code in <code>src/libaudiothek/libaudiothek.py</code> <pre><code>class Audiothek:\n\"\"\"A class used to request data from the ARD Audiothek API\"\"\"\n\n    def __init__(self) -&gt; None:\n        self.endpoint: HTTPEndpoint = HTTPEndpoint(URL)\n        self.op: Operation = Operation(schema.query_type)\n\n    def __process_items(self, items: any) -&gt; list[AudiothekEntry]:\n        entries = []\n        for node in items:\n            entry: AudiothekEntry = AudiothekEntry(\n                entry_id=node.id,\n                title=node.title,\n                entry_type=AudiothekEntryType.ITEM,\n                program_id=node.program_set.publication_service.row_id,\n                publish_date=node.publish_date,\n                publisher=node.program_set.publication_service.title,\n                organization=node.program_set.publication_service.organization_name,\n            )\n\n            for audio in node.audios:\n                entry.media.append(\n                    AudiothekEntryMedia(audio.url)\n                )\n            entries.append(entry)\n        return entries\n\n    def __process_program_sets(self, items: any) -&gt; list[AudiothekEntry]:\n        entries = []\n        for node in items:\n            entry: AudiothekEntry = AudiothekEntry(\n                entry_id=node.id,\n                title=node.title,\n                entry_type=AudiothekEntryType.PROGRAM,\n                program_id=node.id,\n                publish_date=node.last_item_added,\n                publisher=node.publication_service.title,\n                organization=node.publication_service.organization_name,\n            )\n            entries.append(entry)\n        return entries\n\n    def search(self, term: str) -&gt; AudiothekSearchResult:\n\"\"\"Searches the Audiothek for the given string and returns the results.\n\n        Args:\n        term (str): The string to search for in the Audiothek\n\n        Returns:\n            list[AudiothekEntry]\n                A list of AudiothekEntry returned by the API\n\n        Examples:\n            Searching for \"WDR\" will return an AudiothekSearchResult with multiple AudiothekEntry objects\n            &gt;&gt;&gt; audiothek = Audiothek()\n            &gt;&gt;&gt; res = audiothek.search(\"WDR\")\n            &gt;&gt;&gt; print(res.result_count)\n            &gt;&gt;&gt; print(res.items[0])\n        \"\"\"\n\n        search = self.op.search(query=term)\n\n        # retrieve the fields needed for the items\n        search.items().nodes.__fields__(\n            'id', 'title', 'publish_date', 'description', 'synopsis', 'url')\n        search.items().nodes().audios()\n\n        # retrieve the fields needed for the program sets\n        search.items().nodes().program_set.__fields__(\n            'row_id', 'title', 'synopsis', 'description', 'sharing_url')\n        search.items().nodes().program_set().publication_service()\n        search.program_sets().nodes().__fields__(\n            'id', 'title', 'description', 'synopsis', 'sharing_url', 'last_item_added')\n        search.program_sets().nodes().publication_service()\n\n        data = self.endpoint(self.op)\n        obj = (self.op + data)\n\n        items: list[AudiothekEntry] = self.__process_items(\n            obj.search.items.nodes)\n        program_sets: list[AudiothekEntry] = self.__process_program_sets(\n            obj.search.program_sets.nodes)\n        res: AudiothekSearchResult = AudiothekSearchResult(items, program_sets)\n\n        return res\n</code></pre>"},{"location":"libaudiothek/#libaudiothek.libaudiothek.Audiothek.search","title":"<code>search(term)</code>","text":"<p>Searches the Audiothek for the given string and returns the results.</p> <p>term (str): The string to search for in the Audiothek</p> <p>Returns:</p> Type Description <code>AudiothekSearchResult</code> <p>list[AudiothekEntry] A list of AudiothekEntry returned by the API</p> <p>Examples:</p> <p>Searching for \"WDR\" will return an AudiothekSearchResult with multiple AudiothekEntry objects</p> <pre><code>&gt;&gt;&gt; audiothek = Audiothek()\n&gt;&gt;&gt; res = audiothek.search(\"WDR\")\n&gt;&gt;&gt; print(res.result_count)\n&gt;&gt;&gt; print(res.items[0])\n</code></pre> Source code in <code>src/libaudiothek/libaudiothek.py</code> <pre><code>def search(self, term: str) -&gt; AudiothekSearchResult:\n\"\"\"Searches the Audiothek for the given string and returns the results.\n\n    Args:\n    term (str): The string to search for in the Audiothek\n\n    Returns:\n        list[AudiothekEntry]\n            A list of AudiothekEntry returned by the API\n\n    Examples:\n        Searching for \"WDR\" will return an AudiothekSearchResult with multiple AudiothekEntry objects\n        &gt;&gt;&gt; audiothek = Audiothek()\n        &gt;&gt;&gt; res = audiothek.search(\"WDR\")\n        &gt;&gt;&gt; print(res.result_count)\n        &gt;&gt;&gt; print(res.items[0])\n    \"\"\"\n\n    search = self.op.search(query=term)\n\n    # retrieve the fields needed for the items\n    search.items().nodes.__fields__(\n        'id', 'title', 'publish_date', 'description', 'synopsis', 'url')\n    search.items().nodes().audios()\n\n    # retrieve the fields needed for the program sets\n    search.items().nodes().program_set.__fields__(\n        'row_id', 'title', 'synopsis', 'description', 'sharing_url')\n    search.items().nodes().program_set().publication_service()\n    search.program_sets().nodes().__fields__(\n        'id', 'title', 'description', 'synopsis', 'sharing_url', 'last_item_added')\n    search.program_sets().nodes().publication_service()\n\n    data = self.endpoint(self.op)\n    obj = (self.op + data)\n\n    items: list[AudiothekEntry] = self.__process_items(\n        obj.search.items.nodes)\n    program_sets: list[AudiothekEntry] = self.__process_program_sets(\n        obj.search.program_sets.nodes)\n    res: AudiothekSearchResult = AudiothekSearchResult(items, program_sets)\n\n    return res\n</code></pre>"},{"location":"libaudiothek/#libaudiothek.libaudiothek.AudiothekEntry","title":"<code>AudiothekEntry</code>","text":"<p>A class used to represent an entry found in the Audiothek</p> <p>Parameters:</p> Name Type Description Default <code>entry_id</code> <code>int</code> <p>The ID of the item as it is returned by Audiothek</p> required <code>title</code> <code>str</code> <p>The title of the item</p> required <code>entry_type</code> <code>AudiothekEntryType</code> <p>The type of the entry</p> required <code>program_id</code> <code>int</code> <p>The ID of the program associated with the item</p> required <code>publish_date</code> <code>datetime</code> <p>The date when an element was published</p> <code>datetime.fromtimestamp(0)</code> <code>publisher</code> <code>str</code> <p>The station that published the media</p> <code>''</code> <code>organization</code> <code>str</code> <p>The organization (Sendeanstalt) that published the media</p> <code>''</code> <code>media</code> <code>list[AudiothekEntryMedia]</code> <p>A list of media elements linked to the element</p> <code>None</code> Source code in <code>src/libaudiothek/libaudiothek.py</code> <pre><code>class AudiothekEntry:\n\"\"\"A class used to represent an entry found in the Audiothek\n    Args:\n        entry_id (int): The ID of the item as it is returned by Audiothek\n        title (str): The title of the item\n        entry_type (AudiothekEntryType): The type of the entry\n        program_id (int): The ID of the program associated with the item\n        publish_date (datetime): The date when an element was published\n        publisher (str): The station that published the media\n        organization (str): The organization (Sendeanstalt) that published the media\n        media (list[AudiothekEntryMedia]): A list of media elements linked to the element\n\n    \"\"\"\n\n    def __init__(self, entry_id: int,\n                 title: str,\n                 entry_type: AudiothekEntryType,\n                 program_id: int,\n                 publish_date: datetime = datetime.fromtimestamp(0),\n                 publisher: str = \"\",\n                 organization: str = \"\",\n                 media: list[AudiothekEntryMedia] = None) -&gt; None:\n\"\"\" Initializes an AudiothekEntry\n        Args:\n            entry_id (int): The ID of the item as it is returned by Audiothek\n            title (str): The title of the item\n            entry_type (AudiothekEntryType): The type of the entry\n            program_id (int): The ID of the program associated with the item\n            publish_date (datetime): The date when an element was published\n            publisher (str): The station that published the media\n            organization (str): The organization (Sendeanstalt) that published the media\n            media (list[AudiothekEntryMedia]): A list of media elements linked to the element\n        \"\"\"\n\n        self.entry_id: int = entry_id\n        self.title: str = title\n        self.entry_type: AudiothekEntryType = entry_type\n        self.program_id: int = program_id\n        self.publish_date: datetime = publish_date\n        self.publisher: str = publisher\n        self.organization: str = organization\n        self.media: list[AudiothekEntryMedia] = media or []\n\n    def __str__(self):\n        return f'{self.entry_type} - Title: {self.title}, Type: {self.entry_type}, ID: {self.entry_id}, Publication date: {self.publish_date}'\n\n    def __repr__(self):\n        return f'{self.entry_type} - Title: {self.title}, Type: {self.entry_type}, ID: {self.entry_id}, Publication date: {self.publish_date}'\n\n    entry_id = int\n    title = str\n    entry_type = AudiothekEntryType\n    program_id = int\n    publish_date = datetime\n    publisher = str\n    organization = str\n    media = [AudiothekEntryMedia]\n    description = str\n    synopsis = str\n</code></pre>"},{"location":"libaudiothek/#libaudiothek.libaudiothek.AudiothekEntry.__init__","title":"<code>__init__(entry_id, title, entry_type, program_id, publish_date=datetime.fromtimestamp(0), publisher='', organization='', media=None)</code>","text":"<p>Initializes an AudiothekEntry</p> <p>Parameters:</p> Name Type Description Default <code>entry_id</code> <code>int</code> <p>The ID of the item as it is returned by Audiothek</p> required <code>title</code> <code>str</code> <p>The title of the item</p> required <code>entry_type</code> <code>AudiothekEntryType</code> <p>The type of the entry</p> required <code>program_id</code> <code>int</code> <p>The ID of the program associated with the item</p> required <code>publish_date</code> <code>datetime</code> <p>The date when an element was published</p> <code>datetime.fromtimestamp(0)</code> <code>publisher</code> <code>str</code> <p>The station that published the media</p> <code>''</code> <code>organization</code> <code>str</code> <p>The organization (Sendeanstalt) that published the media</p> <code>''</code> <code>media</code> <code>list[AudiothekEntryMedia]</code> <p>A list of media elements linked to the element</p> <code>None</code> Source code in <code>src/libaudiothek/libaudiothek.py</code> <pre><code>def __init__(self, entry_id: int,\n             title: str,\n             entry_type: AudiothekEntryType,\n             program_id: int,\n             publish_date: datetime = datetime.fromtimestamp(0),\n             publisher: str = \"\",\n             organization: str = \"\",\n             media: list[AudiothekEntryMedia] = None) -&gt; None:\n\"\"\" Initializes an AudiothekEntry\n    Args:\n        entry_id (int): The ID of the item as it is returned by Audiothek\n        title (str): The title of the item\n        entry_type (AudiothekEntryType): The type of the entry\n        program_id (int): The ID of the program associated with the item\n        publish_date (datetime): The date when an element was published\n        publisher (str): The station that published the media\n        organization (str): The organization (Sendeanstalt) that published the media\n        media (list[AudiothekEntryMedia]): A list of media elements linked to the element\n    \"\"\"\n\n    self.entry_id: int = entry_id\n    self.title: str = title\n    self.entry_type: AudiothekEntryType = entry_type\n    self.program_id: int = program_id\n    self.publish_date: datetime = publish_date\n    self.publisher: str = publisher\n    self.organization: str = organization\n    self.media: list[AudiothekEntryMedia] = media or []\n</code></pre>"},{"location":"libaudiothek/#libaudiothek.libaudiothek.AudiothekEntryMedia","title":"<code>AudiothekEntryMedia</code>","text":"<p>A class used to represent a media file associated with an item.</p> <p>Parameters:</p> Name Type Description Default <code>media_url</code> <code>str</code> <p>An url that points to the media file</p> required Source code in <code>src/libaudiothek/libaudiothek.py</code> <pre><code>class AudiothekEntryMedia:\n\"\"\"\n    A class used to represent a media file associated with an item.\n\n    Args:\n        media_url (str): An url that points to the media file\n    \"\"\"\n\n    def __init__(self, media_url: str) -&gt; None:\n\"\"\"\n        Parameters\n        ----------\n        url (str): The url of the media file\n        \"\"\"\n        self.url: str = media_url\n\n    url = str\n</code></pre>"},{"location":"libaudiothek/#libaudiothek.libaudiothek.AudiothekEntryMedia.__init__","title":"<code>__init__(media_url)</code>","text":""},{"location":"libaudiothek/#libaudiothek.libaudiothek.AudiothekEntryMedia.__init__--parameters","title":"Parameters","text":"<p>url (str): The url of the media file</p> Source code in <code>src/libaudiothek/libaudiothek.py</code> <pre><code>def __init__(self, media_url: str) -&gt; None:\n\"\"\"\n    Parameters\n    ----------\n    url (str): The url of the media file\n    \"\"\"\n    self.url: str = media_url\n</code></pre>"},{"location":"libaudiothek/#libaudiothek.libaudiothek.AudiothekEntryType","title":"<code>AudiothekEntryType</code>","text":"<p>         Bases: <code>Enum</code></p> <p>A enum class used to represent the type of an AudiothekEntry.</p> Source code in <code>src/libaudiothek/libaudiothek.py</code> <pre><code>class AudiothekEntryType(Enum):\n\"\"\"A enum class used to represent the type of an AudiothekEntry.\"\"\"\n    ITEM = 0\n\"\"\"Represents a single item\"\"\"\n    PROGRAM = 1\n\"\"\"Represents a program containing multiple items\"\"\"\n    CATEGORY = 2\n\"\"\"Represents a category of multiple programs\"\"\"\n    COLLECTION = 3\n\"\"\"Represents a collection of multiple programs\"\"\"\n</code></pre>"},{"location":"libaudiothek/#libaudiothek.libaudiothek.AudiothekEntryType.CATEGORY","title":"<code>CATEGORY = 2</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Represents a category of multiple programs</p>"},{"location":"libaudiothek/#libaudiothek.libaudiothek.AudiothekEntryType.COLLECTION","title":"<code>COLLECTION = 3</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Represents a collection of multiple programs</p>"},{"location":"libaudiothek/#libaudiothek.libaudiothek.AudiothekEntryType.ITEM","title":"<code>ITEM = 0</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Represents a single item</p>"},{"location":"libaudiothek/#libaudiothek.libaudiothek.AudiothekEntryType.PROGRAM","title":"<code>PROGRAM = 1</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Represents a program containing multiple items</p>"},{"location":"libaudiothek/#libaudiothek.libaudiothek.AudiothekSearchResult","title":"<code>AudiothekSearchResult</code>","text":"<p>The result of a search of the Audiothek API</p> <p>Parameters:</p> Name Type Description Default <code>items</code> <code>list[AudiothekEntry]</code> <p>A list of items found by the search</p> required <code>program_sets</code> <code>list[AudiothekEntry]</code> <p>A list of programs found by the search</p> required <code>result_count</code> <code>int</code> <p>The total number of results found by the search</p> required Source code in <code>src/libaudiothek/libaudiothek.py</code> <pre><code>class AudiothekSearchResult:\n\"\"\"The result of a search of the Audiothek API\n        Args:\n            items (list[AudiothekEntry]): A list of items found by the search\n            program_sets (list[AudiothekEntry]): A list of programs found by the search\n            result_count (int): The total number of results found by the search\n    \"\"\"\n\n    def __init__(self, items: list[AudiothekEntry], program_sets: list[AudiothekEntry]) -&gt; None:\n\"\"\"Initializes an AudiothekSearchResult\n        Args:\n            items (list[AudiothekEntry]): A list of items found by the search\n            program_sets (list[AudiothekEntry]): A list of programs found by the search\n        \"\"\"\n        self.items: list[AudiothekEntry] = items\n        self.program_sets: list[AudiothekEntry] = program_sets\n        self.result_count: int = len(items) + len(program_sets)\n\n    items = [AudiothekEntry]\n    program_sets = [AudiothekEntry]\n    result_count = int\n</code></pre>"},{"location":"libaudiothek/#libaudiothek.libaudiothek.AudiothekSearchResult.__init__","title":"<code>__init__(items, program_sets)</code>","text":"<p>Initializes an AudiothekSearchResult</p> <p>Parameters:</p> Name Type Description Default <code>items</code> <code>list[AudiothekEntry]</code> <p>A list of items found by the search</p> required <code>program_sets</code> <code>list[AudiothekEntry]</code> <p>A list of programs found by the search</p> required Source code in <code>src/libaudiothek/libaudiothek.py</code> <pre><code>def __init__(self, items: list[AudiothekEntry], program_sets: list[AudiothekEntry]) -&gt; None:\n\"\"\"Initializes an AudiothekSearchResult\n    Args:\n        items (list[AudiothekEntry]): A list of items found by the search\n        program_sets (list[AudiothekEntry]): A list of programs found by the search\n    \"\"\"\n    self.items: list[AudiothekEntry] = items\n    self.program_sets: list[AudiothekEntry] = program_sets\n    self.result_count: int = len(items) + len(program_sets)\n</code></pre>"}]}